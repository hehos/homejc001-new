@charset "UTF-8";
/* 百科相关页面样式 */
.side-form .form-tips {
  text-align: center; }

.layout-main .title-bar {
  border-bottom: 1px solid #eceeef; }

.index-baike-list em, #location em, .hot-photos em {
  margin: 0 3px;
  color: #bd0401; }

.index-baike-list em {
  font-weight: bold; }

.index-top-cates {
  margin-left: -0.7%; }
  .index-top-cates .cate {
    float: left;
    width: 32.63333%;
    padding: 1em 0;
    margin-left: 0.7%;
    background-color: #fbfbfb;
    border: 1px solid #eceeef; }
  .index-top-cates .left-glyph {
    height: 4.92857em;
    text-align: center;
    padding: 0 2.07143em;
    vertical-align: middle;
    border-right: 1px solid #eceeef;
    color: #bd0401; }
    .index-top-cates .left-glyph p {
      white-space: nowrap;
      margin-top: 13px;
      font-size: 1.14286em;
      font-weight: bold; }
  .index-top-cates .label-cate {
    padding: 0 1.78571em; }
    .index-top-cates .label-cate .label {
      margin-top: 0;
      margin-bottom: 0; }
  .index-top-cates .label-title {
    color: #6f787f;
    font-size: 1.16667em;
    margin-top: .2em; }

.index-baike-list {
  padding: 1.07143em 1.71429em;
  border: 1px solid #eceeef; }
  .index-baike-list .media-newsitem {
    padding-bottom: 2.8em;
    border-bottom: 1px dashed #eceeef; }
  .index-baike-list .media-title {
    font-size: 1.45em;
    margin-bottom: .8em; }
  .index-baike-list .thumbnail {
    padding: 1px;
    border: 1px solid #eceeef; }
  .index-baike-list .img-title {
    line-height: 24px;
    text-align: center;
    margin-top: 1px;
    font-size: 0.85714em;
    background-color: #fbfbfb; }
  .index-baike-list .media-text {
    line-height: 2.14286em; }
  .index-baike-list .media-other i {
    margin: 0 0 0 5px; }
  .index-baike-list .labels {
    line-height: 1.8;
    margin-bottom: 1em;
    overflow: hidden;
    font-size: 0.85714em;
    color: #373a3c; }
    .index-baike-list .labels a {
      float: left;
      margin-right: 4px;
      padding: 0 .8em;
      border: 1px solid #dddddd;
      border-radius: 10px;
      background-color: #f2f3f4; }
  .index-baike-list .media-newsitem .media-other {
    bottom: -2.0em; }

.yuyue-form {
  background-color: #f8f8f8; }
  .yuyue-form .form-tab li:hover, .yuyue-form .form-tab li.on {
    background-color: #fff; }

.rd-zx-tabs .tabs-base li {
  width: 50%; }
  .rd-zx-tabs .tabs-base li.on, .rd-zx-tabs .tabs-base li:hover {
    font-weight: bold; }
.rd-zx-tabs .list-group-item {
  margin-bottom: 0;
  border-bottom: 1px dashed #dddddd;
  color: #55595c;
  font-size: 0.85714em; }
  .rd-zx-tabs .list-group-item .right-info {
    color: #55595c; }

.hot-brands .label-bar {
  line-height: 1.4;
  padding: 0.71429em 0.42857em;
  border-bottom: 1px solid #eceeef; }
.hot-brands .label {
  margin-right: 1.2em; }
.hot-brands .item-labels {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0.85714em 0.42857em;
  line-height: 1;
  color: #55595c; }
  .hot-brands .item-labels span {
    display: inline-block;
    padding: 0 12px; }
    .hot-brands .item-labels span:first-child {
      font-weight: bold;
      padding-left: 0;
      border-right: 1px solid #eceeef; }
  .hot-brands .item-labels .right-info {
    font-size: 0.85714em;
    color: #818a91; }
.hot-brands .item .icon-minus, .hot-brands .item .label-bar {
  display: none; }
.hot-brands .item.on .item-labels {
  background-color: #f8f8f8; }
  .hot-brands .item.on .item-labels span:first-child {
    color: #bd0401; }
.hot-brands .item.on .icon-plus {
  display: none; }
.hot-brands .item.on .icon-minus {
  display: inline-block; }
.hot-brands .item.on .label-bar {
  display: block;
  height: auto; }

.hot-photos .cont-block:before, .hot-photos .cont-block:after {
  content: " ";
  display: table; }
.hot-photos .cont-block:after {
  clear: both; }
.hot-photos .media-base {
  float: left;
  width: 50%;
  padding: 0 1em;
  margin-bottom: 0.71429em; }
  .hot-photos .media-base .thumbnail, .hot-photos .media-base .img {
    padding: 2px 3px; }
.hot-photos .media-explain {
  font-size: 0.85714em; }

.newstype-detail {
  border: 1px solid #eceeef; }

.ask-top-cate .cate-tabs {
  background-color: #f8f8f8; }
.ask-top-cate .tabs-nav1 > li a {
  border-color: #eceeef; }
.ask-top-cate .tabs-nav1 > li.on a, .ask-top-cate .tabs-nav1 > li:hover a {
  color: #bd0401;
  font-weight: bold;
  background-color: #fff;
  border-bottom-color: transparent; }
.ask-top-cate .cate-conts {
  border: 1px solid #eceeef;
  border-top: none; }
  .ask-top-cate .cate-conts .label {
    color: #55595c; }
.ask-top-cate .label-bar {
  padding-top: .4em;
  padding-bottom: .4em; }
  .ask-top-cate .label-bar + .label-bar {
    display: none; }

.ask-search-bar {
  margin-bottom: 25px; }
  .ask-search-bar .search-bar .search-form-box {
    border-color: #dddddd;
    line-height: 3.07143em; }
  .ask-search-bar .search-bar .search-btn {
    letter-spacing: normal;
    padding-right: 1.8em;
    background-color: #dddddd;
    color: #373a3c;
    font-size: 1.28571em; }

.index-ask-daily .slider {
  float: left;
  width: 23.78571em;
  height: 19em;
  margin-right: 1.35714em;
  margin-top: 0; }
.index-ask-daily .txtlist {
  line-height: 2.4; }
  .index-ask-daily .txtlist h4 {
    margin-bottom: 0.66667em;
    font-size: 1.28571em;
    font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu; }
  .index-ask-daily .txtlist .big-item {
    padding-bottom: 1.07143em;
    margin-bottom: 10px;
    border-bottom: 1px solid #f8f8f8;
    line-height: 1.4;
    white-space: normal; }
  .index-ask-daily .txtlist p {
    line-height: 1.8;
    color: #55595c;
    font-size: 0.85714em; }
  .index-ask-daily .txtlist em {
    color: #bd0401; }

.index-ask-new em, .ask-list-box em {
  color: #bd0401; }
.index-ask-new b, .ask-list-box b {
  color: #91b81d; }
.index-ask-new .list-group-item, .ask-list-box .list-group-item {
  padding: 1.85714em 0;
  border-bottom: 1px solid #eceeef; }
.index-ask-new .list-group-item-title, .ask-list-box .list-group-item-title {
  margin-bottom: 1.35714em;
  font-size: 1.14286em; }
.index-ask-new .right-info, .ask-list-box .right-info {
  font-size: 0.85714em; }
  .index-ask-new .right-info span, .ask-list-box .right-info span {
    margin-left: 2.14286em; }
  .index-ask-new .right-info em, .ask-list-box .right-info em {
    font-weight: bold; }
  .index-ask-new .right-info i, .ask-list-box .right-info i {
    margin-right: 0.35714em;
    vertical-align: middle;
    font-size: 1.14286em; }

.index-ask-new .title-bar {
  margin-bottom: 0; }

.ask-list-box .list-group-item-title em {
  display: inline-block;
  margin-right: 0.71429em;
  padding: 0 .8em;
  font-size: 0.875em;
  line-height: 1.5;
  border-radius: 10px;
  color: #fff;
  background-color: #ff6637; }
.ask-list-box .list-group-item.solved .list-group-item-title em {
  background-color: #91b81d; }

.index-ask-at-issue .ask-at-issue-list:before, .index-ask-at-issue .ask-at-issue-list:after {
  content: " ";
  display: table; }
.index-ask-at-issue .ask-at-issue-list:after {
  clear: both; }
.index-ask-at-issue .issue-item {
  float: left;
  width: 50%;
  padding: 0.57143em 0; }
  .index-ask-at-issue .issue-item .issue-state {
    width: 3em;
    height: 3em;
    line-height: 1.14286em;
    padding: 0.35714em 0;
    margin-right: 1.64286em;
    margin-top: 3px;
    text-align: center;
    color: #fff;
    background-color: #bd0401; }
  .index-ask-at-issue .issue-item .issue-title {
    line-height: 2; }
  .index-ask-at-issue .issue-item .issue-explain {
    color: #818a91;
    font-size: 0.85714em; }

.ask-side-form {
  background-color: #f8f8f8;
  padding-top: 0.92857em; }
  .ask-side-form .form-control {
    display: inline-block; }
  .ask-side-form .asked-num-block {
    text-align: center;
    padding: 1.92857em 1.21429em;
    background-color: #fff;
    margin-bottom: 1.07143em; }
  .ask-side-form .ask-num {
    line-height: 1;
    font-size: 28px;
    color: #fff;
    margin-bottom: 15px; }
    .ask-side-form .ask-num b {
      padding: 0 4px;
      background-color: #01af63;
      margin-left: 3px;
      border-radius: 3px; }
  .ask-side-form .ask-txt {
    color: #818a91; }
  .ask-side-form textarea {
    width: 100%; }
  .ask-side-form .ask-btn-row {
    margin-bottom: 0.71429em; }
    .ask-side-form .ask-btn-row:before, .ask-side-form .ask-btn-row:after {
      content: " ";
      display: table; }
    .ask-side-form .ask-btn-row:after {
      clear: both; }
    .ask-side-form .ask-btn-row > * {
      float: left;
      width: 28%; }
    .ask-side-form .ask-btn-row .ask-btn {
      width: 40%;
      margin-left: 4%; }
    .ask-side-form .ask-btn-row input, .ask-side-form .ask-btn-row button {
      padding: 0.28571em 0.71429em; }

.ask-list-tabs .tabs-base {
  font-weight: bold;
  color: #55595c; }
  .ask-list-tabs .tabs-base li a {
    border-bottom: none;
    margin-bottom: -2px; }
.ask-list-tabs .tabs-base {
  border-bottom: 2px solid #eceeef; }
.ask-list-tabs .tabs-base > li:hover a, .ask-list-tabs .tabs-base > li.on a {
  border-bottom: 2px solid #bd0401; }

.ask-detail .ask-sub-info span, .ask-detail .media-explain span {
  margin-right: 1.42857em; }
  .ask-detail .ask-sub-info span:after, .ask-detail .media-explain span:after {
    content: "";
    padding-right: 1.42857em;
    border-right: 1px solid #eceeef; }
.ask-detail h3 {
  margin-bottom: 1.42857em;
  font-size: 1.28571em;
  font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu; }
.ask-detail .ask-sub-info {
  font-size: 0.85714em;
  line-height: 1;
  margin-bottom: 1.16667em;
  color: #818a91; }
  .ask-detail .ask-sub-info b {
    color: #373a3c; }
.ask-detail .ask-quiz-form {
  padding: 2.14286em 1.42857em;
  background-color: #f8f8f8; }
  .ask-detail .ask-quiz-form textarea {
    width: 100%; }
.ask-detail .quiz-form-sub-info {
  text-align: right;
  margin-top: 0.71429em;
  color: #818a91; }
  .ask-detail .quiz-form-sub-info:before, .ask-detail .quiz-form-sub-info:after {
    content: " ";
    display: table; }
  .ask-detail .quiz-form-sub-info:after {
    clear: both; }
  .ask-detail .quiz-form-sub-info i {
    margin-right: 5px; }
  .ask-detail .quiz-form-sub-info em {
    color: #fd8a17; }

.ask-details-list .title-bar {
  margin-bottom: 0; }
  .ask-details-list .title-bar em {
    color: #bd0401;
    margin: 0 8px; }
.ask-details-list .detail-item {
  position: relative;
  padding: 2.5em 0.71429em 0.71429em;
  border-bottom: 1px dashed #eceeef; }
.ask-details-list .media-small-imgtxt {
  margin-bottom: 1.78571em; }
.ask-details-list .img {
  width: 4em;
  height: 56px;
  line-height: 53.42143px; }
.ask-details-list .media-title {
  font-size: 1em;
  margin-bottom: 1em;
  color: #02ae66; }
.ask-details-list .media-explain {
  font-size: 0.85714em; }
.ask-details-list .detail-cont {
  line-height: 1.8;
  color: #55595c; }
.ask-details-list .bottom-sub-info {
  margin-top: 1.57143em;
  text-align: right;
  color: #818a91; }
  .ask-details-list .bottom-sub-info span {
    margin-left: 1.07143em; }
  .ask-details-list .bottom-sub-info i {
    margin-right: 3px;
    color: #fd8a17; }
.ask-details-list .accepted-icon {
  position: absolute;
  right: 30%;
  top: 30px; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaWtlLmNzcyIsInBhZ2VzLW1haW4vYmFpa2Uuc2NzcyIsIi4uL3dpZGdldC9zY3NzL192YXJpYWJsZXMuc2NzcyIsIi4uL3dpZGdldC9saWJzL2Jvb3RzdHJhcDQvc2Nzcy9fdmFyaWFibGVzLnNjc3MiLCIuLi93aWRnZXQvbGlicy9ib290c3RyYXA0L3Njc3MvbWl4aW5zL190ZXh0LXRydW5jYXRlLnNjc3MiLCIuLi93aWRnZXQvbGlicy9ib290c3RyYXA0L3Njc3MvbWl4aW5zL19jbGVhcmZpeC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQUNqQixjQUFjO0FDS2Q7RUFBd0IsbUJBQWtCLEVBQUE7O0FBQzFDO0VBQ0UsaUNBQXNDLEVBQUE7O0FBS3RDO0VBQ0UsY0FBYTtFQUNiLGVDUG1DLEVBQUE7O0FEVXZDO0VBQXVCLGtCQUFpQixFQUFBOztBQUd4QztFQUNFLG1CQUFrQixFQUFBO0VBQ2xCO0lBQ0UsWUFBVztJQUNYLGlCQUE2QjtJQUM3QixlQUF1QjtJQUN2QixrQkFBaUI7SUFDakIsMEJBQTZDO0lBQzdDLDBCQUErQixFQUFBO0VBRWpDO0lBQ0Usa0JBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixxQkFBdUI7SUFDdkIsdUJBQXNCO0lBQ3RCLGdDQUFxQztJQUNyQyxlQzdCbUMsRUFBQTtJRDhCbkM7TUFDRSxvQkFBbUI7TUFDbkIsaUJBQWdCO01BQ2hCLHFCQUF1QjtNQUN2QixrQkFBaUIsRUFBQTtFQUdyQjtJQUNFLHFCQUF1QixFQUFBO0lBQ3ZCO01BQ0UsY0FBYTtNQUNiLGlCQUFnQixFQUFBO0VBR3BCO0lBQ0UsZUFBOEI7SUFDOUIscUJBQTZCO0lBQzdCLGlCQUFnQixFQUFBOztBQUdwQjtFQUVFLDZCQUFrQztFQUNsQywwQkFBK0IsRUFBQTtFQUMvQjtJQUNFLHNCQUphO0lBS2Isa0NBQXVDLEVBQUE7RUFFekM7SUFDRSxrQkFBaUI7SUFDakIsb0JBQW1CLEVBQUE7RUFFckI7SUFDRSxhQUFZO0lBQ1os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QUFBO0FBRW5DO0VBQ0UsZUFBdUI7RUFDdkIsbUJBQWtCO0VBQ2xCLGVBQWMsRUFBQTtBQUVoQjtFQUNFLHFCQUF1QixFQUFBO0FBR3pCO0VBQ0UsaUJBQWdCO0VBQ2hCLGVFM0c2QyxFQUFBO0FGNkcvQztFQUNFLHNCQUF3QjtFQUN4QixrQkFBaUI7RUFDakIsZUV1R3VDLEVBQUE7RUZ0R3ZDO0lBQU8sdUJBQXlCLEVBQUE7RUFDaEM7SUFDRSxrQkFBaUI7SUFDakIsZUN4ZGlDLEVBQUE7QUQyZHJDO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixVQUFTLEVBQUEiLCJmaWxlIjoicGFnZXMtbWFpbi9iYWlrZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiDnmb7np5Hnm7jlhbPpobXpnaLmoLflvI8gKi9cbi5zaWRlLWZvcm0gLmZvcm0tdGlwcyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ubGF5b3V0LW1haW4gLnRpdGxlLWJhciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlZWVmOyB9XG5cbi5pbmRleC1iYWlrZS1saXN0IGVtLCAjbG9jYXRpb24gZW0sIC5ob3QtcGhvdG9zIGVtIHtcbiAgbWFyZ2luOiAwIDNweDtcbiAgY29sb3I6ICNiZDA0MDE7IH1cblxuLmluZGV4LWJhaWtlLWxpc3QgZW0ge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4uaW5kZXgtdG9wLWNhdGVzIHtcbiAgbWFyZ2luLWxlZnQ6IC0wLjclOyB9XG4gIC5pbmRleC10b3AtY2F0ZXMgLmNhdGUge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAzMi42MzMzMyU7XG4gICAgcGFkZGluZzogMWVtIDA7XG4gICAgbWFyZ2luLWxlZnQ6IDAuNyU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiZmJmYjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4gIC5pbmRleC10b3AtY2F0ZXMgLmxlZnQtZ2x5cGgge1xuICAgIGhlaWdodDogNC45Mjg1N2VtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwIDIuMDcxNDNlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlY2VlZWY7XG4gICAgY29sb3I6ICNiZDA0MDE7IH1cbiAgICAuaW5kZXgtdG9wLWNhdGVzIC5sZWZ0LWdseXBoIHAge1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIG1hcmdpbi10b3A6IDEzcHg7XG4gICAgICBmb250LXNpemU6IDEuMTQyODZlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC5pbmRleC10b3AtY2F0ZXMgLmxhYmVsLWNhdGUge1xuICAgIHBhZGRpbmc6IDAgMS43ODU3MWVtOyB9XG4gICAgLmluZGV4LXRvcC1jYXRlcyAubGFiZWwtY2F0ZSAubGFiZWwge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmluZGV4LXRvcC1jYXRlcyAubGFiZWwtdGl0bGUge1xuICAgIGNvbG9yOiAjNmY3ODdmO1xuICAgIGZvbnQtc2l6ZTogMS4xNjY2N2VtO1xuICAgIG1hcmdpbi10b3A6IC4yZW07IH1cblxuLmluZGV4LWJhaWtlLWxpc3Qge1xuICBwYWRkaW5nOiAxLjA3MTQzZW0gMS43MTQyOWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4gIC5pbmRleC1iYWlrZS1saXN0IC5tZWRpYS1uZXdzaXRlbSB7XG4gICAgcGFkZGluZy1ib3R0b206IDIuOGVtO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2VjZWVlZjsgfVxuICAuaW5kZXgtYmFpa2UtbGlzdCAubWVkaWEtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS40NWVtO1xuICAgIG1hcmdpbi1ib3R0b206IC44ZW07IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLnRodW1ibmFpbCB7XG4gICAgcGFkZGluZzogMXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlY2VlZWY7IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLmltZy10aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDFweDtcbiAgICBmb250LXNpemU6IDAuODU3MTRlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiOyB9XG4gIC5pbmRleC1iYWlrZS1saXN0IC5tZWRpYS10ZXh0IHtcbiAgICBsaW5lLWhlaWdodDogMi4xNDI4NmVtOyB9XG4gIC5pbmRleC1iYWlrZS1saXN0IC5tZWRpYS1vdGhlciBpIHtcbiAgICBtYXJnaW46IDAgMCAwIDVweDsgfVxuICAuaW5kZXgtYmFpa2UtbGlzdCAubGFiZWxzIHtcbiAgICBsaW5lLWhlaWdodDogMS44O1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZvbnQtc2l6ZTogMC44NTcxNGVtO1xuICAgIGNvbG9yOiAjMzczYTNjOyB9XG4gICAgLmluZGV4LWJhaWtlLWxpc3QgLmxhYmVscyBhIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA0cHg7XG4gICAgICBwYWRkaW5nOiAwIC44ZW07XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZGRkO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjQ7IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLm1lZGlhLW5ld3NpdGVtIC5tZWRpYS1vdGhlciB7XG4gICAgYm90dG9tOiAtMi4wZW07IH1cblxuLnl1eXVlLWZvcm0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4OyB9XG4gIC55dXl1ZS1mb3JtIC5mb3JtLXRhYiBsaTpob3ZlciwgLnl1eXVlLWZvcm0gLmZvcm0tdGFiIGxpLm9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG5cbi5yZC16eC10YWJzIC50YWJzLWJhc2UgbGkge1xuICB3aWR0aDogNTAlOyB9XG4gIC5yZC16eC10YWJzIC50YWJzLWJhc2UgbGkub24sIC5yZC16eC10YWJzIC50YWJzLWJhc2UgbGk6aG92ZXIge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4ucmQtengtdGFicyAubGlzdC1ncm91cC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZGRkZGRkO1xuICBjb2xvcjogIzU1NTk1YztcbiAgZm9udC1zaXplOiAwLjg1NzE0ZW07IH1cbiAgLnJkLXp4LXRhYnMgLmxpc3QtZ3JvdXAtaXRlbSAucmlnaHQtaW5mbyB7XG4gICAgY29sb3I6ICM1NTU5NWM7IH1cblxuLmhvdC1icmFuZHMgLmxhYmVsLWJhciB7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIHBhZGRpbmc6IDAuNzE0MjllbSAwLjQyODU3ZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4uaG90LWJyYW5kcyAubGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDEuMmVtOyB9XG4uaG90LWJyYW5kcyAuaXRlbS1sYWJlbHMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzogMC44NTcxNGVtIDAuNDI4NTdlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiAjNTU1OTVjOyB9XG4gIC5ob3QtYnJhbmRzIC5pdGVtLWxhYmVscyBzcGFuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMCAxMnB4OyB9XG4gICAgLmhvdC1icmFuZHMgLml0ZW0tbGFiZWxzIHNwYW46Zmlyc3QtY2hpbGQge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4gIC5ob3QtYnJhbmRzIC5pdGVtLWxhYmVscyAucmlnaHQtaW5mbyB7XG4gICAgZm9udC1zaXplOiAwLjg1NzE0ZW07XG4gICAgY29sb3I6ICM4MThhOTE7IH1cbi5ob3QtYnJhbmRzIC5pdGVtIC5pY29uLW1pbnVzLCAuaG90LWJyYW5kcyAuaXRlbSAubGFiZWwtYmFyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuLmhvdC1icmFuZHMgLml0ZW0ub24gLml0ZW0tbGFiZWxzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsgfVxuICAuaG90LWJyYW5kcyAuaXRlbS5vbiAuaXRlbS1sYWJlbHMgc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgY29sb3I6ICNiZDA0MDE7IH1cbi5ob3QtYnJhbmRzIC5pdGVtLm9uIC5pY29uLXBsdXMge1xuICBkaXNwbGF5OiBub25lOyB9XG4uaG90LWJyYW5kcyAuaXRlbS5vbiAuaWNvbi1taW51cyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuLmhvdC1icmFuZHMgLml0ZW0ub24gLmxhYmVsLWJhciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLmhvdC1waG90b3MgLmNvbnQtYmxvY2s6YmVmb3JlLCAuaG90LXBob3RvcyAuY29udC1ibG9jazphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuLmhvdC1waG90b3MgLmNvbnQtYmxvY2s6YWZ0ZXIge1xuICBjbGVhcjogYm90aDsgfVxuLmhvdC1waG90b3MgLm1lZGlhLWJhc2Uge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZzogMCAxZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNzE0MjllbTsgfVxuICAuaG90LXBob3RvcyAubWVkaWEtYmFzZSAudGh1bWJuYWlsLCAuaG90LXBob3RvcyAubWVkaWEtYmFzZSAuaW1nIHtcbiAgICBwYWRkaW5nOiAycHggM3B4OyB9XG4uaG90LXBob3RvcyAubWVkaWEtZXhwbGFpbiB7XG4gIGZvbnQtc2l6ZTogMC44NTcxNGVtOyB9XG5cbi5uZXdzdHlwZS1kZXRhaWwge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWNlZWVmOyB9XG5cbi5hc2stdG9wLWNhdGUgLmNhdGUtdGFicyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7IH1cbi5hc2stdG9wLWNhdGUgLnRhYnMtbmF2MSA+IGxpIGEge1xuICBib3JkZXItY29sb3I6ICNlY2VlZWY7IH1cbi5hc2stdG9wLWNhdGUgLnRhYnMtbmF2MSA+IGxpLm9uIGEsIC5hc2stdG9wLWNhdGUgLnRhYnMtbmF2MSA+IGxpOmhvdmVyIGEge1xuICBjb2xvcjogI2JkMDQwMTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50OyB9XG4uYXNrLXRvcC1jYXRlIC5jYXRlLWNvbnRzIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VjZWVlZjtcbiAgYm9yZGVyLXRvcDogbm9uZTsgfVxuICAuYXNrLXRvcC1jYXRlIC5jYXRlLWNvbnRzIC5sYWJlbCB7XG4gICAgY29sb3I6ICM1NTU5NWM7IH1cbi5hc2stdG9wLWNhdGUgLmxhYmVsLWJhciB7XG4gIHBhZGRpbmctdG9wOiAuNGVtO1xuICBwYWRkaW5nLWJvdHRvbTogLjRlbTsgfVxuICAuYXNrLXRvcC1jYXRlIC5sYWJlbC1iYXIgKyAubGFiZWwtYmFyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi5hc2stc2VhcmNoLWJhciB7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7IH1cbiAgLmFzay1zZWFyY2gtYmFyIC5zZWFyY2gtYmFyIC5zZWFyY2gtZm9ybS1ib3gge1xuICAgIGJvcmRlci1jb2xvcjogI2RkZGRkZDtcbiAgICBsaW5lLWhlaWdodDogMy4wNzE0M2VtOyB9XG4gIC5hc2stc2VhcmNoLWJhciAuc2VhcmNoLWJhciAuc2VhcmNoLWJ0biB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjhlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkO1xuICAgIGNvbG9yOiAjMzczYTNjO1xuICAgIGZvbnQtc2l6ZTogMS4yODU3MWVtOyB9XG5cbi5pbmRleC1hc2stZGFpbHkgLnNsaWRlciB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMjMuNzg1NzFlbTtcbiAgaGVpZ2h0OiAxOWVtO1xuICBtYXJnaW4tcmlnaHQ6IDEuMzU3MTRlbTtcbiAgbWFyZ2luLXRvcDogMDsgfVxuLmluZGV4LWFzay1kYWlseSAudHh0bGlzdCB7XG4gIGxpbmUtaGVpZ2h0OiAyLjQ7IH1cbiAgLmluZGV4LWFzay1kYWlseSAudHh0bGlzdCBoNCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42NjY2N2VtO1xuICAgIGZvbnQtc2l6ZTogMS4yODU3MWVtO1xuICAgIGZvbnQtZmFtaWx5OiBcIk1pY3Jvc29mdCBZYUhlaVwiLCBcIk1pY3Jvc29mdCBKaGVuZ0hlaVwiLCBTVEhlaXRpLCBNaW5nTGl1OyB9XG4gIC5pbmRleC1hc2stZGFpbHkgLnR4dGxpc3QgLmJpZy1pdGVtIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMS4wNzE0M2VtO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmOGY4Zjg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG4gIC5pbmRleC1hc2stZGFpbHkgLnR4dGxpc3QgcCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuODtcbiAgICBjb2xvcjogIzU1NTk1YztcbiAgICBmb250LXNpemU6IDAuODU3MTRlbTsgfVxuICAuaW5kZXgtYXNrLWRhaWx5IC50eHRsaXN0IGVtIHtcbiAgICBjb2xvcjogI2JkMDQwMTsgfVxuXG4uaW5kZXgtYXNrLW5ldyBlbSwgLmFzay1saXN0LWJveCBlbSB7XG4gIGNvbG9yOiAjYmQwNDAxOyB9XG4uaW5kZXgtYXNrLW5ldyBiLCAuYXNrLWxpc3QtYm94IGIge1xuICBjb2xvcjogIzkxYjgxZDsgfVxuLmluZGV4LWFzay1uZXcgLmxpc3QtZ3JvdXAtaXRlbSwgLmFzay1saXN0LWJveCAubGlzdC1ncm91cC1pdGVtIHtcbiAgcGFkZGluZzogMS44NTcxNGVtIDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4uaW5kZXgtYXNrLW5ldyAubGlzdC1ncm91cC1pdGVtLXRpdGxlLCAuYXNrLWxpc3QtYm94IC5saXN0LWdyb3VwLWl0ZW0tdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxLjM1NzE0ZW07XG4gIGZvbnQtc2l6ZTogMS4xNDI4NmVtOyB9XG4uaW5kZXgtYXNrLW5ldyAucmlnaHQtaW5mbywgLmFzay1saXN0LWJveCAucmlnaHQtaW5mbyB7XG4gIGZvbnQtc2l6ZTogMC44NTcxNGVtOyB9XG4gIC5pbmRleC1hc2stbmV3IC5yaWdodC1pbmZvIHNwYW4sIC5hc2stbGlzdC1ib3ggLnJpZ2h0LWluZm8gc3BhbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDIuMTQyODZlbTsgfVxuICAuaW5kZXgtYXNrLW5ldyAucmlnaHQtaW5mbyBlbSwgLmFzay1saXN0LWJveCAucmlnaHQtaW5mbyBlbSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgLmluZGV4LWFzay1uZXcgLnJpZ2h0LWluZm8gaSwgLmFzay1saXN0LWJveCAucmlnaHQtaW5mbyBpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuMzU3MTRlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGZvbnQtc2l6ZTogMS4xNDI4NmVtOyB9XG5cbi5pbmRleC1hc2stbmV3IC50aXRsZS1iYXIge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5hc2stbGlzdC1ib3ggLmxpc3QtZ3JvdXAtaXRlbS10aXRsZSBlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAwLjcxNDI5ZW07XG4gIHBhZGRpbmc6IDAgLjhlbTtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNjYzNzsgfVxuLmFzay1saXN0LWJveCAubGlzdC1ncm91cC1pdGVtLnNvbHZlZCAubGlzdC1ncm91cC1pdGVtLXRpdGxlIGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzkxYjgxZDsgfVxuXG4uaW5kZXgtYXNrLWF0LWlzc3VlIC5hc2stYXQtaXNzdWUtbGlzdDpiZWZvcmUsIC5pbmRleC1hc2stYXQtaXNzdWUgLmFzay1hdC1pc3N1ZS1saXN0OmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG4uaW5kZXgtYXNrLWF0LWlzc3VlIC5hc2stYXQtaXNzdWUtbGlzdDphZnRlciB7XG4gIGNsZWFyOiBib3RoOyB9XG4uaW5kZXgtYXNrLWF0LWlzc3VlIC5pc3N1ZS1pdGVtIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiA1MCU7XG4gIHBhZGRpbmc6IDAuNTcxNDNlbSAwOyB9XG4gIC5pbmRleC1hc2stYXQtaXNzdWUgLmlzc3VlLWl0ZW0gLmlzc3VlLXN0YXRlIHtcbiAgICB3aWR0aDogM2VtO1xuICAgIGhlaWdodDogM2VtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE0Mjg2ZW07XG4gICAgcGFkZGluZzogMC4zNTcxNGVtIDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjY0Mjg2ZW07XG4gICAgbWFyZ2luLXRvcDogM3B4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQwNDAxOyB9XG4gIC5pbmRleC1hc2stYXQtaXNzdWUgLmlzc3VlLWl0ZW0gLmlzc3VlLXRpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMjsgfVxuICAuaW5kZXgtYXNrLWF0LWlzc3VlIC5pc3N1ZS1pdGVtIC5pc3N1ZS1leHBsYWluIHtcbiAgICBjb2xvcjogIzgxOGE5MTtcbiAgICBmb250LXNpemU6IDAuODU3MTRlbTsgfVxuXG4uYXNrLXNpZGUtZm9ybSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7XG4gIHBhZGRpbmctdG9wOiAwLjkyODU3ZW07IH1cbiAgLmFzay1zaWRlLWZvcm0gLmZvcm0tY29udHJvbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5hc2stc2lkZS1mb3JtIC5hc2tlZC1udW0tYmxvY2sge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxLjkyODU3ZW0gMS4yMTQyOWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4wNzE0M2VtOyB9XG4gIC5hc2stc2lkZS1mb3JtIC5hc2stbnVtIHtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuICAgIC5hc2stc2lkZS1mb3JtIC5hc2stbnVtIGIge1xuICAgICAgcGFkZGluZzogMCA0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDFhZjYzO1xuICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsgfVxuICAuYXNrLXNpZGUtZm9ybSAuYXNrLXR4dCB7XG4gICAgY29sb3I6ICM4MThhOTE7IH1cbiAgLmFzay1zaWRlLWZvcm0gdGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5hc2stc2lkZS1mb3JtIC5hc2stYnRuLXJvdyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC43MTQyOWVtOyB9XG4gICAgLmFzay1zaWRlLWZvcm0gLmFzay1idG4tcm93OmJlZm9yZSwgLmFzay1zaWRlLWZvcm0gLmFzay1idG4tcm93OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAuYXNrLXNpZGUtZm9ybSAuYXNrLWJ0bi1yb3c6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuYXNrLXNpZGUtZm9ybSAuYXNrLWJ0bi1yb3cgPiAqIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDI4JTsgfVxuICAgIC5hc2stc2lkZS1mb3JtIC5hc2stYnRuLXJvdyAuYXNrLWJ0biB7XG4gICAgICB3aWR0aDogNDAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDQlOyB9XG4gICAgLmFzay1zaWRlLWZvcm0gLmFzay1idG4tcm93IGlucHV0LCAuYXNrLXNpZGUtZm9ybSAuYXNrLWJ0bi1yb3cgYnV0dG9uIHtcbiAgICAgIHBhZGRpbmc6IDAuMjg1NzFlbSAwLjcxNDI5ZW07IH1cblxuLmFzay1saXN0LXRhYnMgLnRhYnMtYmFzZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzU1NTk1YzsgfVxuICAuYXNrLWxpc3QtdGFicyAudGFicy1iYXNlIGxpIGEge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgbWFyZ2luLWJvdHRvbTogLTJweDsgfVxuLmFzay1saXN0LXRhYnMgLnRhYnMtYmFzZSB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZWNlZWVmOyB9XG4uYXNrLWxpc3QtdGFicyAudGFicy1iYXNlID4gbGk6aG92ZXIgYSwgLmFzay1saXN0LXRhYnMgLnRhYnMtYmFzZSA+IGxpLm9uIGEge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2JkMDQwMTsgfVxuXG4uYXNrLWRldGFpbCAuYXNrLXN1Yi1pbmZvIHNwYW4sIC5hc2stZGV0YWlsIC5tZWRpYS1leHBsYWluIHNwYW4ge1xuICBtYXJnaW4tcmlnaHQ6IDEuNDI4NTdlbTsgfVxuICAuYXNrLWRldGFpbCAuYXNrLXN1Yi1pbmZvIHNwYW46YWZ0ZXIsIC5hc2stZGV0YWlsIC5tZWRpYS1leHBsYWluIHNwYW46YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcGFkZGluZy1yaWdodDogMS40Mjg1N2VtO1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlY2VlZWY7IH1cbi5hc2stZGV0YWlsIGgzIHtcbiAgbWFyZ2luLWJvdHRvbTogMS40Mjg1N2VtO1xuICBmb250LXNpemU6IDEuMjg1NzFlbTtcbiAgZm9udC1mYW1pbHk6IFwiTWljcm9zb2Z0IFlhSGVpXCIsIFwiTWljcm9zb2Z0IEpoZW5nSGVpXCIsIFNUSGVpdGksIE1pbmdMaXU7IH1cbi5hc2stZGV0YWlsIC5hc2stc3ViLWluZm8ge1xuICBmb250LXNpemU6IDAuODU3MTRlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi1ib3R0b206IDEuMTY2NjdlbTtcbiAgY29sb3I6ICM4MThhOTE7IH1cbiAgLmFzay1kZXRhaWwgLmFzay1zdWItaW5mbyBiIHtcbiAgICBjb2xvcjogIzM3M2EzYzsgfVxuLmFzay1kZXRhaWwgLmFzay1xdWl6LWZvcm0ge1xuICBwYWRkaW5nOiAyLjE0Mjg2ZW0gMS40Mjg1N2VtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4OyB9XG4gIC5hc2stZGV0YWlsIC5hc2stcXVpei1mb3JtIHRleHRhcmVhIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuLmFzay1kZXRhaWwgLnF1aXotZm9ybS1zdWItaW5mbyB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW4tdG9wOiAwLjcxNDI5ZW07XG4gIGNvbG9yOiAjODE4YTkxOyB9XG4gIC5hc2stZGV0YWlsIC5xdWl6LWZvcm0tc3ViLWluZm86YmVmb3JlLCAuYXNrLWRldGFpbCAucXVpei1mb3JtLXN1Yi1pbmZvOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAuYXNrLWRldGFpbCAucXVpei1mb3JtLXN1Yi1pbmZvOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuYXNrLWRldGFpbCAucXVpei1mb3JtLXN1Yi1pbmZvIGkge1xuICAgIG1hcmdpbi1yaWdodDogNXB4OyB9XG4gIC5hc2stZGV0YWlsIC5xdWl6LWZvcm0tc3ViLWluZm8gZW0ge1xuICAgIGNvbG9yOiAjZmQ4YTE3OyB9XG5cbi5hc2stZGV0YWlscy1saXN0IC50aXRsZS1iYXIge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIC5hc2stZGV0YWlscy1saXN0IC50aXRsZS1iYXIgZW0ge1xuICAgIGNvbG9yOiAjYmQwNDAxO1xuICAgIG1hcmdpbjogMCA4cHg7IH1cbi5hc2stZGV0YWlscy1saXN0IC5kZXRhaWwtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMi41ZW0gMC43MTQyOWVtIDAuNzE0MjllbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZWNlZWVmOyB9XG4uYXNrLWRldGFpbHMtbGlzdCAubWVkaWEtc21hbGwtaW1ndHh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMS43ODU3MWVtOyB9XG4uYXNrLWRldGFpbHMtbGlzdCAuaW1nIHtcbiAgd2lkdGg6IDRlbTtcbiAgaGVpZ2h0OiA1NnB4O1xuICBsaW5lLWhlaWdodDogNTMuNDIxNDNweDsgfVxuLmFzay1kZXRhaWxzLWxpc3QgLm1lZGlhLXRpdGxlIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgY29sb3I6ICMwMmFlNjY7IH1cbi5hc2stZGV0YWlscy1saXN0IC5tZWRpYS1leHBsYWluIHtcbiAgZm9udC1zaXplOiAwLjg1NzE0ZW07IH1cbi5hc2stZGV0YWlscy1saXN0IC5kZXRhaWwtY29udCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjg7XG4gIGNvbG9yOiAjNTU1OTVjOyB9XG4uYXNrLWRldGFpbHMtbGlzdCAuYm90dG9tLXN1Yi1pbmZvIHtcbiAgbWFyZ2luLXRvcDogMS41NzE0M2VtO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgY29sb3I6ICM4MThhOTE7IH1cbiAgLmFzay1kZXRhaWxzLWxpc3QgLmJvdHRvbS1zdWItaW5mbyBzcGFuIHtcbiAgICBtYXJnaW4tbGVmdDogMS4wNzE0M2VtOyB9XG4gIC5hc2stZGV0YWlscy1saXN0IC5ib3R0b20tc3ViLWluZm8gaSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gICAgY29sb3I6ICNmZDhhMTc7IH1cbi5hc2stZGV0YWlscy1saXN0IC5hY2NlcHRlZC1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMzAlO1xuICB0b3A6IDMwcHg7IH1cblxuXG4iLCJAaW1wb3J0IFwiLi4vdmFyaWFibGVzXCI7XHJcbkBpbXBvcnQgXCIuLi9taXhpbnNcIjtcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8qIOeZvuenkeebuOWFs+mhtemdouagt+W8jyAqL1xyXG5cclxuLnNpZGUtZm9ybSAuZm9ybS10aXBzIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9XHJcbi5sYXlvdXQtbWFpbiAudGl0bGUtYmFyIHtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxufVxyXG5cclxuLy8gZW0g6aKc6ImyXHJcbi5pbmRleC1iYWlrZS1saXN0LCAjbG9jYXRpb24sIC5ob3QtcGhvdG9zIHtcclxuICBlbSB7XHJcbiAgICBtYXJnaW46IDAgM3B4O1xyXG4gICAgY29sb3I6ICRhY3RpdmVDb2xvcjtcclxuICB9XHJcbn1cclxuLmluZGV4LWJhaWtlLWxpc3QgZW0geyBmb250LXdlaWdodDogYm9sZDsgfVxyXG5cclxuLy8g55m+56eR5Li76aG1XHJcbi5pbmRleC10b3AtY2F0ZXMge1xyXG4gIG1hcmdpbi1sZWZ0OiAtMC43JTtcclxuICAuY2F0ZSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEvMykgLSAwLjclO1xyXG4gICAgcGFkZGluZzogcHhUb0VtKDE0cHgpIDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMC43JTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyYXktbGlnaHRlc3QsIDElKTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgfVxyXG4gIC5sZWZ0LWdseXBoIHtcclxuICAgIGhlaWdodDogcHhUb0VtKDY5cHgpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMCBweFRvRW0oMjlweCk7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgIGNvbG9yOiAkYWN0aXZlQ29sb3I7XHJcbiAgICBwIHtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgbWFyZ2luLXRvcDogMTNweDtcclxuICAgICAgZm9udC1zaXplOiBweFRvRW0oMTZweCk7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG4gIH1cclxuICAubGFiZWwtY2F0ZSB7XHJcbiAgICBwYWRkaW5nOiAwIHB4VG9FbSgyNXB4KTtcclxuICAgIC5sYWJlbCB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9IFxyXG4gIH1cclxuICAubGFiZWwtdGl0bGUge1xyXG4gICAgY29sb3I6IGRhcmtlbigkZ3JheS1saWdodCwgNyUpO1xyXG4gICAgZm9udC1zaXplOiBweFRvRW0oMTRweCwgMTJweCk7XHJcbiAgICBtYXJnaW4tdG9wOiAuMmVtO1xyXG4gIH1cclxufVxyXG4uaW5kZXgtYmFpa2UtbGlzdCB7XHJcbiAgJG1lZGlhUEI6IDIuOGVtO1xyXG4gIHBhZGRpbmc6IHB4VG9FbSgxNXB4KSBweFRvRW0oMjRweCk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAubWVkaWEtbmV3c2l0ZW0ge1xyXG4gICAgcGFkZGluZy1ib3R0b206ICRtZWRpYVBCO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAkZ3JheS1saWdodGVyO1xyXG4gIH1cclxuICAubWVkaWEtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxLjQ1ZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuOGVtO1xyXG4gIH1cclxuICAudGh1bWJuYWlsIHtcclxuICAgIHBhZGRpbmc6IDFweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgfVxyXG4gIC5pbWctdGl0bGUge1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyYXktbGlnaHRlc3QsIDElKTtcclxuICB9XHJcbiAgLm1lZGlhLXRleHQgeyBsaW5lLWhlaWdodDogcHhUb0VtKDMwcHgpOyB9XHJcbiAgLm1lZGlhLW90aGVyIGkgeyBtYXJnaW46IDAgMCAwIDVweDsgfVxyXG4gIC5sYWJlbHMge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuODtcclxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIGNvbG9yOiAkZ3JheS1kYXJrO1xyXG4gICAgYSB7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcclxuICAgICAgcGFkZGluZzogMCAuOGVtO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheUJvcmRlcjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkZ3JheS1saWdodGVyLCAyJSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5tZWRpYS1uZXdzaXRlbSAubWVkaWEtb3RoZXIge1xyXG4gICAgYm90dG9tOiAtKCRtZWRpYVBCIC0gLjhlbSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBsYXlvdXQtc2lkZVxyXG4vLyDpooTnuqbooajljZVcclxuXHJcbi55dXl1ZS1mb3JtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1saWdodGVzdDtcclxuICAuZm9ybS10YWIgbGkge1xyXG4gICAgJjpob3ZlciwgJi5vbiB7IGJhY2tncm91bmQtY29sb3I6ICRib2R5LWJnOyB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8g54Ot54K544CB5pyA5pawXHJcbi5yZC16eC10YWJzIHtcclxuICAudGFicy1iYXNlIHtcclxuICAgIGxpIHtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgJi5vbiwgJjpob3ZlciB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLmxpc3QtZ3JvdXAtaXRlbSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAkZ3JheUJvcmRlcjtcclxuICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIGZvbnQtc2l6ZTogcHhUb0VtKDEycHgpO1xyXG4gICAgLnJpZ2h0LWluZm8ge1xyXG4gICAgICBjb2xvcjogJGdyYXk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyDng63pl6jlk4HniYxcclxuLmhvdC1icmFuZHMge1xyXG4gIC5sYWJlbC1iYXIge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgIHBhZGRpbmc6IHB4VG9FbSgxMHB4KSBweFRvRW0oNnB4KTtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gIH1cclxuICAubGFiZWwgeyBtYXJnaW4tcmlnaHQ6IDEuMmVtOyB9XHJcbiAgLml0ZW0tbGFiZWxzIHtcclxuICAgIEBpbmNsdWRlIHRleHQtdHJ1bmNhdGUoKTtcclxuICAgIHBhZGRpbmc6IHB4VG9FbSgxMnB4KSBweFRvRW0oNnB4KTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgY29sb3I6ICRncmF5O1xyXG4gICAgc3BhbiB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgcGFkZGluZzogMCAxMnB4O1xyXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnJpZ2h0LWluZm8ge1xyXG4gICAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgfVxyXG4gIH1cclxuICAuaXRlbSB7XHJcbiAgICAuaWNvbi1taW51cywgLmxhYmVsLWJhciB7IGRpc3BsYXk6IG5vbmU7IH1cclxuICAgICYub24ge1xyXG4gICAgICAuaXRlbS1sYWJlbHMge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXN0O1xyXG4gICAgICAgIHNwYW46Zmlyc3QtY2hpbGQgeyBjb2xvcjogJGFjdGl2ZUNvbG9yOyB9XHJcbiAgICAgIH1cclxuICAgICAgLmljb24tcGx1cyB7IGRpc3BsYXk6IG5vbmU7IH1cclxuICAgICAgLmljb24tbWludXMgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cclxuICAgICAgLmxhYmVsLWJhciB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uaG90LXBob3RvcyB7XHJcbiAgLmNvbnQtYmxvY2sge1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICB9XHJcbiAgLm1lZGlhLWJhc2Uge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgcGFkZGluZzogMCAxZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiBweFRvRW0oMTBweCk7XHJcbiAgICAudGh1bWJuYWlsLCAuaW1nIHtcclxuICAgICAgcGFkZGluZzogMnB4IDNweDtcclxuICAgIH1cclxuICB9XHJcbiAgLm1lZGlhLWV4cGxhaW4geyBmb250LXNpemU6IHB4VG9FbSgxMnB4KTsgfVxyXG59XHJcblxyXG4vLyDor6bnu4bpobVcclxuLm5ld3N0eXBlLWRldGFpbCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIOmXruetlOebuOWFs+mhtemdolxyXG5cclxuLy8gb3ZlcnJpZGUgd2lkZ2V0IHN0eWxlXHJcbi5hc2stdG9wLWNhdGUge1xyXG4gIC5jYXRlLXRhYnMgeyBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1saWdodGVzdDsgfVxyXG4gIC50YWJzLW5hdjEgPiBsaSB7XHJcbiAgICBhIHsgYm9yZGVyLWNvbG9yOiAkZ3JheS1saWdodGVyOyB9XHJcbiAgICAmLm9uIGEsICY6aG92ZXIgYSB7XHJcbiAgICAgIGNvbG9yOiAkYWN0aXZlQ29sb3I7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9keS1iZztcclxuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY2F0ZS1jb250cyB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcclxuICAgIC5sYWJlbCB7IGNvbG9yOiAkZ3JheTsgfVxyXG4gIH1cclxuICAubGFiZWwtYmFyIHtcclxuICAgIHBhZGRpbmctdG9wOiAuNGVtO1xyXG4gICAgcGFkZGluZy1ib3R0b206IC40ZW07XHJcbiAgICArIC5sYWJlbC1iYXIge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4uYXNrLXNlYXJjaC1iYXIge1xyXG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgLnNlYXJjaC1iYXIge1xyXG4gICAgLnNlYXJjaC1mb3JtLWJveCB7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogJGdyYXlCb3JkZXI7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiBweFRvRW0oNDNweCk7XHJcbiAgICB9XHJcbiAgICAuc2VhcmNoLWJ0biB7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XHJcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEuOGVtO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheUJvcmRlcjtcclxuICAgICAgY29sb3I6ICRncmF5LWRhcms7XHJcbiAgICAgIGZvbnQtc2l6ZTogcHhUb0VtKDE4cHgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmluZGV4LWFzay1kYWlseSB7XHJcbiAgLnNsaWRlciB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiBweFRvRW0oMzMzcHgpO1xyXG4gICAgaGVpZ2h0OiBweFRvRW0oMjY2cHgpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBweFRvRW0oMTlweCk7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gIH1cclxuICAudHh0bGlzdCB7XHJcbiAgICBsaW5lLWhlaWdodDogMi40O1xyXG4gICAgaDQge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiBweFRvRW0oMTJweCwgMThweCk7XHJcbiAgICAgIGZvbnQtc2l6ZTogcHhUb0VtKDE4cHgpO1xyXG4gICAgICBmb250LWZhbWlseTogXCJNaWNyb3NvZnQgWWFIZWlcIiwgXCJNaWNyb3NvZnQgSmhlbmdIZWlcIiwgU1RIZWl0aSwgTWluZ0xpdTtcclxuICAgIH1cclxuICAgIC5iaWctaXRlbSB7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiBweFRvRW0oMTVweCk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS1saWdodGVzdDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIH1cclxuICAgIHAge1xyXG4gICAgICBsaW5lLWhlaWdodDogMS44O1xyXG4gICAgICBjb2xvcjogJGdyYXk7XHJcbiAgICAgIGZvbnQtc2l6ZTogcHhUb0VtKDEycHgpO1xyXG4gICAgfVxyXG4gICAgZW0geyBjb2xvcjogJGFjdGl2ZUNvbG9yOyB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbi5pbmRleC1hc2stbmV3LCAuYXNrLWxpc3QtYm94IHtcclxuICBlbSB7IGNvbG9yOiAkYWN0aXZlQ29sb3I7IH1cclxuICBiIHsgY29sb3I6ICRhY3RpdmVDb2xvcjI7IH1cclxuICAubGlzdC1ncm91cC1pdGVtIHtcclxuICAgIHBhZGRpbmc6IHB4VG9FbSgyNnB4KSAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgfVxyXG4gIC5saXN0LWdyb3VwLWl0ZW0tdGl0bGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcHhUb0VtKDE5cHgpO1xyXG4gICAgZm9udC1zaXplOiBweFRvRW0oMTZweCk7XHJcbiAgfVxyXG4gIC5yaWdodC1pbmZvIHtcclxuICAgIGZvbnQtc2l6ZTogcHhUb0VtKDEycHgpO1xyXG4gICAgc3BhbiB7IG1hcmdpbi1sZWZ0OiBweFRvRW0oMzBweCk7IH1cclxuICAgIGVtIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cclxuICAgIGkge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHB4VG9FbSg1cHgpO1xyXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICBmb250LXNpemU6IHB4VG9FbSgxNnB4KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLmluZGV4LWFzay1uZXcgLnRpdGxlLWJhciB7IG1hcmdpbi1ib3R0b206IDA7IH1cclxuXHJcbi5hc2stbGlzdC1ib3gge1xyXG4gIC5saXN0LWdyb3VwLWl0ZW0tdGl0bGUgZW0ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBweFRvRW0oMTBweCk7XHJcbiAgICBwYWRkaW5nOiAwIC44ZW07XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxNHB4LCAxNnB4KTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgY29sb3I6ICRib2R5LWJnO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNjYzNztcclxuICB9XHJcbiAgLmxpc3QtZ3JvdXAtaXRlbS5zb2x2ZWQge1xyXG4gICAgLmxpc3QtZ3JvdXAtaXRlbS10aXRsZSBlbSB7IGJhY2tncm91bmQtY29sb3I6ICRhY3RpdmVDb2xvcjI7IH1cclxuICB9XHJcbn1cclxuIFxyXG5cclxuLmluZGV4LWFzay1hdC1pc3N1ZSB7XHJcbiAgLmFzay1hdC1pc3N1ZS1saXN0IHsgQGluY2x1ZGUgY2xlYXJmaXgoKTsgfVxyXG4gIC5pc3N1ZS1pdGVtIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IHB4VG9FbSg4cHgpIDA7XHJcbiAgICAuaXNzdWUtc3RhdGUge1xyXG4gICAgICB3aWR0aDogcHhUb0VtKDQycHgpO1xyXG4gICAgICBoZWlnaHQ6IHB4VG9FbSg0MnB4KTtcclxuICAgICAgbGluZS1oZWlnaHQ6IHB4VG9FbSgxNnB4KTtcclxuICAgICAgcGFkZGluZzogcHhUb0VtKCg0MnB4IC0gMzJweCkgLyAyKSAwO1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IHB4VG9FbSgyM3B4KTtcclxuICAgICAgbWFyZ2luLXRvcDogM3B4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGNvbG9yOiAkYm9keS1iZztcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjdGl2ZUNvbG9yO1xyXG4gICAgfVxyXG4gICAgLmlzc3VlLXRpdGxlIHsgbGluZS1oZWlnaHQ6IDI7IH1cclxuICAgIC5pc3N1ZS1leHBsYWluIHtcclxuICAgICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5hc2stc2lkZS1mb3JtIHtcclxuICAuZm9ybS1jb250cm9sIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgfVxyXG4gIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXN0O1xyXG4gIHBhZGRpbmctdG9wOiBweFRvRW0oMTNweCk7XHJcbiAgLmFza2VkLW51bS1ibG9jayB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiBweFRvRW0oMjdweCkgcHhUb0VtKDE3cHgpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJvZHktYmc7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBweFRvRW0oMTVweCk7XHJcbiAgfVxyXG4gIC5hc2stbnVtIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgY29sb3I6ICRib2R5LWJnO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGIge1xyXG4gICAgICBwYWRkaW5nOiAwIDRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAxYWY2MztcclxuICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgfVxyXG4gIH1cclxuICAuYXNrLXR4dCB7IGNvbG9yOiAkZ3JheS1saWdodDsgfVxyXG4gIHRleHRhcmVhIHsgd2lkdGg6IDEwMCU7IH1cclxuICAuYXNrLWJ0bi1yb3cge1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICAgIG1hcmdpbi1ib3R0b206IHB4VG9FbSgxMHB4KTtcclxuICAgID4gKiB7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICB3aWR0aDogMjglO1xyXG4gICAgfVxyXG4gICAgLmFzay1idG4ge1xyXG4gICAgICB3aWR0aDogNDAlO1xyXG4gICAgICBtYXJnaW4tbGVmdDogNCU7XHJcbiAgICB9XHJcbiAgICBpbnB1dCwgYnV0dG9uIHsgcGFkZGluZzogcHhUb0VtKDRweCkgcHhUb0VtKDEwcHgpOyB9XHJcbiAgfVxyXG59XHJcblxyXG4uYXNrLWxpc3QtdGFicyB7XHJcbiAgLnRhYnMtYmFzZSB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIGxpIGEge1xyXG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAtMnB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAudGFicy1iYXNlIHsgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7IH1cclxuICAudGFicy1iYXNlID4gbGkge1xyXG4gICAgJjpob3ZlciwgJi5vbiB7XHJcbiAgICAgIGEgeyBib3JkZXItYm90dG9tOiAycHggc29saWQgJGFjdGl2ZUNvbG9yOyB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYXNrLWRldGFpbCB7XHJcbiAgLmFzay1zdWItaW5mbywgLm1lZGlhLWV4cGxhaW4ge1xyXG4gICAgc3BhbiB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogcHhUb0VtKDIwcHgpO1xyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHB4VG9FbSgyMHB4KTtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGgzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IHB4VG9FbSgyMHB4KTtcclxuICAgIGZvbnQtc2l6ZTogcHhUb0VtKDE4cHgpO1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTWljcm9zb2Z0IFlhSGVpXCIsIFwiTWljcm9zb2Z0IEpoZW5nSGVpXCIsIFNUSGVpdGksIE1pbmdMaXU7XHJcbiAgfVxyXG4gIC5hc2stc3ViLWluZm8ge1xyXG4gICAgZm9udC1zaXplOiBweFRvRW0oMTJweCk7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIG1hcmdpbi1ib3R0b206IHB4VG9FbSgxNHB4LCAxMnB4KTtcclxuICAgIGNvbG9yOiAkZ3JheS1saWdodDtcclxuICAgIGIgeyBjb2xvcjogJGdyYXktZGFyazsgfVxyXG4gIH1cclxuICAuYXNrLXF1aXotZm9ybSB7XHJcbiAgICBwYWRkaW5nOiBweFRvRW0oMzBweCkgcHhUb0VtKDIwcHgpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktbGlnaHRlc3Q7XHJcbiAgICB0ZXh0YXJlYSB7IHdpZHRoOiAxMDAlOyB9XHJcbiAgfVxyXG4gIC5xdWl6LWZvcm0tc3ViLWluZm8ge1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgbWFyZ2luLXRvcDogcHhUb0VtKDEwcHgpO1xyXG4gICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgaSB7IG1hcmdpbi1yaWdodDogNXB4OyB9XHJcbiAgICBlbSB7IGNvbG9yOiAkYnRuQ29sb3I7IH1cclxuICB9XHJcbn1cclxuLmFzay1kZXRhaWxzLWxpc3Qge1xyXG4gIC50aXRsZS1iYXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGVtIHtcclxuICAgICAgY29sb3I6ICRhY3RpdmVDb2xvcjtcclxuICAgICAgbWFyZ2luOiAwIDhweDtcclxuICAgIH1cclxuICB9XHJcbiAgLmRldGFpbC1pdGVtIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IHB4VG9FbSgzNXB4KSBweFRvRW0oMTBweCkgcHhUb0VtKDEwcHgpO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAkZ3JheS1saWdodGVyO1xyXG4gIH1cclxuXHJcbiAgLm1lZGlhLXNtYWxsLWltZ3R4dCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBweFRvRW0oMjVweCk7XHJcbiAgfVxyXG4gIC5pbWcge1xyXG4gICAgd2lkdGg6IHB4VG9FbSg1NnB4KTtcclxuICAgIGhlaWdodDogNTZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiBtaWRkbGVJbWcoNTZweCwgMnB4KTtcclxuICB9XHJcbiAgLm1lZGlhLXRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogcHhUb0VtKDE0cHgpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gICAgY29sb3I6ICMwMmFlNjY7XHJcbiAgfVxyXG4gIC5tZWRpYS1leHBsYWluIHtcclxuICAgIGZvbnQtc2l6ZTogcHhUb0VtKDEycHgpO1xyXG5cclxuICB9XHJcbiAgLmRldGFpbC1jb250IHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjg7XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgfVxyXG4gIC5ib3R0b20tc3ViLWluZm8ge1xyXG4gICAgbWFyZ2luLXRvcDogcHhUb0VtKDIycHgpO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBjb2xvcjogJGdyYXktbGlnaHQ7XHJcbiAgICBzcGFuIHsgbWFyZ2luLWxlZnQ6IHB4VG9FbSgxNXB4KTsgfVxyXG4gICAgaSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogM3B4O1xyXG4gICAgICBjb2xvcjogJGJ0bkNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuICAuYWNjZXB0ZWQtaWNvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMzAlO1xyXG4gICAgdG9wOiAzMHB4O1xyXG4gIH1cclxufVxyXG4iLCJAaW1wb3J0IFwiLi4vbGlicy9ib290c3RyYXA0L3Njc3MvdmFyaWFibGVzXCI7XHJcblxyXG5cclxuLy8gQ29sb3JcclxuLy9cclxuLy8gdGhlbWUgY29sb3IgdmFyXHJcbiRnbG9iYWxCZzogICAgICAgICAgICAgICAgICAgICAgI2Y4ZjhmODtcclxuJHRoZW1lQmc6ICAgICAgICAgICAgICAgICAgICAgICAkYm9keS1iZztcclxuJGFjdGl2ZUNvbG9yOiAgICAgICAgICAgICAgICAgICAjYmQwNDAxO1xyXG4kYWN0aXZlQ29sb3IyOiAgICAgICAgICAgICAgICAgICM5MWI4MWQ7XHJcbiRsaW5rQ29sb3I6ICAgICAgICAgICAgICAgICAgICAgJGFjdGl2ZUNvbG9yMjtcclxuJGJ0bkNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAjZmQ4YTE3O1xyXG4vLyBncmF5XHJcbiRncmF5Qm9yZGVyOiAgICAgICAgICAgICAgICAgICAgI2RkZGRkZDtcclxuJGdyYXlCZExpZ2h0OiAgICAgICAgICAgICAgICAgICAkZ3JheS1saWdodGVyO1xyXG5cclxuLy8gZm9udC1zaXplXHJcbiRiYXNlRm9udFNpemU6ICAgICAgICAgICAgICAgICAgJGZvbnQtc2l6ZS1yb290O1xyXG5cclxuJGZvbnQtc2l6ZS1oMTogICAgICAgICAgICAgICAgICAyZW07XHJcbiRmb250LXNpemUtaDI6ICAgICAgICAgICAgICAgICAgMS44ZW07XHJcbiRmb250LXNpemUtaDM6ICAgICAgICAgICAgICAgICAgMS42ZW07XHJcbiRmb250LXNpemUtaDQ6ICAgICAgICAgICAgICAgICAgMS40ZW07XHJcbiRmb250LXNpemUtaDU6ICAgICAgICAgICAgICAgICAgMS4yZW07XHJcbiRmb250LXNpemUtaDY6ICAgICAgICAgICAgICAgICAgMWVtO1xyXG5cclxuLy8gZm9udC1mYW1pbHkgICAgXFw1YjhiXFw0ZjUzICAg5piv5a6L5L2TXHJcbiRzbWFsbEZvbnQ6ICAgICAgICAgICAgICAgICAgICAgXCJcXDViOGJcXDRmNTNcIiwgc2VyaWY7IiwiLy8gVmFyaWFibGVzXG4vL1xuLy8gQ29weSBzZXR0aW5ncyBmcm9tIHRoaXMgZmlsZSBpbnRvIHRoZSBwcm92aWRlZCBgX2N1c3RvbS5zY3NzYCB0byBvdmVycmlkZVxuLy8gdGhlIEJvb3RzdHJhcCBkZWZhdWx0cyB3aXRob3V0IG1vZGlmeWluZyBrZXksIHZlcnNpb25lZCBmaWxlcy5cblxuXG4vLyBUYWJsZSBvZiBjb250ZW50c1xuLy9cbi8vIENvbG9yc1xuLy8gT3B0aW9uc1xuLy8gU3BhY2luZ1xuLy8gQm9keVxuLy8gTGlua3Ncbi8vIEdyaWQgYnJlYWtwb2ludHNcbi8vIEdyaWQgY29udGFpbmVyc1xuLy8gR3JpZCBjb2x1bW5zXG4vLyBGb250c1xuLy8gQ29tcG9uZW50c1xuXG4vLyBHZW5lcmFsIHZhcmlhYmxlIHN0cnVjdHVyZVxuLy9cbi8vIFZhcmlhYmxlIGZvcm1hdCBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1tb2RpZmllci1zdGF0ZS1wcm9wZXJ0eWAgb3JkZXIuXG5cblxuLy8gQ29sb3JzXG4vL1xuLy8gR3JheXNjYWxlIGFuZCBicmFuZCBjb2xvcnMgZm9yIHVzZSBhY3Jvc3MgQm9vdHN0cmFwLlxuXG4kZ3JheS1kYXJrOiAgICAgICAgICAgICAgICAgIzM3M2EzYyAhZGVmYXVsdDtcbiRncmF5OiAgICAgICAgICAgICAgICAgICAgICAjNTU1OTVjICFkZWZhdWx0O1xuJGdyYXktbGlnaHQ6ICAgICAgICAgICAgICAgICM4MThhOTEgIWRlZmF1bHQ7XG4kZ3JheS1saWdodGVyOiAgICAgICAgICAgICAgI2VjZWVlZiAhZGVmYXVsdDtcbiRncmF5LWxpZ2h0ZXN0OiAgICAgICAgICAgICAjZjhmOGY4ICFkZWZhdWx0OyAgLy8gQG1vZGlmeSBib290c3RyYXBcblxuJGJyYW5kLXByaW1hcnk6ICAgICAgICAgICAgICMwMjc1ZDggIWRlZmF1bHQ7XG4kYnJhbmQtc3VjY2VzczogICAgICAgICAgICAgIzVjYjg1YyAhZGVmYXVsdDtcbiRicmFuZC1pbmZvOiAgICAgICAgICAgICAgICAjNWJjMGRlICFkZWZhdWx0O1xuJGJyYW5kLXdhcm5pbmc6ICAgICAgICAgICAgICNmMGFkNGUgIWRlZmF1bHQ7XG4kYnJhbmQtZGFuZ2VyOiAgICAgICAgICAgICAgI2Q5NTM0ZiAhZGVmYXVsdDtcblxuXG4vLyBPcHRpb25zXG4vL1xuLy8gUXVpY2tseSBtb2RpZnkgZ2xvYmFsIHN0eWxpbmcgYnkgZW5hYmxpbmcgb3IgZGlzYWJsaW5nIG9wdGlvbmFsIGZlYXR1cmVzLlxuXG4kZW5hYmxlLWZsZXg6ICAgICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXJvdW5kZWQ6ICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXNoYWRvd3M6ICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLWdyYWRpZW50czogICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXRyYW5zaXRpb25zOiAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLWhvdmVyLW1lZGlhLXF1ZXJ5OiAgZmFsc2UgIWRlZmF1bHQ7XG5cblxuLy8gU3BhY2luZ1xuLy9cbi8vIENvbnRyb2wgdGhlIGRlZmF1bHQgc3R5bGluZyBvZiBtb3N0IEJvb3RzdHJhcCBlbGVtZW50cyBieSBtb2RpZnlpbmcgdGhlc2Vcbi8vIHZhcmlhYmxlcy4gTW9zdGx5IGZvY3VzZWQgb24gc3BhY2luZy5cblxuJHNwYWNlcjogICAgICAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJHNwYWNlci14OiAgICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuJHNwYWNlci15OiAgICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuJGJvcmRlci13aWR0aDogICAgICAgICAgICAgICAuMDYyNXJlbSAhZGVmYXVsdDtcblxuXG4vLyBCb2R5XG4vL1xuLy8gU2V0dGluZ3MgZm9yIHRoZSBgPGJvZHk+YCBlbGVtZW50LlxuXG4kYm9keS1iZzogICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kYm9keS1jb2xvcjogICAgICAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG5cblxuLy8gTGlua3Ncbi8vXG4vLyBTdHlsZSBhbmNob3IgZWxlbWVudHMuXG5cbiRsaW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgJGdyYXktZGFyayAhZGVmYXVsdDsgIC8vIEBtb2RpZnlcbiRsaW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJGxpbmstY29sb3IgIWRlZmF1bHQ7IC8vIEBtb2RpZnlcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246ICAgICAgdW5kZXJsaW5lICFkZWZhdWx0O1xuXG5cbi8vIEdyaWQgYnJlYWtwb2ludHNcbi8vXG4vLyBEZWZpbmUgdGhlIG1pbmltdW0gYW5kIG1heGltdW0gZGltZW5zaW9ucyBhdCB3aGljaCB5b3VyIGxheW91dCB3aWxsIGNoYW5nZSxcbi8vIGFkYXB0aW5nIHRvIGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMsIGZvciB1c2UgaW4gbWVkaWEgcXVlcmllcy5cblxuJGdyaWQtYnJlYWtwb2ludHM6IChcbiAgLy8gRXh0cmEgc21hbGwgc2NyZWVuIC8gcGhvbmVcbiAgeHM6IDAsXG4gIC8vIFNtYWxsIHNjcmVlbiAvIHBob25lXG4gIHNtOiAzNGVtLFxuICAvLyBNZWRpdW0gc2NyZWVuIC8gdGFibGV0XG4gIG1kOiA0OGVtLFxuICAvLyBMYXJnZSBzY3JlZW4gLyBkZXNrdG9wXG4gIGxnOiA2MmVtLFxuICAvLyBFeHRyYSBsYXJnZSBzY3JlZW4gLyB3aWRlIGRlc2t0b3BcbiAgeGw6IDc1ZW1cbikgIWRlZmF1bHQ7XG5cblxuLy8gR3JpZCBjb250YWluZXJzXG4vL1xuLy8gRGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGAuY29udGFpbmVyYCBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy5cblxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXG4gIHNtOiAzNHJlbSwgICAgLy8gNDgwXG4gIG1kOiA0NXJlbSwgICAgLy8gNzIwXG4gIGxnOiA2MHJlbSwgICAgLy8gOTYwXG4gIHhsOiA3Mi4yNXJlbSAgLy8gMTE0MFxuKSAhZGVmYXVsdDtcblxuXG4vLyBHcmlkIGNvbHVtbnNcbi8vXG4vLyBTZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIGFuZCBzcGVjaWZ5IHRoZSB3aWR0aCBvZiB0aGUgZ3V0dGVycy5cblxuJGdyaWQtY29sdW1uczogICAgICAgICAgICAgICAxMiAhZGVmYXVsdDtcbiRncmlkLWd1dHRlci13aWR0aDogICAgICAgICAgMS44NzVyZW0gIWRlZmF1bHQ7IC8vIDMwcHhcblxuXG4vLyBUeXBvZ3JhcGh5XG4vL1xuLy8gRm9udCwgbGluZS1oZWlnaHQsIGFuZCBjb2xvciBmb3IgYm9keSB0ZXh0LCBoZWFkaW5ncywgYW5kIG1vcmUuXG5cbiRmb250LWZhbWlseS1zYW5zLXNlcmlmOiAgICAgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LXNlcmlmOiAgICAgICAgICBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgc2VyaWYgIWRlZmF1bHQ7XG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiAgICAgIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSAhZGVmYXVsdDtcbiRmb250LWZhbWlseS1iYXNlOiAgICAgICAgICAgJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbi8vIFBpeGVsIHZhbHVlIHVzZWQgdG8gcmVzcG9uc2l2ZWx5IHNjYWxlIGFsbCB0eXBvZ3JhcGh5LiBBcHBsaWVkIHRvIHRoZSBgPGh0bWw+YCBlbGVtZW50LlxuJGZvbnQtc2l6ZS1yb290OiAgICAgICAgICAgICAxNHB4ICFkZWZhdWx0OyAvLyBAbW9kaWZcblxuJGZvbnQtc2l6ZS1iYXNlOiAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1sZzogICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAuODVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXhzOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcblxuJGZvbnQtc2l6ZS1oMTogICAgICAgICAgICAgICAyLjVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWgyOiAgICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWgzOiAgICAgICAgICAgICAgIDEuNzVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWg0OiAgICAgICAgICAgICAgIDEuNXJlbSAhZGVmYXVsdDtcbiRmb250LXNpemUtaDU6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRmb250LXNpemUtaDY6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXNpemU6ICAgICAgICAgICAgICAgMy41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXkyLXNpemU6ICAgICAgICAgICAgICAgNC41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXkzLXNpemU6ICAgICAgICAgICAgICAgNS41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXk0LXNpemU6ICAgICAgICAgICAgICAgNnJlbSAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkyLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkzLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXk0LXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuXG4kbGluZS1oZWlnaHQ6ICAgICAgICAgICAgICAgIDEuNSAhZGVmYXVsdDtcblxuJGhlYWRpbmdzLW1hcmdpbi1ib3R0b206ICAgICAoJHNwYWNlciAvIDIpICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiAgICAgICBpbmhlcml0ICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAgICAgICA1MDAgIWRlZmF1bHQ7XG4kaGVhZGluZ3MtbGluZS1oZWlnaHQ6ICAgICAgIDEuMSAhZGVmYXVsdDtcbiRoZWFkaW5ncy1jb2xvcjogICAgICAgICAgICAgaW5oZXJpdCAhZGVmYXVsdDtcblxuJGxlYWQtZm9udC1zaXplOiAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGxlYWQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAzMDAgIWRlZmF1bHQ7XG5cbiR0ZXh0LW11dGVkOiAgICAgICAgICAgICAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuXG4kYWJici1ib3JkZXItY29sb3I6ICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcblxuJGJsb2NrcXVvdGUtc21hbGwtY29sb3I6ICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kYmxvY2txdW90ZS1mb250LXNpemU6ICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogMS4yNSkgIWRlZmF1bHQ7XG4kYmxvY2txdW90ZS1ib3JkZXItY29sb3I6ICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kaHItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICByZ2JhKDAsMCwwLC4xKSAhZGVmYXVsdDtcbiRoci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGg7XG5cblxuLy8gQ29tcG9uZW50c1xuLy9cbi8vIERlZmluZSBjb21tb24gcGFkZGluZyBhbmQgYm9yZGVyIHJhZGl1cyBzaXplcyBhbmQgbW9yZS4gVmFsdWVzIGJhc2VkIG9uIDE0cHggdGV4dCBhbmQgMS40MjggbGluZS1oZWlnaHQgKH4yMHB4IHRvIHN0YXJ0KS5cblxuJGxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICg0LzMpICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LXNtOiAgICAgICAgIDEuNSAhZGVmYXVsdDtcblxuJGJvcmRlci1yYWRpdXM6ICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLWxnOiAgICAgICAuM3JlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLXNtOiAgICAgICAuMnJlbSAhZGVmYXVsdDtcblxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICNmZmYgIWRlZmF1bHQ7XG4kY29tcG9uZW50LWFjdGl2ZS1iZzogICAgJGJyYW5kLXByaW1hcnkgIWRlZmF1bHQ7XG5cbiRjYXJldC13aWR0aDogICAgICAgICAgICAuM2VtICFkZWZhdWx0O1xuJGNhcmV0LXdpZHRoLWxnOiAgICAgICAgICRjYXJldC13aWR0aCAhZGVmYXVsdDtcblxuXG4vLyBUYWJsZXNcbi8vXG4vLyBDdXN0b21pemVzIHRoZSBgLnRhYmxlYCBjb21wb25lbnQgd2l0aCBiYXNpYyB2YWx1ZXMsIGVhY2ggdXNlZCBhY3Jvc3MgYWxsIHRhYmxlIHZhcmlhdGlvbnMuXG5cbiR0YWJsZS1jZWxsLXBhZGRpbmc6ICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJHRhYmxlLXNtLWNlbGwtcGFkZGluZzogICAgICAgICAuM3JlbSAhZGVmYXVsdDtcblxuJHRhYmxlLWJnOiAgICAgICAgICAgICAgICAgICAgICB0cmFuc3BhcmVudCAhZGVmYXVsdDtcbiR0YWJsZS1iZy1hY2NlbnQ6ICAgICAgICAgICAgICAgI2Y5ZjlmOSAhZGVmYXVsdDtcbiR0YWJsZS1iZy1ob3ZlcjogICAgICAgICAgICAgICAgI2Y1ZjVmNSAhZGVmYXVsdDtcbiR0YWJsZS1iZy1hY3RpdmU6ICAgICAgICAgICAgICAgJHRhYmxlLWJnLWhvdmVyICFkZWZhdWx0O1xuXG4kdGFibGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICRncmF5LWxpZ2h0ZXIgIWRlZmF1bHQ7XG5cblxuLy8gQnV0dG9uc1xuLy9cbi8vIEZvciBlYWNoIG9mIEJvb3RzdHJhcCdzIGJ1dHRvbnMsIGRlZmluZSB0ZXh0LCBiYWNrZ3JvdW5kIGFuZCBib3JkZXIgY29sb3IuXG5cbiRidG4tcGFkZGluZy14OiAgICAgICAgICAgICAgICAgIDFyZW07XG4kYnRuLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAuMzc1cmVtO1xuJGJ0bi1mb250LXdlaWdodDogICAgICAgICAgICAgICAgbm9ybWFsICFkZWZhdWx0O1xuXG4kYnRuLXByaW1hcnktY29sb3I6ICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1wcmltYXJ5LWJnOiAgICAgICAgICAgICAgICAgJGJyYW5kLXByaW1hcnkgIWRlZmF1bHQ7XG4kYnRuLXByaW1hcnktYm9yZGVyOiAgICAgICAgICAgICAkYnRuLXByaW1hcnktYmcgIWRlZmF1bHQ7XG5cbiRidG4tc2Vjb25kYXJ5LWNvbG9yOiAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG4kYnRuLXNlY29uZGFyeS1iZzogICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1zZWNvbmRhcnktYm9yZGVyOiAgICAgICAgICAgI2NjYyAhZGVmYXVsdDtcblxuJGJ0bi1pbmZvLWNvbG9yOiAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRidG4taW5mby1iZzogICAgICAgICAgICAgICAgICAgICRicmFuZC1pbmZvICFkZWZhdWx0O1xuJGJ0bi1pbmZvLWJvcmRlcjogICAgICAgICAgICAgICAgJGJ0bi1pbmZvLWJnICFkZWZhdWx0O1xuXG4kYnRuLXN1Y2Nlc3MtY29sb3I6ICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1zdWNjZXNzLWJnOiAgICAgICAgICAgICAgICAgJGJyYW5kLXN1Y2Nlc3MgIWRlZmF1bHQ7XG4kYnRuLXN1Y2Nlc3MtYm9yZGVyOiAgICAgICAgICAgICAkYnRuLXN1Y2Nlc3MtYmcgIWRlZmF1bHQ7XG5cbiRidG4td2FybmluZy1jb2xvcjogICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kYnRuLXdhcm5pbmctYmc6ICAgICAgICAgICAgICAgICAkYnJhbmQtd2FybmluZyAhZGVmYXVsdDtcbiRidG4td2FybmluZy1ib3JkZXI6ICAgICAgICAgICAgICRidG4td2FybmluZy1iZyAhZGVmYXVsdDtcblxuJGJ0bi1kYW5nZXItY29sb3I6ICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRidG4tZGFuZ2VyLWJnOiAgICAgICAgICAgICAgICAgICRicmFuZC1kYW5nZXIgIWRlZmF1bHQ7XG4kYnRuLWRhbmdlci1ib3JkZXI6ICAgICAgICAgICAgICAkYnRuLWRhbmdlci1iZyAhZGVmYXVsdDtcblxuJGJ0bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRidG4tcGFkZGluZy14LXNtOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy15LXNtOiAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcblxuJGJ0bi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy15LWxnOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcblxuLy8gQWxsb3dzIGZvciBjdXN0b21pemluZyBidXR0b24gcmFkaXVzIGluZGVwZW5kZW50bHkgZnJvbSBnbG9iYWwgYm9yZGVyIHJhZGl1c1xuJGJ0bi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXM7XG4kYnRuLWJvcmRlci1yYWRpdXMtbGc6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cy1sZztcbiRidG4tYm9yZGVyLXJhZGl1cy1zbTogICAgICAgICAgICRib3JkZXItcmFkaXVzLXNtO1xuXG5cbi8vIEZvcm1zXG5cbiRpbnB1dC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC4zNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1iZzogICAgICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kaW5wdXQtYmctZGlzYWJsZWQ6ICAgICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kaW5wdXQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAkZ3JheSAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICNjY2MgIWRlZmF1bHQ7XG4kaW5wdXQtYm94LXNoYWRvdzogICAgICAgICAgICAgICBpbnNldCAwIDFweCAxcHggcmdiYSgwLDAsMCwuMDc1KSAhZGVmYXVsdDtcblxuJGlucHV0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1sZzogICAgICAgICAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXItcmFkaXVzLXNtOiAgICAgICAgICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xuXG4kaW5wdXQtYm9yZGVyLWZvY3VzOiAgICAgICAgICAgICAjNjZhZmU5ICFkZWZhdWx0O1xuJGlucHV0LWJveC1zaGFkb3ctZm9jdXM6ICAgICAgICAgcmdiYSgxMDIsMTc1LDIzMywuNikgIWRlZmF1bHQ7XG5cbiRpbnB1dC1jb2xvci1wbGFjZWhvbGRlcjogICAgICAgICM5OTkgIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXgtc206ICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXktc206ICAgICAgICAgICAgIC4yNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy15LWxnOiAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICgoJGZvbnQtc2l6ZS1iYXNlICogJGxpbmUtaGVpZ2h0KSArICgkaW5wdXQtcGFkZGluZy15ICogMikgKyAoJGJvcmRlci13aWR0aCAqIDIpKSAhZGVmYXVsdDtcbiRpbnB1dC1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICgoJGZvbnQtc2l6ZS1sZyAqICRsaW5lLWhlaWdodC1sZykgKyAoJGlucHV0LXBhZGRpbmcteS1sZyAqIDIpICsgKCRib3JkZXItd2lkdGggKiAyKSkgIWRlZmF1bHQ7XG4kaW5wdXQtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAoKCRmb250LXNpemUtc20gKiAkbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1wYWRkaW5nLXktc20gKiAyKSArICgkYm9yZGVyLXdpZHRoICogMikpICFkZWZhdWx0O1xuXG4kZm9ybS1ncm91cC1tYXJnaW4tYm90dG9tOiAgICAgICAxNXB4O1xuXG4kaW5wdXQtZ3JvdXAtYWRkb24tYmc6ICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlciAhZGVmYXVsdDtcblxuJGN1cnNvci1kaXNhYmxlZDogICAgICAgICAgICAgICAgbm90LWFsbG93ZWQgIWRlZmF1bHQ7XG5cbi8vIEZvcm0gdmFsaWRhdGlvbiBpY29uc1xuJGZvcm0taWNvbi1zdWNjZXNzOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWRYUm1MVGdpUHo0OGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa05vWldOcklpQjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIaHRiRzV6T25oc2FXNXJQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUwzaHNhVzVySWlCNFBTSXdjSGdpSUhrOUlqQndlQ0lnZG1sbGQwSnZlRDBpTUNBd0lEWXhNaUEzT1RJaUlHVnVZV0pzWlMxaVlXTnJaM0p2ZFc1a1BTSnVaWGNnTUNBd0lEWXhNaUEzT1RJaUlIaHRiRHB6Y0dGalpUMGljSEpsYzJWeWRtVWlQanh3WVhSb0lHWnBiR3c5SWlNMVEwSTROVU1pSUdROUlrMHlNek11T0N3Mk1UQXVNV010TVRNdU15d3dMVEkxTGprdE5pNHlMVE0wTFRFMkxqbE1PVEF1TlN3ME5EZ3VPRU0zTmk0ekxEUXpNQ3c0TUN3ME1ETXVNeXc1T0M0NExETTRPUzR4WXpFNExqZ3RNVFF1TXl3ME5TNDFMVEV3TGpVc05Ua3VPQ3c0TGpOc056RXVPU3c1Tld3eU1qQXVPUzB5TlRBdU5XTXhNaTQxTFRJd0xETTRMamd0TWpZdU1TdzFPQzQ0TFRFekxqWmpNakFzTVRJdU5Dd3lOaTR4TERNNExqY3NNVE11Tml3MU9DNDRUREkzTUN3MU9UQmpMVGN1TkN3eE1pMHlNQzR5TERFNUxqUXRNelF1TXl3eU1DNHhRekl6TlM0eExEWXhNQzR4TERJek5DNDFMRFl4TUM0eExESXpNeTQ0TERZeE1DNHhlaUl2UGp3dmMzWm5QZz09XCI7XG4kZm9ybS1pY29uLXdhcm5pbmc6IFwiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejQ4YzNabklIWmxjbk5wYjI0OUlqRXVNU0lnYVdROUlsZGhjbTVwYm1jaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJZ2VHMXNibk02ZUd4cGJtczlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNpSUhnOUlqQndlQ0lnZVQwaU1IQjRJaUIyYVdWM1FtOTRQU0l3SURBZ05qRXlJRGM1TWlJZ1pXNWhZbXhsTFdKaFkydG5jbTkxYm1ROUltNWxkeUF3SURBZ05qRXlJRGM1TWlJZ2VHMXNPbk53WVdObFBTSndjbVZ6WlhKMlpTSStQSEJoZEdnZ1ptbHNiRDBpSTBZd1FVUTBSU0lnWkQwaVRUWXdNeXcyTkRBdU1td3RNamM0TGpVdE5UQTVZeTB6TGpndE5pNDJMVEV3TGpndE1UQXVOaTB4T0M0MUxURXdMalp6TFRFMExqY3NOQzR4TFRFNExqVXNNVEF1Tmt3NUxEWTBNQzR5WXkwekxqY3NOaTQxTFRNdU5pd3hOQzQwTERBdU1pd3lNQzQ0WXpNdU9DdzJMalVzTVRBdU9Dd3hNQzQwTERFNExqTXNNVEF1TkdnMU5UY3VNV00zTGpVc01Dd3hOQzQxTFRNdU9Td3hPQzR6TFRFd0xqUkROakEyTGpZc05qVTBMallzTmpBMkxqY3NOalEyTGpZc05qQXpMRFkwTUM0eWVpQk5Nek0yTGpZc05qRXdMakpvTFRZeExqSldOVFE1YURZeExqSldOakV3TGpKNklFMHpNell1Tml3MU1ETXVNV2d0TmpFdU1sWXpNRFF1TW1nMk1TNHlWalV3TXk0eGVpSXZQand2YzNablBnPT1cIjtcbiRmb3JtLWljb24tZXJyb3I6IFwiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejQ4YzNabklIWmxjbk5wYjI0OUlqRXVNU0lnYVdROUlrTnliM056SWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhodGJHNXpPbmhzYVc1clBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNoc2FXNXJJaUI0UFNJd2NIZ2lJSGs5SWpCd2VDSWdkbWxsZDBKdmVEMGlNQ0F3SURZeE1pQTNPVElpSUdWdVlXSnNaUzFpWVdOclozSnZkVzVrUFNKdVpYY2dNQ0F3SURZeE1pQTNPVElpSUhodGJEcHpjR0ZqWlQwaWNISmxjMlZ5ZG1VaVBqeHdZWFJvSUdacGJHdzlJaU5FT1RVek5FWWlJR1E5SWswME5EY3NOVFEwTGpSakxURTBMalFzTVRRdU5DMHpOeTQyTERFMExqUXROVEV1T1N3d1RETXdOaXcwTlRFdU4yd3RPRGt1TVN3NU1pNDNZeTB4TkM0MExERTBMalF0TXpjdU5pd3hOQzQwTFRVeExqa3NNR010TVRRdU5DMHhOQzQwTFRFMExqUXRNemN1Tml3d0xUVXhMamxzT1RJdU5DMDVOaTQwVERFMk5Td3lPVGt1Tm1NdE1UUXVOQzB4TkM0MExURTBMalF0TXpjdU5pd3dMVFV4TGpsek16Y3VOaTB4TkM0MExEVXhMamtzTUd3NE9TNHlMRGt5TGpkc09Ea3VNUzA1TWk0M1l6RTBMalF0TVRRdU5Dd3pOeTQyTFRFMExqUXNOVEV1T1N3d1l6RTBMalFzTVRRdU5Dd3hOQzQwTERNM0xqWXNNQ3cxTVM0NVRETTFOQzQzTERNNU5tdzVNaTQwTERrMkxqUkRORFl4TGpRc05UQTJMamdzTkRZeExqUXNOVE13TERRME55dzFORFF1TkhvaUx6NDhMM04yWno0PVwiO1xuXG5cbi8vIERyb3Bkb3duc1xuLy9cbi8vIERyb3Bkb3duIG1lbnUgY29udGFpbmVyIGFuZCBjb250ZW50cy5cblxuJGRyb3Bkb3duLWJnOiAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXI6ICAgICAgICAgICAgICAgIHJnYmEoMCwwLDAsLjE1KSAhZGVmYXVsdDtcbiRkcm9wZG93bi1kaXZpZGVyLWJnOiAgICAgICAgICAgICNlNWU1ZTUgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWNvbG9yOiAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogICAgICBkYXJrZW4oJGdyYXktZGFyaywgNSUpICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICAgICAgICAgI2Y1ZjVmNSAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1hY3RpdmUtYmc6ICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I6ICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICAgICAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuXG5cbi8vIFotaW5kZXggbWFzdGVyIGxpc3Rcbi8vXG4vLyBXYXJuaW5nOiBBdm9pZCBjdXN0b21pemluZyB0aGVzZSB2YWx1ZXMuIFRoZXkncmUgdXNlZCBmb3IgYSBiaXJkJ3MgZXllIHZpZXdcbi8vIG9mIGNvbXBvbmVudHMgZGVwZW5kZW50IG9uIHRoZSB6LWF4aXMgYW5kIGFyZSBkZXNpZ25lZCB0byBhbGwgd29yayB0b2dldGhlci5cbi8vXG4vLyBOb3RlOiBUaGVzZSB2YXJpYWJsZXMgYXJlIG5vdCBnZW5lcmF0ZWQgaW50byB0aGUgQ3VzdG9taXplci5cblxuJHppbmRleC1uYXZiYXI6ICAgICAgICAgICAgMTAwMCAhZGVmYXVsdDtcbiR6aW5kZXgtZHJvcGRvd246ICAgICAgICAgIDEwMDAgIWRlZmF1bHQ7XG4kemluZGV4LXBvcG92ZXI6ICAgICAgICAgICAxMDYwICFkZWZhdWx0O1xuJHppbmRleC10b29sdGlwOiAgICAgICAgICAgMTA3MCAhZGVmYXVsdDtcbiR6aW5kZXgtbmF2YmFyLWZpeGVkOiAgICAgIDEwMzAgIWRlZmF1bHQ7XG4kemluZGV4LW5hdmJhci1zdGlja3k6ICAgICAxMDMwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbC1iZzogICAgICAgICAgMTA0MCAhZGVmYXVsdDtcbiR6aW5kZXgtbW9kYWw6ICAgICAgICAgICAgIDEwNTAgIWRlZmF1bHQ7XG5cblxuLy8gTmF2YmFyXG5cbiRuYXZiYXItYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJG5hdmJhci1wYWRkaW5nLWhvcml6b250YWw6ICAgICAgICAgJHNwYWNlciAhZGVmYXVsdDtcbiRuYXZiYXItcGFkZGluZy12ZXJ0aWNhbDogICAgICAgICAgICgkc3BhY2VyIC8gMikgIWRlZmF1bHQ7XG5cbiRuYXZiYXItZGFyay1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoMjU1LDI1NSwyNTUsLjUpO1xuJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgyNTUsMjU1LDI1NSwuNzUpO1xuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogICAgICAgICAgcmdiYSgyNTUsMjU1LDI1NSwxKTtcbiRuYXZiYXItZGFyay1kaXNhYmxlZC1jb2xvcjogICAgICAgIHJnYmEoMjU1LDI1NSwyNTUsLjI1KTtcblxuJG5hdmJhci1saWdodC1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMyk7XG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAgICAgICAgICByZ2JhKDAsMCwwLC42KTtcbiRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAgICAgICAgIHJnYmEoMCwwLDAsLjgpO1xuJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogICAgICAgcmdiYSgwLDAsMCwuMTUpO1xuXG5cbi8vIE5hdnNcblxuJG5hdi1saW5rLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAuNWVtIDFlbSAhZGVmYXVsdDtcbiRuYXYtbGluay1ob3Zlci1iZzogICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktbGlnaHRlciAhZGVmYXVsdDtcblxuJG5hdi1kaXNhYmxlZC1saW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRuYXYtZGlzYWJsZWQtbGluay1ob3Zlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRuYXYtdGFicy1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAgI2RkZCAhZGVmYXVsdDtcblxuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kbmF2LXRhYnMtYWN0aXZlLWxpbmstaG92ZXItYmc6ICAgICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xuJG5hdi10YWJzLWFjdGl2ZS1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAkZ3JheSAhZGVmYXVsdDtcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1ib3JkZXItY29sb3I6ICAgI2RkZCAhZGVmYXVsdDtcblxuJG5hdi10YWJzLWp1c3RpZmllZC1saW5rLWJvcmRlci1jb2xvcjogICAgICAgICAgICAjZGRkICFkZWZhdWx0O1xuJG5hdi10YWJzLWp1c3RpZmllZC1hY3RpdmUtbGluay1ib3JkZXItY29sb3I6ICAgICAkYm9keS1iZyAhZGVmYXVsdDtcblxuJG5hdi1waWxscy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRuYXYtcGlsbHMtYWN0aXZlLWxpbmstaG92ZXItYmc6ICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kbmF2LXBpbGxzLWFjdGl2ZS1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuXG5cbi8vIFBhZ2luYXRpb25cblxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktc206ICAgICAgICAgICAgIC4yNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgIDEuNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1sZzogICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuXG5cbiRwYWdpbmF0aW9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICRsaW5rLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tYmc6ICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICRsaW5rLWhvdmVyLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24taG92ZXItYmc6ICAgICAgICAgICAgICAgICAgJGdyYXktbGlnaHRlciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlcjogICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWFjdGl2ZS1ib3JkZXI6ICAgICAgICAgICAgICRicmFuZC1wcmltYXJ5ICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXI6ICAgICAgICAgICAjZGRkICFkZWZhdWx0O1xuXG5cbi8vIFBhZ2VyXG5cbiRwYWdlci1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWJnICFkZWZhdWx0O1xuJHBhZ2VyLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24tYm9yZGVyICFkZWZhdWx0O1xuJHBhZ2VyLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgICAgMTVweCAhZGVmYXVsdDtcblxuJHBhZ2VyLWhvdmVyLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24taG92ZXItYmcgIWRlZmF1bHQ7XG5cbiRwYWdlci1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRwYWdlci1hY3RpdmUtY29sb3I6ICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcblxuJHBhZ2VyLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3IgIWRlZmF1bHQ7XG5cblxuLy8gSnVtYm90cm9uXG5cbiRqdW1ib3Ryb24tcGFkZGluZzogICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kanVtYm90cm9uLWJnOiAgICAgICAgICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG5cbi8vIEZvcm0gc3RhdGVzIGFuZCBhbGVydHNcbi8vXG4vLyBEZWZpbmUgY29sb3JzIGZvciBmb3JtIGZlZWRiYWNrIHN0YXRlcyBhbmQsIGJ5IGRlZmF1bHQsIGFsZXJ0cy5cblxuJHN0YXRlLXN1Y2Nlc3MtdGV4dDogICAgICAgICAgICAgIzNjNzYzZCAhZGVmYXVsdDtcbiRzdGF0ZS1zdWNjZXNzLWJnOiAgICAgICAgICAgICAgICNkZmYwZDggIWRlZmF1bHQ7XG4kc3RhdGUtc3VjY2Vzcy1ib3JkZXI6ICAgICAgICAgICBkYXJrZW4oJHN0YXRlLXN1Y2Nlc3MtYmcsIDUlKSAhZGVmYXVsdDtcblxuJHN0YXRlLWluZm8tdGV4dDogICAgICAgICAgICAgICAgIzMxNzA4ZiAhZGVmYXVsdDtcbiRzdGF0ZS1pbmZvLWJnOiAgICAgICAgICAgICAgICAgICNkOWVkZjcgIWRlZmF1bHQ7XG4kc3RhdGUtaW5mby1ib3JkZXI6ICAgICAgICAgICAgICBkYXJrZW4oJHN0YXRlLWluZm8tYmcsIDclKSAhZGVmYXVsdDtcblxuJHN0YXRlLXdhcm5pbmctdGV4dDogICAgICAgICAgICAgIzhhNmQzYiAhZGVmYXVsdDtcbiRzdGF0ZS13YXJuaW5nLWJnOiAgICAgICAgICAgICAgICNmY2Y4ZTMgIWRlZmF1bHQ7XG4kc3RhdGUtd2FybmluZy1ib3JkZXI6ICAgICAgICAgICBkYXJrZW4oJHN0YXRlLXdhcm5pbmctYmcsIDUlKSAhZGVmYXVsdDtcblxuJHN0YXRlLWRhbmdlci10ZXh0OiAgICAgICAgICAgICAgI2E5NDQ0MiAhZGVmYXVsdDtcbiRzdGF0ZS1kYW5nZXItYmc6ICAgICAgICAgICAgICAgICNmMmRlZGUgIWRlZmF1bHQ7XG4kc3RhdGUtZGFuZ2VyLWJvcmRlcjogICAgICAgICAgICBkYXJrZW4oJHN0YXRlLWRhbmdlci1iZywgNSUpICFkZWZhdWx0O1xuXG5cbi8vIFRvb2x0aXBzXG5cbiR0b29sdGlwLW1heC13aWR0aDogICAgICAgICAgIDIwMHB4ICFkZWZhdWx0O1xuJHRvb2x0aXAtY29sb3I6ICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiR0b29sdGlwLWJnOiAgICAgICAgICAgICAgICAgICMwMDAgIWRlZmF1bHQ7XG4kdG9vbHRpcC1vcGFjaXR5OiAgICAgICAgICAgICAuOSAhZGVmYXVsdDtcblxuJHRvb2x0aXAtYXJyb3ctd2lkdGg6ICAgICAgICAgNXB4ICFkZWZhdWx0O1xuJHRvb2x0aXAtYXJyb3ctY29sb3I6ICAgICAgICAgJHRvb2x0aXAtYmcgIWRlZmF1bHQ7XG5cblxuLy8gUG9wb3ZlcnNcblxuJHBvcG92ZXItYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJHBvcG92ZXItbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgICAyNzZweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMikgIWRlZmF1bHQ7XG4kcG9wb3Zlci1mYWxsYmFjay1ib3JkZXItY29sb3I6ICAgICAgICNjY2MgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLXRpdGxlLWJnOiAgICAgICAgICAgICAgICAgICAgZGFya2VuKCRwb3BvdmVyLWJnLCAzJSkgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgICAgMTBweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICAgJHBvcG92ZXItYmcgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWFycm93LW91dGVyLXdpZHRoOiAgICAgICAgICAgKCRwb3BvdmVyLWFycm93LXdpZHRoICsgMSkgIWRlZmF1bHQ7XG4kcG9wb3Zlci1hcnJvdy1vdXRlci1jb2xvcjogICAgICAgICAgIGZhZGUtaW4oJHBvcG92ZXItYm9yZGVyLWNvbG9yLCAwLjA1KSAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LW91dGVyLWZhbGxiYWNrLWNvbG9yOiAgZGFya2VuKCRwb3BvdmVyLWZhbGxiYWNrLWJvcmRlci1jb2xvciwgMjAlKSAhZGVmYXVsdDtcblxuXG4vLyBMYWJlbHNcblxuJGxhYmVsLWRlZmF1bHQtYmc6ICAgICAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kbGFiZWwtcHJpbWFyeS1iZzogICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRsYWJlbC1zdWNjZXNzLWJnOiAgICAgICAgICAgICRicmFuZC1zdWNjZXNzICFkZWZhdWx0O1xuJGxhYmVsLWluZm8tYmc6ICAgICAgICAgICAgICAgJGJyYW5kLWluZm8gIWRlZmF1bHQ7XG4kbGFiZWwtd2FybmluZy1iZzogICAgICAgICAgICAkYnJhbmQtd2FybmluZyAhZGVmYXVsdDtcbiRsYWJlbC1kYW5nZXItYmc6ICAgICAgICAgICAgICRicmFuZC1kYW5nZXIgIWRlZmF1bHQ7XG5cbiRsYWJlbC1jb2xvcjogICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kbGFiZWwtbGluay1ob3Zlci1jb2xvcjogICAgICAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIE1vZGFsc1xuXG4vLyBQYWRkaW5nIGFwcGxpZWQgdG8gdGhlIG1vZGFsIGJvZHlcbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAgICAgICAgIDE1cHggIWRlZmF1bHQ7XG5cbiRtb2RhbC10aXRsZS1wYWRkaW5nOiAgICAgICAgIDE1cHggIWRlZmF1bHQ7XG4kbW9kYWwtdGl0bGUtbGluZS1oZWlnaHQ6ICAgICAkbGluZS1oZWlnaHQgIWRlZmF1bHQ7XG5cbiRtb2RhbC1jb250ZW50LWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMikgIWRlZmF1bHQ7XG5cbiRtb2RhbC1iYWNrZHJvcC1iZzogICAgICAgICAgICMwMDAgIWRlZmF1bHQ7XG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogICAgICAuNSAhZGVmYXVsdDtcbiRtb2RhbC1oZWFkZXItYm9yZGVyLWNvbG9yOiAgICNlNWU1ZTUgIWRlZmF1bHQ7XG4kbW9kYWwtZm9vdGVyLWJvcmRlci1jb2xvcjogICAkbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJG1vZGFsLWxnOiAgICAgICAgICAgICAgICAgICAgOTAwcHggIWRlZmF1bHQ7XG4kbW9kYWwtbWQ6ICAgICAgICAgICAgICAgICAgICA2MDBweCAhZGVmYXVsdDtcbiRtb2RhbC1zbTogICAgICAgICAgICAgICAgICAgIDMwMHB4ICFkZWZhdWx0O1xuXG5cbi8vIEFsZXJ0c1xuLy9cbi8vIERlZmluZSBhbGVydCBjb2xvcnMsIGJvcmRlciByYWRpdXMsIGFuZCBwYWRkaW5nLlxuXG4kYWxlcnQtcGFkZGluZzogICAgICAgICAgICAgICAxNXB4ICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kYWxlcnQtbGluay1mb250LXdlaWdodDogICAgICBib2xkICFkZWZhdWx0O1xuXG4kYWxlcnQtc3VjY2Vzcy1iZzogICAgICAgICAgICAkc3RhdGUtc3VjY2Vzcy1iZyAhZGVmYXVsdDtcbiRhbGVydC1zdWNjZXNzLXRleHQ6ICAgICAgICAgICRzdGF0ZS1zdWNjZXNzLXRleHQgIWRlZmF1bHQ7XG4kYWxlcnQtc3VjY2Vzcy1ib3JkZXI6ICAgICAgICAkc3RhdGUtc3VjY2Vzcy1ib3JkZXIgIWRlZmF1bHQ7XG5cbiRhbGVydC1pbmZvLWJnOiAgICAgICAgICAgICAgICRzdGF0ZS1pbmZvLWJnICFkZWZhdWx0O1xuJGFsZXJ0LWluZm8tdGV4dDogICAgICAgICAgICAgJHN0YXRlLWluZm8tdGV4dCAhZGVmYXVsdDtcbiRhbGVydC1pbmZvLWJvcmRlcjogICAgICAgICAgICRzdGF0ZS1pbmZvLWJvcmRlciAhZGVmYXVsdDtcblxuJGFsZXJ0LXdhcm5pbmctYmc6ICAgICAgICAgICAgJHN0YXRlLXdhcm5pbmctYmcgIWRlZmF1bHQ7XG4kYWxlcnQtd2FybmluZy10ZXh0OiAgICAgICAgICAkc3RhdGUtd2FybmluZy10ZXh0ICFkZWZhdWx0O1xuJGFsZXJ0LXdhcm5pbmctYm9yZGVyOiAgICAgICAgJHN0YXRlLXdhcm5pbmctYm9yZGVyICFkZWZhdWx0O1xuXG4kYWxlcnQtZGFuZ2VyLWJnOiAgICAgICAgICAgICAkc3RhdGUtZGFuZ2VyLWJnICFkZWZhdWx0O1xuJGFsZXJ0LWRhbmdlci10ZXh0OiAgICAgICAgICAgJHN0YXRlLWRhbmdlci10ZXh0ICFkZWZhdWx0O1xuJGFsZXJ0LWRhbmdlci1ib3JkZXI6ICAgICAgICAgJHN0YXRlLWRhbmdlci1ib3JkZXIgIWRlZmF1bHQ7XG5cblxuLy8gUHJvZ3Jlc3MgYmFyc1xuXG4kcHJvZ3Jlc3MtYmc6ICAgICAgICAgICAgICAgICAjZjVmNWY1ICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1jb2xvcjogICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG4kcHJvZ3Jlc3MtYmFyLWJnOiAgICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1iYXItc3VjY2Vzcy1iZzogICAgICRicmFuZC1zdWNjZXNzICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci13YXJuaW5nLWJnOiAgICAgJGJyYW5kLXdhcm5pbmcgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWRhbmdlci1iZzogICAgICAkYnJhbmQtZGFuZ2VyICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1pbmZvLWJnOiAgICAgICAgJGJyYW5kLWluZm8gIWRlZmF1bHQ7XG5cblxuLy8gTGlzdCBncm91cFxuXG4kbGlzdC1ncm91cC1iZzogICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXI6ICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogICAgICAgICAgICNmNWY1ZjUgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3RpdmUtY29sb3I6ICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLWJnOiAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGl2ZS1ib3JkZXI6ICAgICAgJGxpc3QtZ3JvdXAtYWN0aXZlLWJnICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLXRleHQtY29sb3I6ICBsaWdodGVuKCRsaXN0LWdyb3VwLWFjdGl2ZS1iZywgNDAlKSAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1kaXNhYmxlZC1iZzogICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtdGV4dC1jb2xvcjogJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3IgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWxpbmstY29sb3I6ICAgICAgICAgIzU1NSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWxpbmstaG92ZXItY29sb3I6ICAgJGxpc3QtZ3JvdXAtbGluay1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWxpbmstaGVhZGluZy1jb2xvcjogIzMzMyAhZGVmYXVsdDtcblxuXG4vLyBJbWFnZSB0aHVtYm5haWxzXG5cbiR0aHVtYm5haWwtcGFkZGluZzogICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYmc6ICAgICAgICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xuJHRodW1ibmFpbC1ib3JkZXI6ICAgICAgICAgICAgI2RkZCAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYm9yZGVyLXJhZGl1czogICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG5cbi8vIEJyZWFkY3J1bWJzXG5cbiRicmVhZGNydW1iLXBhZGRpbmctdmVydGljYWw6ICAgLjc1cmVtICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItcGFkZGluZy1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xuXG4kYnJlYWRjcnVtYi1iZzogICAgICAgICAgICAgICAgICRncmF5LWxpZ2h0ZXIgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWRpdmlkZXI6ICAgICAgICAgICAgXCIvXCIgIWRlZmF1bHQ7XG5cblxuLy8gQ2Fyb3VzZWxcblxuJGNhcm91c2VsLXRleHQtc2hhZG93OiAgICAgICAgICAgICAgICAgICAgICAgIDAgMXB4IDJweCByZ2JhKDAsMCwwLC42KSAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWNvbnRyb2wtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC13aWR0aDogICAgICAgICAgICAgICAgICAgICAgMTUlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtb3BhY2l0eTogICAgICAgICAgICAgICAgICAgIC41ICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgIDIwcHggIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGNhcm91c2VsLWluZGljYXRvci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIENsb3NlXG5cbiRjbG9zZS1mb250LXdlaWdodDogICAgICAgICAgIGJvbGQgIWRlZmF1bHQ7XG4kY2xvc2UtY29sb3I6ICAgICAgICAgICAgICAgICAjMDAwICFkZWZhdWx0O1xuJGNsb3NlLXRleHQtc2hhZG93OiAgICAgICAgICAgMCAxcHggMCAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIENvZGVcblxuJGNvZGUtY29sb3I6ICAgICAgICAgICAgICAgICAgI2JkNDE0NyAhZGVmYXVsdDtcbiRjb2RlLWJnOiAgICAgICAgICAgICAgICAgICAgICNmN2Y3ZjkgIWRlZmF1bHQ7XG5cbiRrYmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4ka2JkLWJnOiAgICAgICAgICAgICAgICAgICAgICAjMzMzICFkZWZhdWx0O1xuXG4kcHJlLWJnOiAgICAgICAgICAgICAgICAgICAgICAjZjdmN2Y5ICFkZWZhdWx0O1xuJHByZS1jb2xvcjogICAgICAgICAgICAgICAgICAgJGdyYXktZGFyayAhZGVmYXVsdDtcbiRwcmUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICNjY2MgIWRlZmF1bHQ7XG4kcHJlLXNjcm9sbGFibGUtbWF4LWhlaWdodDogICAzNDBweCAhZGVmYXVsdDtcbiIsIi8vIFRleHQgdHJ1bmNhdGVcbi8vIFJlcXVpcmVzIGlubGluZS1ibG9jayBvciBibG9jayBmb3IgcHJvcGVyIHN0eWxpbmdcblxuQG1peGluIHRleHQtdHJ1bmNhdGUoKSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSIsIi8vIENsZWFyZml4XG4vL1xuLy8gRm9yIG1vZGVybiBicm93c2Vyc1xuLy8gMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbi8vICAgIGNvbnRlbnRlZGl0YWJsZSBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXG4vLyAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgZWxlbWVudHNcbi8vICAgIHRoYXQgYXJlIGNsZWFyZml4ZWQuXG4vLyAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuLy8gICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuLy9cbi8vIFNvdXJjZTogaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL21pY3JvLWNsZWFyZml4LWhhY2svXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcbiAgJjpiZWZvcmUsXG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiOyAvLyAxXG4gICAgZGlzcGxheTogdGFibGU7IC8vIDJcbiAgfVxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */

/*# sourceMappingURL=../../map/pages-main/baike.css.map */
