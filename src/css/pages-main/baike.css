@charset "UTF-8";
/* 百科页面样式 */
.index-baike-list em, #location em, .hot-photos em {
  margin: 0 3px;
  color: #bd0401; }

.index-baike-list em {
  font-weight: bold; }

#header {
  margin-bottom: 0; }

#location {
  color: #55595c;
  border-bottom: 1px solid #eceeef; }
  #location .on {
    color: #373a3c;
    font-weight: bold; }

.index-top-cates {
  margin-left: -0.7%; }
  .index-top-cates .cate {
    float: left;
    width: 32.63333%;
    padding: 1em 0;
    margin-left: 0.7%;
    background-color: #fafafb;
    border: 1px solid #eceeef; }
  .index-top-cates .left-glyph {
    height: 4.92857em;
    text-align: center;
    padding: 0 2.07143em;
    vertical-align: middle;
    border-right: 1px solid #eceeef;
    color: #bd0401; }
    .index-top-cates .left-glyph p {
      white-space: nowrap;
      margin-top: 10px;
      font-size: 1.14286em;
      font-weight: bold; }
  .index-top-cates .label-cate {
    padding: 0 1.78571em; }
    .index-top-cates .label-cate .label {
      margin-top: 0;
      margin-bottom: 0; }
  .index-top-cates .label-title {
    padding: 0  0 0.4em;
    color: #747d85; }

.index-baike-list {
  padding: 1.07143em 1.71429em;
  border: 1px solid #eceeef; }
  .index-baike-list .media-newsitem {
    padding-bottom: 2.8em;
    border-bottom: 1px dashed #eceeef; }
  .index-baike-list .media-title {
    font-size: 1.45em;
    margin-bottom: .8em; }
  .index-baike-list .thumbnail {
    padding: 1px;
    border: 1px solid #eceeef; }
  .index-baike-list .img-title {
    line-height: 24px;
    text-align: center;
    margin-top: 1px;
    font-size: 0.85714em;
    background-color: #fafafb; }
  .index-baike-list .media-text {
    line-height: 2.14286em; }
  .index-baike-list .media-other i {
    margin: 0 0 0 5px; }
  .index-baike-list .labels {
    line-height: 1.8;
    margin-bottom: 1em;
    overflow: hidden;
    font-size: 0.85714em;
    color: #373a3c; }
    .index-baike-list .labels a {
      float: left;
      margin-right: 4px;
      padding: 0 .8em;
      border: 1px solid #dddddd;
      border-radius: 10px;
      background-color: #f2f3f4; }
  .index-baike-list .media-newsitem .media-other {
    bottom: -2.0em; }

.yuyue-form {
  background-color: #f7f7f9; }
  .yuyue-form .form-tab li:hover, .yuyue-form .form-tab li.on {
    background-color: #fff; }

.cont-box {
  padding: 0.42857em 1.28571em;
  border: 1px solid #eceeef; }
  .cont-box .title-bar {
    border-bottom: 1px solid #eceeef; }
    .cont-box .title-bar .title {
      font-size: 1.14286em; }
  .cont-box .cont-block {
    margin-top: 0.71429em; }

.hot-labels .label-bar {
  padding: 0;
  line-height: 3; }
.hot-labels .label {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: 10em;
  padding-left: 0.71429em;
  padding-right: 0.71429em;
  background-color: #f7f7f9;
  margin-bottom: 0.71429em;
  margin-right: 0.71429em; }

.rd-zx-tabs .tabs-base li {
  width: 50%; }
  .rd-zx-tabs .tabs-base li.on, .rd-zx-tabs .tabs-base li:hover {
    font-weight: bold; }
.rd-zx-tabs .list-group-item {
  margin-bottom: 0;
  border-bottom: 1px dashed #dddddd;
  color: #55595c;
  font-size: 0.85714em; }
  .rd-zx-tabs .list-group-item .right-info {
    color: #55595c; }

.hot-brands .label-bar {
  line-height: 1.4;
  padding: 0.71429em 0.42857em;
  border-bottom: 1px solid #eceeef; }
.hot-brands .label {
  margin-right: 1.2em; }
.hot-brands .item-labels {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0.85714em 0.42857em;
  line-height: 1;
  color: #55595c; }
  .hot-brands .item-labels span {
    display: inline-block;
    padding: 0 12px; }
    .hot-brands .item-labels span:first-child {
      font-weight: bold;
      padding-left: 0;
      border-right: 1px solid #eceeef; }
  .hot-brands .item-labels .right-info {
    font-size: 0.85714em;
    color: #818a91; }
.hot-brands .item .icon-minus, .hot-brands .item .label-bar {
  display: none; }
.hot-brands .item.on .item-labels {
  background-color: #f7f7f9; }
  .hot-brands .item.on .item-labels span:first-child {
    color: #bd0401; }
.hot-brands .item.on .icon-plus {
  display: none; }
.hot-brands .item.on .icon-minus {
  display: inline-block; }
.hot-brands .item.on .label-bar {
  display: block;
  height: auto; }

.hot-photos .cont-block:before, .hot-photos .cont-block:after {
  content: " ";
  display: table; }
.hot-photos .cont-block:after {
  clear: both; }
.hot-photos .media-base {
  float: left;
  width: 50%;
  padding: 0 1em;
  margin-bottom: 0.71429em; }
.hot-photos .media-explain {
  font-size: 0.85714em; }

.newstype-detail {
  border: 1px solid #eceeef; }

.correlation-cont {
  background-color: #eceeef;
  padding: 0 12px 12px; }
  .correlation-cont .title-bar .title {
    color: #bd0401;
    font-size: 1.14286em; }
  .correlation-cont .cont-line {
    padding: 1.07143em 1.28571em 0.71429em;
    background-color: #fff;
    border-bottom: 1px dashed #dddddd; }
  .correlation-cont .media-base, .correlation-cont .list-group {
    float: left;
    width: 33.33333%;
    padding: 0 1.92857em; }
  .correlation-cont .media-base {
    margin: 0;
    padding: 0 1.92857em; }
    .correlation-cont .media-base .thumbnail {
      height: 142px;
      line-height: 138.5px; }
  .correlation-cont .media-title {
    text-align: center; }
  .correlation-cont .list-dot .list-group-item:before {
    display: inline-block;
    width: 0;
    height: 0;
    vertical-align: middle;
    border-left: 3px solid #bd0401;
    border-top: 3px solid transparent;
    border-bottom: 3px solid transparent;
    border-right: 0 dotted;
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
    background-color: transparent;
    margin-top: -3px; }
  .correlation-cont .list-dot .list-group-item {
    padding-top: 3px;
    padding-bottom: 3px; }



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhaWtlLmNzcyIsInBhZ2VzLW1haW4vYmFpa2Uuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsIi4uL2Jvb3RzdHJhcDQvc2Nzcy9fdmFyaWFibGVzLnNjc3MiLCIuLi9ib290c3RyYXA0L3Njc3MvbWl4aW5zL190ZXh0LXRydW5jYXRlLnNjc3MiLCIuLi9ib290c3RyYXA0L3Njc3MvbWl4aW5zL19jbGVhcmZpeC5zY3NzIiwiX21peGlucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQUNqQixZQUFZO0FDTVY7RUFDRSxjQUFhO0VBQ2IsZUNGbUMsRUFBQTs7QURLdkM7RUFBdUIsa0JBQWlCLEVBQUE7O0FBRXhDO0VBQVUsaUJBQWdCLEVBQUE7O0FBRTFCO0VBQ0UsZUU4VitDO0VGN1YvQyxpQ0FBc0MsRUFBQTtFQUN0QztJQUNFLGVFcWxCb0M7SUZwbEJwQyxrQkFBaUIsRUFBQTs7QUFLckI7RUFDRSxtQkFBa0IsRUFBQTtFQUNsQjtJQUNFLFlBQVc7SUFDWCxpQkFBNkI7SUFDN0IsZUFBdUI7SUFDdkIsa0JBQWlCO0lBQ2pCLDBCQUE2QztJQUM3QywwQkFBK0IsRUFBQTtFQUVqQztJQUNFLGtCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIscUJBQXVCO0lBQ3ZCLHVCQUFzQjtJQUN0QixnQ0FBcUM7SUFDckMsZUNuQ21DLEVBQUE7SURvQ25DO01BQ0Usb0JBQW1CO01BQ25CLGlCQUFnQjtNQUNoQixxQkFBdUI7TUFDdkIsa0JBQWlCLEVBQUE7RUFHckI7SUFDRSxxQkFBdUIsRUFBQTtJQUN2QjtNQUNFLGNBQWE7TUFDYixpQkFBZ0IsRUFBQTtFQUdwQjtJQUNFLG9CQUFtQjtJQUNuQixlQUE4QixFQUFBOztBQUdsQztFQUVFLDZCQUFrQztFQUNsQywwQkFBK0IsRUFBQTtFQUMvQjtJQUNFLHNCQUphO0lBS2Isa0NBQXVDLEVBQUE7RUFFekM7SUFDRSxrQkFBaUI7SUFDakIsb0JBQW1CLEVBQUE7RUFFckI7SUFDRSxhQUFZO0lBQ1osMEJBQStCLEVBQUE7RUFFakM7SUFDRSxrQkFBaUI7SUFDakIsbUJBQWtCO0lBQ2xCLGdCQUFlO0lBQ2YscUJBQXVCO0lBQ3ZCLDBCQUE2QyxFQUFBO0VBRS9DO0lBQWMsdUJBQXlCLEVBQUE7RUFDdkM7SUFBaUIsa0JBQWlCLEVBQUE7RUFDbEM7SUFDRSxpQkFBZ0I7SUFDaEIsbUJBQWtCO0lBQ2xCLGlCQUFnQjtJQUNoQixxQkFBdUI7SUFDdkIsZUU2Z0JvQyxFQUFBO0lGNWdCcEM7TUFDRSxZQUFXO01BQ1gsa0JBQWlCO01BQ2pCLGdCQUFlO01BQ2YsMEJBQTZCO01BQzdCLG9CQUFtQjtNQUNuQiwwQkFBNEMsRUFBQTtFQUdoRDtJQUNFLGVBQTBCLEVBQUE7O0FBTzlCO0VBQ0UsMEJFL0VpQyxFQUFBO0VGaUYvQjtJQUFnQix1QkMzR29CLEVBQUE7O0FEOEd4QztFQUNFLDZCQUFpQztFQUNqQywwQkFBK0IsRUFBQTtFQUMvQjtJQUNFLGlDQUFzQyxFQUFBO0lBQ3RDO01BQVMscUJBQXVCLEVBQUE7RUFFbEM7SUFDRSxzQkFBd0IsRUFBQTs7QUFLMUI7RUFDRSxXQUFVO0VBQ1YsZUFBYyxFQUFBO0FBRWhCO0VHaklBLGlCQUFnQjtFQUNoQix3QkFBdUI7RUFDdkIsb0JBQW1CO0VIaUlqQixnQkFBZTtFQUNmLHdCQUEwQjtFQUMxQix5QkFBMkI7RUFDM0IsMEJFMUcrQjtFRjJHL0IseUJBQTJCO0VBQzNCLHdCQUEwQixFQUFBOztBQU8xQjtFQUNFLFdBQVUsRUFBQTtFQUNWO0lBQ0Usa0JBQWlCLEVBQUE7QUFJdkI7RUFDRSxpQkFBZ0I7RUFDaEIsa0NBQXFDO0VBQ3JDLGVFa042QztFRmpON0MscUJBQXVCLEVBQUE7RUFDdkI7SUFDRSxlRStNMkMsRUFBQTs7QUZ4TS9DO0VBQ0UsaUJBQWdCO0VBQ2hCLDZCQUFpQztFQUNqQyxpQ0FBc0MsRUFBQTtBQUV4QztFQUFTLG9CQUFtQixFQUFBO0FBQzVCO0VHektBLGlCQUFnQjtFQUNoQix3QkFBdUI7RUFDdkIsb0JBQW1CO0VIeUtqQiw2QkFBaUM7RUFDakMsZUFBYztFQUNkLGVFOEw2QyxFQUFBO0VGN0w3QztJQUNFLHNCQUFxQjtJQUNyQixnQkFBZSxFQUFBO0lBQ2Y7TUFDRSxrQkFBaUI7TUFDakIsZ0JBQWU7TUFDZixnQ0FBcUMsRUFBQTtFQUd6QztJQUNFLHFCQUF1QjtJQUN2QixlRXlZcUMsRUFBQTtBRnJZdkM7RUFBMEIsY0FBYSxFQUFBO0FBRXJDO0VBQ0UsMEJFcEsyQixFQUFBO0VGcUszQjtJQUFtQixlQzlMWSxFQUFBO0FEZ01qQztFQUFhLGNBQWEsRUFBQTtBQUMxQjtFQUFjLHNCQUFxQixFQUFBO0FBQ25DO0VBQ0UsZUFBYztFQUNkLGFBQVksRUFBQTs7QUk5TGxCO0VBRUUsYUFBWTtFQUNaLGVBQWMsRUFBQTtBQUVoQjtFQUNFLFlBQVcsRUFBQTtBSmtNYjtFQUNFLFlBQVc7RUFDWCxXQUFVO0VBQ1YsZUFBYztFQUNkLHlCQUEyQixFQUFBO0FBRTdCO0VBQWlCLHFCQUF1QixFQUFBOztBQUkxQztFQUNFLDBCQUErQixFQUFBOztBQUlqQztFQUNFLDBCQ3hOMkM7RUR5TjNDLHFCQUFvQixFQUFBO0VBRWxCO0lBQ0UsZUNsT2lDO0lEbU9qQyxxQkFBdUIsRUFBQTtFQUczQjtJQUNFLHVDQUFzRDtJQUN0RCx1QkN6T29DO0lEME9wQyxrQ0FBcUMsRUFBQTtFQUV2QztJQUNFLFlBQVc7SUFDWCxpQkFBd0I7SUFDeEIscUJBQXVCLEVBQUE7RUFFekI7SUFDRSxVQUFTO0lBQ1QscUJBQXVCLEVBQUE7SUFDdkI7TUFDRSxjQUFhO01BQ2IscUJBQWtDLEVBQUE7RUFHdEM7SUFBZSxtQkFBa0IsRUFBQTtFQUNqQztJS3BLQSxzQkFBcUI7SUFDckIsU0FBUTtJQUNSLFVBQVM7SUFDVCx1QkFBc0I7SUFDdEIsK0JBQStCO0lBQy9CLGtDQUFtQztJQUNuQyxxQ0FBc0M7SUFDdEMsdUJBQXNCO0lBQ3RCLGtDQUF5QjtJQUF6Qiw4QkFBeUI7SUFBekIsNkJBQXlCO0lBQXpCLDBCQUF5QjtJTDhKdkIsOEJBQTZCO0lBQzdCLGlCQUFnQixFQUFBO0VBR2xCO0lBQ0UsaUJBQWdCO0lBQ2hCLG9CQUFtQixFQUFBIiwiZmlsZSI6InBhZ2VzLW1haW4vYmFpa2UuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyog55m+56eR6aG16Z2i5qC35byPICovXG4uaW5kZXgtYmFpa2UtbGlzdCBlbSwgI2xvY2F0aW9uIGVtLCAuaG90LXBob3RvcyBlbSB7XG4gIG1hcmdpbjogMCAzcHg7XG4gIGNvbG9yOiAjYmQwNDAxOyB9XG5cbi5pbmRleC1iYWlrZS1saXN0IGVtIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuI2hlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuI2xvY2F0aW9uIHtcbiAgY29sb3I6ICM1NTU5NWM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4gICNsb2NhdGlvbiAub24ge1xuICAgIGNvbG9yOiAjMzczYTNjO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5pbmRleC10b3AtY2F0ZXMge1xuICBtYXJnaW4tbGVmdDogLTAuNyU7IH1cbiAgLmluZGV4LXRvcC1jYXRlcyAuY2F0ZSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDMyLjYzMzMzJTtcbiAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICBtYXJnaW4tbGVmdDogMC43JTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZiO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlY2VlZWY7IH1cbiAgLmluZGV4LXRvcC1jYXRlcyAubGVmdC1nbHlwaCB7XG4gICAgaGVpZ2h0OiA0LjkyODU3ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDAgMi4wNzE0M2VtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2VjZWVlZjtcbiAgICBjb2xvcjogI2JkMDQwMTsgfVxuICAgIC5pbmRleC10b3AtY2F0ZXMgLmxlZnQtZ2x5cGggcCB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMS4xNDI4NmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgLmluZGV4LXRvcC1jYXRlcyAubGFiZWwtY2F0ZSB7XG4gICAgcGFkZGluZzogMCAxLjc4NTcxZW07IH1cbiAgICAuaW5kZXgtdG9wLWNhdGVzIC5sYWJlbC1jYXRlIC5sYWJlbCB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAuaW5kZXgtdG9wLWNhdGVzIC5sYWJlbC10aXRsZSB7XG4gICAgcGFkZGluZzogMCAgMCAwLjRlbTtcbiAgICBjb2xvcjogIzc0N2Q4NTsgfVxuXG4uaW5kZXgtYmFpa2UtbGlzdCB7XG4gIHBhZGRpbmc6IDEuMDcxNDNlbSAxLjcxNDI5ZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlY2VlZWY7IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLm1lZGlhLW5ld3NpdGVtIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMi44ZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZWNlZWVmOyB9XG4gIC5pbmRleC1iYWlrZS1saXN0IC5tZWRpYS10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjQ1ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLjhlbTsgfVxuICAuaW5kZXgtYmFpa2UtbGlzdCAudGh1bWJuYWlsIHtcbiAgICBwYWRkaW5nOiAxcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2VjZWVlZjsgfVxuICAuaW5kZXgtYmFpa2UtbGlzdCAuaW1nLXRpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMXB4O1xuICAgIGZvbnQtc2l6ZTogMC44NTcxNGVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmI7IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLm1lZGlhLXRleHQge1xuICAgIGxpbmUtaGVpZ2h0OiAyLjE0Mjg2ZW07IH1cbiAgLmluZGV4LWJhaWtlLWxpc3QgLm1lZGlhLW90aGVyIGkge1xuICAgIG1hcmdpbjogMCAwIDAgNXB4OyB9XG4gIC5pbmRleC1iYWlrZS1saXN0IC5sYWJlbHMge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZm9udC1zaXplOiAwLjg1NzE0ZW07XG4gICAgY29sb3I6ICMzNzNhM2M7IH1cbiAgICAuaW5kZXgtYmFpa2UtbGlzdCAubGFiZWxzIGEge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcbiAgICAgIHBhZGRpbmc6IDAgLjhlbTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjNmNDsgfVxuICAuaW5kZXgtYmFpa2UtbGlzdCAubWVkaWEtbmV3c2l0ZW0gLm1lZGlhLW90aGVyIHtcbiAgICBib3R0b206IC0yLjBlbTsgfVxuXG4ueXV5dWUtZm9ybSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjk7IH1cbiAgLnl1eXVlLWZvcm0gLmZvcm0tdGFiIGxpOmhvdmVyLCAueXV5dWUtZm9ybSAuZm9ybS10YWIgbGkub24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuLmNvbnQtYm94IHtcbiAgcGFkZGluZzogMC40Mjg1N2VtIDEuMjg1NzFlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VjZWVlZjsgfVxuICAuY29udC1ib3ggLnRpdGxlLWJhciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VlZWY7IH1cbiAgICAuY29udC1ib3ggLnRpdGxlLWJhciAudGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxLjE0Mjg2ZW07IH1cbiAgLmNvbnQtYm94IC5jb250LWJsb2NrIHtcbiAgICBtYXJnaW4tdG9wOiAwLjcxNDI5ZW07IH1cblxuLmhvdC1sYWJlbHMgLmxhYmVsLWJhciB7XG4gIHBhZGRpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAzOyB9XG4uaG90LWxhYmVscyAubGFiZWwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgbWF4LXdpZHRoOiAxMGVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNzE0MjllbTtcbiAgcGFkZGluZy1yaWdodDogMC43MTQyOWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y5O1xuICBtYXJnaW4tYm90dG9tOiAwLjcxNDI5ZW07XG4gIG1hcmdpbi1yaWdodDogMC43MTQyOWVtOyB9XG5cbi5yZC16eC10YWJzIC50YWJzLWJhc2UgbGkge1xuICB3aWR0aDogNTAlOyB9XG4gIC5yZC16eC10YWJzIC50YWJzLWJhc2UgbGkub24sIC5yZC16eC10YWJzIC50YWJzLWJhc2UgbGk6aG92ZXIge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4ucmQtengtdGFicyAubGlzdC1ncm91cC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZGRkZGRkO1xuICBjb2xvcjogIzU1NTk1YztcbiAgZm9udC1zaXplOiAwLjg1NzE0ZW07IH1cbiAgLnJkLXp4LXRhYnMgLmxpc3QtZ3JvdXAtaXRlbSAucmlnaHQtaW5mbyB7XG4gICAgY29sb3I6ICM1NTU5NWM7IH1cblxuLmhvdC1icmFuZHMgLmxhYmVsLWJhciB7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIHBhZGRpbmc6IDAuNzE0MjllbSAwLjQyODU3ZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4uaG90LWJyYW5kcyAubGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDEuMmVtOyB9XG4uaG90LWJyYW5kcyAuaXRlbS1sYWJlbHMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzogMC44NTcxNGVtIDAuNDI4NTdlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGNvbG9yOiAjNTU1OTVjOyB9XG4gIC5ob3QtYnJhbmRzIC5pdGVtLWxhYmVscyBzcGFuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMCAxMnB4OyB9XG4gICAgLmhvdC1icmFuZHMgLml0ZW0tbGFiZWxzIHNwYW46Zmlyc3QtY2hpbGQge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWNlZWVmOyB9XG4gIC5ob3QtYnJhbmRzIC5pdGVtLWxhYmVscyAucmlnaHQtaW5mbyB7XG4gICAgZm9udC1zaXplOiAwLjg1NzE0ZW07XG4gICAgY29sb3I6ICM4MThhOTE7IH1cbi5ob3QtYnJhbmRzIC5pdGVtIC5pY29uLW1pbnVzLCAuaG90LWJyYW5kcyAuaXRlbSAubGFiZWwtYmFyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuLmhvdC1icmFuZHMgLml0ZW0ub24gLml0ZW0tbGFiZWxzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmOTsgfVxuICAuaG90LWJyYW5kcyAuaXRlbS5vbiAuaXRlbS1sYWJlbHMgc3BhbjpmaXJzdC1jaGlsZCB7XG4gICAgY29sb3I6ICNiZDA0MDE7IH1cbi5ob3QtYnJhbmRzIC5pdGVtLm9uIC5pY29uLXBsdXMge1xuICBkaXNwbGF5OiBub25lOyB9XG4uaG90LWJyYW5kcyAuaXRlbS5vbiAuaWNvbi1taW51cyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuLmhvdC1icmFuZHMgLml0ZW0ub24gLmxhYmVsLWJhciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLmhvdC1waG90b3MgLmNvbnQtYmxvY2s6YmVmb3JlLCAuaG90LXBob3RvcyAuY29udC1ibG9jazphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuLmhvdC1waG90b3MgLmNvbnQtYmxvY2s6YWZ0ZXIge1xuICBjbGVhcjogYm90aDsgfVxuLmhvdC1waG90b3MgLm1lZGlhLWJhc2Uge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZzogMCAxZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNzE0MjllbTsgfVxuLmhvdC1waG90b3MgLm1lZGlhLWV4cGxhaW4ge1xuICBmb250LXNpemU6IDAuODU3MTRlbTsgfVxuXG4ubmV3c3R5cGUtZGV0YWlsIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VjZWVlZjsgfVxuXG4uY29ycmVsYXRpb24tY29udCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VlZWY7XG4gIHBhZGRpbmc6IDAgMTJweCAxMnB4OyB9XG4gIC5jb3JyZWxhdGlvbi1jb250IC50aXRsZS1iYXIgLnRpdGxlIHtcbiAgICBjb2xvcjogI2JkMDQwMTtcbiAgICBmb250LXNpemU6IDEuMTQyODZlbTsgfVxuICAuY29ycmVsYXRpb24tY29udCAuY29udC1saW5lIHtcbiAgICBwYWRkaW5nOiAxLjA3MTQzZW0gMS4yODU3MWVtIDAuNzE0MjllbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2RkZGRkZDsgfVxuICAuY29ycmVsYXRpb24tY29udCAubWVkaWEtYmFzZSwgLmNvcnJlbGF0aW9uLWNvbnQgLmxpc3QtZ3JvdXAge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7XG4gICAgcGFkZGluZzogMCAxLjkyODU3ZW07IH1cbiAgLmNvcnJlbGF0aW9uLWNvbnQgLm1lZGlhLWJhc2Uge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwIDEuOTI4NTdlbTsgfVxuICAgIC5jb3JyZWxhdGlvbi1jb250IC5tZWRpYS1iYXNlIC50aHVtYm5haWwge1xuICAgICAgaGVpZ2h0OiAxNDJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMzguNXB4OyB9XG4gIC5jb3JyZWxhdGlvbi1jb250IC5tZWRpYS10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jb3JyZWxhdGlvbi1jb250IC5saXN0LWRvdCAubGlzdC1ncm91cC1pdGVtOmJlZm9yZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2JkMDQwMTtcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodDogMCBkb3R0ZWQ7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBtYXJnaW4tdG9wOiAtM3B4OyB9XG4gIC5jb3JyZWxhdGlvbi1jb250IC5saXN0LWRvdCAubGlzdC1ncm91cC1pdGVtIHtcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzcHg7IH1cblxuXG4iLCJAaW1wb3J0IFwiLi4vdmFyaWFibGVzXCI7XHJcbkBpbXBvcnQgXCIuLi9taXhpbnNcIjtcclxuXHJcbi8qIOeZvuenkemhtemdouagt+W8jyAqL1xyXG5cclxuLy8gZW0g6aKc6ImyXHJcbi5pbmRleC1iYWlrZS1saXN0LCAjbG9jYXRpb24sIC5ob3QtcGhvdG9zIHtcclxuICBlbSB7XHJcbiAgICBtYXJnaW46IDAgM3B4O1xyXG4gICAgY29sb3I6ICRhY3RpdmVDb2xvcjtcclxuICB9XHJcbn1cclxuLmluZGV4LWJhaWtlLWxpc3QgZW0geyBmb250LXdlaWdodDogYm9sZDsgfVxyXG5cclxuI2hlYWRlciB7IG1hcmdpbi1ib3R0b206IDA7IH1cclxuXHJcbiNsb2NhdGlvbiB7XHJcbiAgY29sb3I6ICRncmF5O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gIC5vbiB7XHJcbiAgICBjb2xvcjogJGdyYXktZGFyaztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxufVxyXG5cclxuLy8g55m+56eR5Li76aG1XHJcbi5pbmRleC10b3AtY2F0ZXMge1xyXG4gIG1hcmdpbi1sZWZ0OiAtMC43JTtcclxuICAuY2F0ZSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEvMykgLSAwLjclO1xyXG4gICAgcGFkZGluZzogcHhUb0VtKDE0cHgpIDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMC43JTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyYXktbGlnaHRlc3QsIDElKTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgfVxyXG4gIC5sZWZ0LWdseXBoIHtcclxuICAgIGhlaWdodDogcHhUb0VtKDY5cHgpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMCBweFRvRW0oMjlweCk7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgIGNvbG9yOiAkYWN0aXZlQ29sb3I7XHJcbiAgICBwIHtcclxuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgZm9udC1zaXplOiBweFRvRW0oMTZweCk7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG4gIH1cclxuICAubGFiZWwtY2F0ZSB7XHJcbiAgICBwYWRkaW5nOiAwIHB4VG9FbSgyNXB4KTtcclxuICAgIC5sYWJlbCB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5sYWJlbC10aXRsZSB7XHJcbiAgICBwYWRkaW5nOiAwICAwIDAuNGVtO1xyXG4gICAgY29sb3I6IGRhcmtlbigkZ3JheS1saWdodCwgNSUpO1xyXG4gIH1cclxufVxyXG4uaW5kZXgtYmFpa2UtbGlzdCB7XHJcbiAgJG1lZGlhUEI6IDIuOGVtO1xyXG4gIHBhZGRpbmc6IHB4VG9FbSgxNXB4KSBweFRvRW0oMjRweCk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAubWVkaWEtbmV3c2l0ZW0ge1xyXG4gICAgcGFkZGluZy1ib3R0b206ICRtZWRpYVBCO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAkZ3JheS1saWdodGVyO1xyXG4gIH1cclxuICAubWVkaWEtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxLjQ1ZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuOGVtO1xyXG4gIH1cclxuICAudGh1bWJuYWlsIHtcclxuICAgIHBhZGRpbmc6IDFweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgfVxyXG4gIC5pbWctdGl0bGUge1xyXG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyYXktbGlnaHRlc3QsIDElKTtcclxuICB9XHJcbiAgLm1lZGlhLXRleHQgeyBsaW5lLWhlaWdodDogcHhUb0VtKDMwcHgpOyB9XHJcbiAgLm1lZGlhLW90aGVyIGkgeyBtYXJnaW46IDAgMCAwIDVweDsgfVxyXG4gIC5sYWJlbHMge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuODtcclxuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIGNvbG9yOiAkZ3JheS1kYXJrO1xyXG4gICAgYSB7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcclxuICAgICAgcGFkZGluZzogMCAuOGVtO1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheUJvcmRlcjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkZ3JheS1saWdodGVyLCAyJSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5tZWRpYS1uZXdzaXRlbSAubWVkaWEtb3RoZXIge1xyXG4gICAgYm90dG9tOiAtKCRtZWRpYVBCIC0gLjhlbSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBsYXlvdXQtc2lkZVxyXG4vLyDpooTnuqbooajljZVcclxuXHJcbi55dXl1ZS1mb3JtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1saWdodGVzdDtcclxuICAuZm9ybS10YWIgbGkge1xyXG4gICAgJjpob3ZlciwgJi5vbiB7IGJhY2tncm91bmQtY29sb3I6ICRib2R5LWJnOyB9XHJcbiAgfVxyXG59XHJcbi5jb250LWJveCB7XHJcbiAgcGFkZGluZzogcHhUb0VtKDZweCkgcHhUb0VtKDE4cHgpO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgLnRpdGxlLWJhciB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgIC50aXRsZSB7IGZvbnQtc2l6ZTogcHhUb0VtKDE2cHgpOyB9XHJcbiAgfVxyXG4gIC5jb250LWJsb2NrIHtcclxuICAgIG1hcmdpbi10b3A6IHB4VG9FbSgxMHB4KTtcclxuICB9XHJcbn1cclxuLy8g54Ot6Zeo5qCH562+XHJcbi5ob3QtbGFiZWxzIHtcclxuICAubGFiZWwtYmFyIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBsaW5lLWhlaWdodDogMztcclxuICB9XHJcbiAgLmxhYmVsIHtcclxuICAgIEBpbmNsdWRlIHRleHQtdHJ1bmNhdGUoKTtcclxuICAgIG1heC13aWR0aDogMTBlbTtcclxuICAgIHBhZGRpbmctbGVmdDogcHhUb0VtKDEwcHgpO1xyXG4gICAgcGFkZGluZy1yaWdodDogcHhUb0VtKDEwcHgpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktbGlnaHRlc3Q7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBweFRvRW0oMTBweCk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IHB4VG9FbSgxMHB4KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIOeDreeCueOAgeacgOaWsFxyXG4ucmQtengtdGFicyB7XHJcbiAgLnRhYnMtYmFzZSB7XHJcbiAgICBsaSB7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICYub24sICY6aG92ZXIge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5saXN0LWdyb3VwLWl0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgJGdyYXlCb3JkZXI7XHJcbiAgICBjb2xvcjogJGdyYXk7XHJcbiAgICBmb250LXNpemU6IHB4VG9FbSgxMnB4KTtcclxuICAgIC5yaWdodC1pbmZvIHtcclxuICAgICAgY29sb3I6ICRncmF5O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8g54Ot6Zeo5ZOB54mMXHJcbi5ob3QtYnJhbmRzIHtcclxuICAubGFiZWwtYmFyIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICBwYWRkaW5nOiBweFRvRW0oMTBweCkgcHhUb0VtKDZweCk7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICB9XHJcbiAgLmxhYmVsIHsgbWFyZ2luLXJpZ2h0OiAxLjJlbTsgfVxyXG4gIC5pdGVtLWxhYmVscyB7XHJcbiAgICBAaW5jbHVkZSB0ZXh0LXRydW5jYXRlKCk7XHJcbiAgICBwYWRkaW5nOiBweFRvRW0oMTJweCkgcHhUb0VtKDZweCk7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIHNwYW4ge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHBhZGRpbmc6IDAgMTJweDtcclxuICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5yaWdodC1pbmZvIHtcclxuICAgICAgZm9udC1zaXplOiBweFRvRW0oMTJweCk7XHJcbiAgICAgIGNvbG9yOiAkZ3JheS1saWdodDtcclxuICAgIH1cclxuICB9XHJcbiAgLml0ZW0ge1xyXG4gICAgLmljb24tbWludXMsIC5sYWJlbC1iYXIgeyBkaXNwbGF5OiBub25lOyB9XHJcbiAgICAmLm9uIHtcclxuICAgICAgLml0ZW0tbGFiZWxzIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1saWdodGVzdDtcclxuICAgICAgICBzcGFuOmZpcnN0LWNoaWxkIHsgY29sb3I6ICRhY3RpdmVDb2xvcjsgfVxyXG4gICAgICB9XHJcbiAgICAgIC5pY29uLXBsdXMgeyBkaXNwbGF5OiBub25lOyB9XHJcbiAgICAgIC5pY29uLW1pbnVzIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XHJcbiAgICAgIC5sYWJlbC1iYXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmhvdC1waG90b3Mge1xyXG4gIC5jb250LWJsb2NrIHtcclxuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XHJcbiAgfVxyXG4gIC5tZWRpYS1iYXNlIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmc6IDAgMWVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogcHhUb0VtKDEwcHgpO1xyXG4gIH1cclxuICAubWVkaWEtZXhwbGFpbiB7IGZvbnQtc2l6ZTogcHhUb0VtKDEycHgpOyB9XHJcbn1cclxuXHJcbi8vIOivpue7humhtVxyXG4ubmV3c3R5cGUtZGV0YWlsIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG59XHJcblxyXG5cclxuLmNvcnJlbGF0aW9uLWNvbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXI7XHJcbiAgcGFkZGluZzogMCAxMnB4IDEycHg7XHJcbiAgLnRpdGxlLWJhciB7XHJcbiAgICAudGl0bGUge1xyXG4gICAgICBjb2xvcjogJGFjdGl2ZUNvbG9yO1xyXG4gICAgICBmb250LXNpemU6IHB4VG9FbSgxNnB4KTtcclxuICAgIH1cclxuICB9XHJcbiAgLmNvbnQtbGluZSB7XHJcbiAgICBwYWRkaW5nOiBweFRvRW0oMTVweCkgcHhUb0VtKDQ1cHggLSAyN3B4KSBweFRvRW0oMTBweCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9keS1iZztcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgJGdyYXlCb3JkZXI7XHJcbiAgfVxyXG4gIC5tZWRpYS1iYXNlLCAubGlzdC1ncm91cCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEgLyAzKTtcclxuICAgIHBhZGRpbmc6IDAgcHhUb0VtKDI3cHgpO1xyXG4gIH1cclxuICAubWVkaWEtYmFzZSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwIHB4VG9FbSgyN3B4KTtcclxuICAgIC50aHVtYm5haWwge1xyXG4gICAgICBoZWlnaHQ6IDE0MnB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogbWlkZGxlSW1nKDE0MnB4LCAycHgpO1xyXG4gICAgfVxyXG4gIH1cclxuICAubWVkaWEtdGl0bGUgeyB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cclxuICAubGlzdC1kb3QgLmxpc3QtZ3JvdXAtaXRlbTpiZWZvcmUge1xyXG4gICAgQGluY2x1ZGUgY2FyZXQtcmlnaHQoM3B4LCAkYWN0aXZlQ29sb3IpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBtYXJnaW4tdG9wOiAtM3B4O1xyXG4gIH1cclxuXHJcbiAgLmxpc3QtZG90IC5saXN0LWdyb3VwLWl0ZW0ge1xyXG4gICAgcGFkZGluZy10b3A6IDNweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzcHg7XHJcbiAgfVxyXG59IiwiQGltcG9ydCBcIi4uL2Jvb3RzdHJhcDQvc2Nzcy92YXJpYWJsZXNcIjtcclxuXHJcbi8vIENvbG9yXHJcbi8vXHJcbi8vIHRoZW1lIGNvbG9yIHZhclxyXG4kZ2xvYmFsQmc6ICAgICAgICAgICAgICAgICAgICAgICNmOGY4Zjg7XHJcbiR0aGVtZUJnOiAgICAgICAgICAgICAgICAgICAgICAgJGJvZHktYmc7XHJcbiRhY3RpdmVDb2xvcjogICAgICAgICAgICAgICAgICAgI2JkMDQwMTtcclxuJGFjdGl2ZUNvbG9yMjogICAgICAgICAgICAgICAgICAjOTFiODFkO1xyXG4kbGlua0NvbG9yOiAgICAgICAgICAgICAgICAgICAgICRhY3RpdmVDb2xvcjI7XHJcbiRidG5Db2xvcjogICAgICAgICAgICAgICAgICAgICAgI2ZkOGExNztcclxuLy8gZ3JheVxyXG4kZ3JheUJvcmRlcjogICAgICAgICAgICAgICAgICAgICNkZGRkZGQ7XHJcbiRncmF5QmRMaWdodDogICAgICAgICAgICAgICAgICAgJGdyYXktbGlnaHRlcjtcclxuXHJcbi8vIGZvbnQtc2l6ZVxyXG4kYmFzZUZvbnRTaXplOiAgICAgICAgICAgICAgICAgICRmb250LXNpemUtcm9vdDtcclxuXHJcbiRmb250LXNpemUtaDE6ICAgICAgICAgICAgICAgICAgMmVtO1xyXG4kZm9udC1zaXplLWgyOiAgICAgICAgICAgICAgICAgIDEuOGVtO1xyXG4kZm9udC1zaXplLWgzOiAgICAgICAgICAgICAgICAgIDEuNmVtO1xyXG4kZm9udC1zaXplLWg0OiAgICAgICAgICAgICAgICAgIDEuNGVtO1xyXG4kZm9udC1zaXplLWg1OiAgICAgICAgICAgICAgICAgIDEuMmVtO1xyXG4kZm9udC1zaXplLWg2OiAgICAgICAgICAgICAgICAgIDFlbTtcclxuXHJcbi8vIGZvbnQtZmFtaWx5ICAgIFxcNWI4YlxcNGY1MyAgIOaYr+Wui+S9k1xyXG4kc21hbGxGb250OiAgICAgICAgICAgICAgICAgICAgIFwiXFw1YjhiXFw0ZjUzXCIsIHNlcmlmOyIsIi8vIFZhcmlhYmxlc1xuLy9cbi8vIENvcHkgc2V0dGluZ3MgZnJvbSB0aGlzIGZpbGUgaW50byB0aGUgcHJvdmlkZWQgYF9jdXN0b20uc2Nzc2AgdG8gb3ZlcnJpZGVcbi8vIHRoZSBCb290c3RyYXAgZGVmYXVsdHMgd2l0aG91dCBtb2RpZnlpbmcga2V5LCB2ZXJzaW9uZWQgZmlsZXMuXG5cblxuLy8gVGFibGUgb2YgY29udGVudHNcbi8vXG4vLyBDb2xvcnNcbi8vIE9wdGlvbnNcbi8vIFNwYWNpbmdcbi8vIEJvZHlcbi8vIExpbmtzXG4vLyBHcmlkIGJyZWFrcG9pbnRzXG4vLyBHcmlkIGNvbnRhaW5lcnNcbi8vIEdyaWQgY29sdW1uc1xuLy8gRm9udHNcbi8vIENvbXBvbmVudHNcblxuLy8gR2VuZXJhbCB2YXJpYWJsZSBzdHJ1Y3R1cmVcbi8vXG4vLyBWYXJpYWJsZSBmb3JtYXQgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtbW9kaWZpZXItc3RhdGUtcHJvcGVydHlgIG9yZGVyLlxuXG5cbi8vIENvbG9yc1xuLy9cbi8vIEdyYXlzY2FsZSBhbmQgYnJhbmQgY29sb3JzIGZvciB1c2UgYWNyb3NzIEJvb3RzdHJhcC5cblxuJGdyYXktZGFyazogICAgICAgICAgICAgICAgICMzNzNhM2MgIWRlZmF1bHQ7XG4kZ3JheTogICAgICAgICAgICAgICAgICAgICAgIzU1NTk1YyAhZGVmYXVsdDtcbiRncmF5LWxpZ2h0OiAgICAgICAgICAgICAgICAjODE4YTkxICFkZWZhdWx0O1xuJGdyYXktbGlnaHRlcjogICAgICAgICAgICAgICNlY2VlZWYgIWRlZmF1bHQ7XG4kZ3JheS1saWdodGVzdDogICAgICAgICAgICAgI2Y3ZjdmOSAhZGVmYXVsdDtcblxuJGJyYW5kLXByaW1hcnk6ICAgICAgICAgICAgICMwMjc1ZDggIWRlZmF1bHQ7XG4kYnJhbmQtc3VjY2VzczogICAgICAgICAgICAgIzVjYjg1YyAhZGVmYXVsdDtcbiRicmFuZC1pbmZvOiAgICAgICAgICAgICAgICAjNWJjMGRlICFkZWZhdWx0O1xuJGJyYW5kLXdhcm5pbmc6ICAgICAgICAgICAgICNmMGFkNGUgIWRlZmF1bHQ7XG4kYnJhbmQtZGFuZ2VyOiAgICAgICAgICAgICAgI2Q5NTM0ZiAhZGVmYXVsdDtcblxuXG4vLyBPcHRpb25zXG4vL1xuLy8gUXVpY2tseSBtb2RpZnkgZ2xvYmFsIHN0eWxpbmcgYnkgZW5hYmxpbmcgb3IgZGlzYWJsaW5nIG9wdGlvbmFsIGZlYXR1cmVzLlxuXG4kZW5hYmxlLWZsZXg6ICAgICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXJvdW5kZWQ6ICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXNoYWRvd3M6ICAgICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLWdyYWRpZW50czogICAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLXRyYW5zaXRpb25zOiAgICAgICAgZmFsc2UgIWRlZmF1bHQ7XG4kZW5hYmxlLWhvdmVyLW1lZGlhLXF1ZXJ5OiAgZmFsc2UgIWRlZmF1bHQ7XG5cblxuLy8gU3BhY2luZ1xuLy9cbi8vIENvbnRyb2wgdGhlIGRlZmF1bHQgc3R5bGluZyBvZiBtb3N0IEJvb3RzdHJhcCBlbGVtZW50cyBieSBtb2RpZnlpbmcgdGhlc2Vcbi8vIHZhcmlhYmxlcy4gTW9zdGx5IGZvY3VzZWQgb24gc3BhY2luZy5cblxuJHNwYWNlcjogICAgICAgICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJHNwYWNlci14OiAgICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuJHNwYWNlci15OiAgICAgICAgICAgICAgICAgICAkc3BhY2VyICFkZWZhdWx0O1xuJGJvcmRlci13aWR0aDogICAgICAgICAgICAgICAuMDYyNXJlbSAhZGVmYXVsdDtcblxuXG4vLyBCb2R5XG4vL1xuLy8gU2V0dGluZ3MgZm9yIHRoZSBgPGJvZHk+YCBlbGVtZW50LlxuXG4kYm9keS1iZzogICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kYm9keS1jb2xvcjogICAgICAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG5cblxuLy8gTGlua3Ncbi8vXG4vLyBTdHlsZSBhbmNob3IgZWxlbWVudHMuXG5cbiRsaW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgJGdyYXktZGFyayAhZGVmYXVsdDsgIC8vIEBtb2RpZnlcbiRsaW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAgJGxpbmstY29sb3IgIWRlZmF1bHQ7IC8vIEBtb2RpZnlcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246ICAgICAgdW5kZXJsaW5lICFkZWZhdWx0O1xuXG5cbi8vIEdyaWQgYnJlYWtwb2ludHNcbi8vXG4vLyBEZWZpbmUgdGhlIG1pbmltdW0gYW5kIG1heGltdW0gZGltZW5zaW9ucyBhdCB3aGljaCB5b3VyIGxheW91dCB3aWxsIGNoYW5nZSxcbi8vIGFkYXB0aW5nIHRvIGRpZmZlcmVudCBzY3JlZW4gc2l6ZXMsIGZvciB1c2UgaW4gbWVkaWEgcXVlcmllcy5cblxuJGdyaWQtYnJlYWtwb2ludHM6IChcbiAgLy8gRXh0cmEgc21hbGwgc2NyZWVuIC8gcGhvbmVcbiAgeHM6IDAsXG4gIC8vIFNtYWxsIHNjcmVlbiAvIHBob25lXG4gIHNtOiAzNGVtLFxuICAvLyBNZWRpdW0gc2NyZWVuIC8gdGFibGV0XG4gIG1kOiA0OGVtLFxuICAvLyBMYXJnZSBzY3JlZW4gLyBkZXNrdG9wXG4gIGxnOiA2MmVtLFxuICAvLyBFeHRyYSBsYXJnZSBzY3JlZW4gLyB3aWRlIGRlc2t0b3BcbiAgeGw6IDc1ZW1cbikgIWRlZmF1bHQ7XG5cblxuLy8gR3JpZCBjb250YWluZXJzXG4vL1xuLy8gRGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIGAuY29udGFpbmVyYCBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy5cblxuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXG4gIHNtOiAzNHJlbSwgICAgLy8gNDgwXG4gIG1kOiA0NXJlbSwgICAgLy8gNzIwXG4gIGxnOiA2MHJlbSwgICAgLy8gOTYwXG4gIHhsOiA3Mi4yNXJlbSAgLy8gMTE0MFxuKSAhZGVmYXVsdDtcblxuXG4vLyBHcmlkIGNvbHVtbnNcbi8vXG4vLyBTZXQgdGhlIG51bWJlciBvZiBjb2x1bW5zIGFuZCBzcGVjaWZ5IHRoZSB3aWR0aCBvZiB0aGUgZ3V0dGVycy5cblxuJGdyaWQtY29sdW1uczogICAgICAgICAgICAgICAxMiAhZGVmYXVsdDtcbiRncmlkLWd1dHRlci13aWR0aDogICAgICAgICAgMS44NzVyZW0gIWRlZmF1bHQ7IC8vIDMwcHhcblxuXG4vLyBUeXBvZ3JhcGh5XG4vL1xuLy8gRm9udCwgbGluZS1oZWlnaHQsIGFuZCBjb2xvciBmb3IgYm9keSB0ZXh0LCBoZWFkaW5ncywgYW5kIG1vcmUuXG5cbiRmb250LWZhbWlseS1zYW5zLXNlcmlmOiAgICAgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LXNlcmlmOiAgICAgICAgICBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgc2VyaWYgIWRlZmF1bHQ7XG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiAgICAgIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSAhZGVmYXVsdDtcbiRmb250LWZhbWlseS1iYXNlOiAgICAgICAgICAgJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbi8vIFBpeGVsIHZhbHVlIHVzZWQgdG8gcmVzcG9uc2l2ZWx5IHNjYWxlIGFsbCB0eXBvZ3JhcGh5LiBBcHBsaWVkIHRvIHRoZSBgPGh0bWw+YCBlbGVtZW50LlxuJGZvbnQtc2l6ZS1yb290OiAgICAgICAgICAgICAxNHB4ICFkZWZhdWx0OyAvLyBAbW9kaWZcblxuJGZvbnQtc2l6ZS1iYXNlOiAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1sZzogICAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1zbTogICAgICAgICAgICAgICAuODVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXhzOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcblxuJGZvbnQtc2l6ZS1oMTogICAgICAgICAgICAgICAyLjVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWgyOiAgICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWgzOiAgICAgICAgICAgICAgIDEuNzVyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLWg0OiAgICAgICAgICAgICAgIDEuNXJlbSAhZGVmYXVsdDtcbiRmb250LXNpemUtaDU6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRmb250LXNpemUtaDY6ICAgICAgICAgICAgICAgMXJlbSAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXNpemU6ICAgICAgICAgICAgICAgMy41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXkyLXNpemU6ICAgICAgICAgICAgICAgNC41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXkzLXNpemU6ICAgICAgICAgICAgICAgNS41cmVtICFkZWZhdWx0O1xuJGRpc3BsYXk0LXNpemU6ICAgICAgICAgICAgICAgNnJlbSAhZGVmYXVsdDtcblxuJGRpc3BsYXkxLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkyLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXkzLXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuJGRpc3BsYXk0LXdlaWdodDogICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xuXG4kbGluZS1oZWlnaHQ6ICAgICAgICAgICAgICAgIDEuNSAhZGVmYXVsdDtcblxuJGhlYWRpbmdzLW1hcmdpbi1ib3R0b206ICAgICAoJHNwYWNlciAvIDIpICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiAgICAgICBpbmhlcml0ICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiAgICAgICA1MDAgIWRlZmF1bHQ7XG4kaGVhZGluZ3MtbGluZS1oZWlnaHQ6ICAgICAgIDEuMSAhZGVmYXVsdDtcbiRoZWFkaW5ncy1jb2xvcjogICAgICAgICAgICAgaW5oZXJpdCAhZGVmYXVsdDtcblxuJGxlYWQtZm9udC1zaXplOiAgICAgICAgICAgICAxLjI1cmVtICFkZWZhdWx0O1xuJGxlYWQtZm9udC13ZWlnaHQ6ICAgICAgICAgICAzMDAgIWRlZmF1bHQ7XG5cbiR0ZXh0LW11dGVkOiAgICAgICAgICAgICAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuXG4kYWJici1ib3JkZXItY29sb3I6ICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcblxuJGJsb2NrcXVvdGUtc21hbGwtY29sb3I6ICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kYmxvY2txdW90ZS1mb250LXNpemU6ICAgICAgICAoJGZvbnQtc2l6ZS1iYXNlICogMS4yNSkgIWRlZmF1bHQ7XG4kYmxvY2txdW90ZS1ib3JkZXItY29sb3I6ICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kaHItYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICByZ2JhKDAsMCwwLC4xKSAhZGVmYXVsdDtcbiRoci1ib3JkZXItd2lkdGg6ICAgICAgICAgICAgICRib3JkZXItd2lkdGg7XG5cblxuLy8gQ29tcG9uZW50c1xuLy9cbi8vIERlZmluZSBjb21tb24gcGFkZGluZyBhbmQgYm9yZGVyIHJhZGl1cyBzaXplcyBhbmQgbW9yZS4gVmFsdWVzIGJhc2VkIG9uIDE0cHggdGV4dCBhbmQgMS40MjggbGluZS1oZWlnaHQgKH4yMHB4IHRvIHN0YXJ0KS5cblxuJGxpbmUtaGVpZ2h0LWxnOiAgICAgICAgICg0LzMpICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LXNtOiAgICAgICAgIDEuNSAhZGVmYXVsdDtcblxuJGJvcmRlci1yYWRpdXM6ICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLWxnOiAgICAgICAuM3JlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLXNtOiAgICAgICAuMnJlbSAhZGVmYXVsdDtcblxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICNmZmYgIWRlZmF1bHQ7XG4kY29tcG9uZW50LWFjdGl2ZS1iZzogICAgJGJyYW5kLXByaW1hcnkgIWRlZmF1bHQ7XG5cbiRjYXJldC13aWR0aDogICAgICAgICAgICAuM2VtICFkZWZhdWx0O1xuJGNhcmV0LXdpZHRoLWxnOiAgICAgICAgICRjYXJldC13aWR0aCAhZGVmYXVsdDtcblxuXG4vLyBUYWJsZXNcbi8vXG4vLyBDdXN0b21pemVzIHRoZSBgLnRhYmxlYCBjb21wb25lbnQgd2l0aCBiYXNpYyB2YWx1ZXMsIGVhY2ggdXNlZCBhY3Jvc3MgYWxsIHRhYmxlIHZhcmlhdGlvbnMuXG5cbiR0YWJsZS1jZWxsLXBhZGRpbmc6ICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuJHRhYmxlLXNtLWNlbGwtcGFkZGluZzogICAgICAgICAuM3JlbSAhZGVmYXVsdDtcblxuJHRhYmxlLWJnOiAgICAgICAgICAgICAgICAgICAgICB0cmFuc3BhcmVudCAhZGVmYXVsdDtcbiR0YWJsZS1iZy1hY2NlbnQ6ICAgICAgICAgICAgICAgI2Y5ZjlmOSAhZGVmYXVsdDtcbiR0YWJsZS1iZy1ob3ZlcjogICAgICAgICAgICAgICAgI2Y1ZjVmNSAhZGVmYXVsdDtcbiR0YWJsZS1iZy1hY3RpdmU6ICAgICAgICAgICAgICAgJHRhYmxlLWJnLWhvdmVyICFkZWZhdWx0O1xuXG4kdGFibGUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICRncmF5LWxpZ2h0ZXIgIWRlZmF1bHQ7XG5cblxuLy8gQnV0dG9uc1xuLy9cbi8vIEZvciBlYWNoIG9mIEJvb3RzdHJhcCdzIGJ1dHRvbnMsIGRlZmluZSB0ZXh0LCBiYWNrZ3JvdW5kIGFuZCBib3JkZXIgY29sb3IuXG5cbiRidG4tcGFkZGluZy14OiAgICAgICAgICAgICAgICAgIDFyZW07XG4kYnRuLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAuMzc1cmVtO1xuJGJ0bi1mb250LXdlaWdodDogICAgICAgICAgICAgICAgbm9ybWFsICFkZWZhdWx0O1xuXG4kYnRuLXByaW1hcnktY29sb3I6ICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1wcmltYXJ5LWJnOiAgICAgICAgICAgICAgICAgJGJyYW5kLXByaW1hcnkgIWRlZmF1bHQ7XG4kYnRuLXByaW1hcnktYm9yZGVyOiAgICAgICAgICAgICAkYnRuLXByaW1hcnktYmcgIWRlZmF1bHQ7XG5cbiRidG4tc2Vjb25kYXJ5LWNvbG9yOiAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG4kYnRuLXNlY29uZGFyeS1iZzogICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1zZWNvbmRhcnktYm9yZGVyOiAgICAgICAgICAgI2NjYyAhZGVmYXVsdDtcblxuJGJ0bi1pbmZvLWNvbG9yOiAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRidG4taW5mby1iZzogICAgICAgICAgICAgICAgICAgICRicmFuZC1pbmZvICFkZWZhdWx0O1xuJGJ0bi1pbmZvLWJvcmRlcjogICAgICAgICAgICAgICAgJGJ0bi1pbmZvLWJnICFkZWZhdWx0O1xuXG4kYnRuLXN1Y2Nlc3MtY29sb3I6ICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGJ0bi1zdWNjZXNzLWJnOiAgICAgICAgICAgICAgICAgJGJyYW5kLXN1Y2Nlc3MgIWRlZmF1bHQ7XG4kYnRuLXN1Y2Nlc3MtYm9yZGVyOiAgICAgICAgICAgICAkYnRuLXN1Y2Nlc3MtYmcgIWRlZmF1bHQ7XG5cbiRidG4td2FybmluZy1jb2xvcjogICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kYnRuLXdhcm5pbmctYmc6ICAgICAgICAgICAgICAgICAkYnJhbmQtd2FybmluZyAhZGVmYXVsdDtcbiRidG4td2FybmluZy1ib3JkZXI6ICAgICAgICAgICAgICRidG4td2FybmluZy1iZyAhZGVmYXVsdDtcblxuJGJ0bi1kYW5nZXItY29sb3I6ICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRidG4tZGFuZ2VyLWJnOiAgICAgICAgICAgICAgICAgICRicmFuZC1kYW5nZXIgIWRlZmF1bHQ7XG4kYnRuLWRhbmdlci1ib3JkZXI6ICAgICAgICAgICAgICAkYnRuLWRhbmdlci1iZyAhZGVmYXVsdDtcblxuJGJ0bi1saW5rLWRpc2FibGVkLWNvbG9yOiAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRidG4tcGFkZGluZy14LXNtOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy15LXNtOiAgICAgICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcblxuJGJ0bi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgICAgMS4yNXJlbSAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy15LWxnOiAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcblxuLy8gQWxsb3dzIGZvciBjdXN0b21pemluZyBidXR0b24gcmFkaXVzIGluZGVwZW5kZW50bHkgZnJvbSBnbG9iYWwgYm9yZGVyIHJhZGl1c1xuJGJ0bi1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgJGJvcmRlci1yYWRpdXM7XG4kYnRuLWJvcmRlci1yYWRpdXMtbGc6ICAgICAgICAgICAkYm9yZGVyLXJhZGl1cy1sZztcbiRidG4tYm9yZGVyLXJhZGl1cy1zbTogICAgICAgICAgICRib3JkZXItcmFkaXVzLXNtO1xuXG5cbi8vIEZvcm1zXG5cbiRpbnB1dC1wYWRkaW5nLXg6ICAgICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC4zNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1iZzogICAgICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kaW5wdXQtYmctZGlzYWJsZWQ6ICAgICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kaW5wdXQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAkZ3JheSAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICNjY2MgIWRlZmF1bHQ7XG4kaW5wdXQtYm94LXNoYWRvdzogICAgICAgICAgICAgICBpbnNldCAwIDFweCAxcHggcmdiYSgwLDAsMCwuMDc1KSAhZGVmYXVsdDtcblxuJGlucHV0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLXJhZGl1cy1sZzogICAgICAgICAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcbiRpbnB1dC1ib3JkZXItcmFkaXVzLXNtOiAgICAgICAgICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xuXG4kaW5wdXQtYm9yZGVyLWZvY3VzOiAgICAgICAgICAgICAjNjZhZmU5ICFkZWZhdWx0O1xuJGlucHV0LWJveC1zaGFkb3ctZm9jdXM6ICAgICAgICAgcmdiYSgxMDIsMTc1LDIzMywuNikgIWRlZmF1bHQ7XG5cbiRpbnB1dC1jb2xvci1wbGFjZWhvbGRlcjogICAgICAgICM5OTkgIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXgtc206ICAgICAgICAgICAgIC43NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1wYWRkaW5nLXktc206ICAgICAgICAgICAgIC4yNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy15LWxnOiAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICgoJGZvbnQtc2l6ZS1iYXNlICogJGxpbmUtaGVpZ2h0KSArICgkaW5wdXQtcGFkZGluZy15ICogMikgKyAoJGJvcmRlci13aWR0aCAqIDIpKSAhZGVmYXVsdDtcbiRpbnB1dC1oZWlnaHQtbGc6ICAgICAgICAgICAgICAgICgoJGZvbnQtc2l6ZS1sZyAqICRsaW5lLWhlaWdodC1sZykgKyAoJGlucHV0LXBhZGRpbmcteS1sZyAqIDIpICsgKCRib3JkZXItd2lkdGggKiAyKSkgIWRlZmF1bHQ7XG4kaW5wdXQtaGVpZ2h0LXNtOiAgICAgICAgICAgICAgICAoKCRmb250LXNpemUtc20gKiAkbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1wYWRkaW5nLXktc20gKiAyKSArICgkYm9yZGVyLXdpZHRoICogMikpICFkZWZhdWx0O1xuXG4kZm9ybS1ncm91cC1tYXJnaW4tYm90dG9tOiAgICAgICAxNXB4O1xuXG4kaW5wdXQtZ3JvdXAtYWRkb24tYmc6ICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlciAhZGVmYXVsdDtcblxuJGN1cnNvci1kaXNhYmxlZDogICAgICAgICAgICAgICAgbm90LWFsbG93ZWQgIWRlZmF1bHQ7XG5cbi8vIEZvcm0gdmFsaWRhdGlvbiBpY29uc1xuJGZvcm0taWNvbi1zdWNjZXNzOiBcImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWRYUm1MVGdpUHo0OGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa05vWldOcklpQjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIaHRiRzV6T25oc2FXNXJQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUwzaHNhVzVySWlCNFBTSXdjSGdpSUhrOUlqQndlQ0lnZG1sbGQwSnZlRDBpTUNBd0lEWXhNaUEzT1RJaUlHVnVZV0pzWlMxaVlXTnJaM0p2ZFc1a1BTSnVaWGNnTUNBd0lEWXhNaUEzT1RJaUlIaHRiRHB6Y0dGalpUMGljSEpsYzJWeWRtVWlQanh3WVhSb0lHWnBiR3c5SWlNMVEwSTROVU1pSUdROUlrMHlNek11T0N3Mk1UQXVNV010TVRNdU15d3dMVEkxTGprdE5pNHlMVE0wTFRFMkxqbE1PVEF1TlN3ME5EZ3VPRU0zTmk0ekxEUXpNQ3c0TUN3ME1ETXVNeXc1T0M0NExETTRPUzR4WXpFNExqZ3RNVFF1TXl3ME5TNDFMVEV3TGpVc05Ua3VPQ3c0TGpOc056RXVPU3c1Tld3eU1qQXVPUzB5TlRBdU5XTXhNaTQxTFRJd0xETTRMamd0TWpZdU1TdzFPQzQ0TFRFekxqWmpNakFzTVRJdU5Dd3lOaTR4TERNNExqY3NNVE11Tml3MU9DNDRUREkzTUN3MU9UQmpMVGN1TkN3eE1pMHlNQzR5TERFNUxqUXRNelF1TXl3eU1DNHhRekl6TlM0eExEWXhNQzR4TERJek5DNDFMRFl4TUM0eExESXpNeTQ0TERZeE1DNHhlaUl2UGp3dmMzWm5QZz09XCI7XG4kZm9ybS1pY29uLXdhcm5pbmc6IFwiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejQ4YzNabklIWmxjbk5wYjI0OUlqRXVNU0lnYVdROUlsZGhjbTVwYm1jaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJZ2VHMXNibk02ZUd4cGJtczlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNpSUhnOUlqQndlQ0lnZVQwaU1IQjRJaUIyYVdWM1FtOTRQU0l3SURBZ05qRXlJRGM1TWlJZ1pXNWhZbXhsTFdKaFkydG5jbTkxYm1ROUltNWxkeUF3SURBZ05qRXlJRGM1TWlJZ2VHMXNPbk53WVdObFBTSndjbVZ6WlhKMlpTSStQSEJoZEdnZ1ptbHNiRDBpSTBZd1FVUTBSU0lnWkQwaVRUWXdNeXcyTkRBdU1td3RNamM0TGpVdE5UQTVZeTB6TGpndE5pNDJMVEV3TGpndE1UQXVOaTB4T0M0MUxURXdMalp6TFRFMExqY3NOQzR4TFRFNExqVXNNVEF1Tmt3NUxEWTBNQzR5WXkwekxqY3NOaTQxTFRNdU5pd3hOQzQwTERBdU1pd3lNQzQ0WXpNdU9DdzJMalVzTVRBdU9Dd3hNQzQwTERFNExqTXNNVEF1TkdnMU5UY3VNV00zTGpVc01Dd3hOQzQxTFRNdU9Td3hPQzR6TFRFd0xqUkROakEyTGpZc05qVTBMallzTmpBMkxqY3NOalEyTGpZc05qQXpMRFkwTUM0eWVpQk5Nek0yTGpZc05qRXdMakpvTFRZeExqSldOVFE1YURZeExqSldOakV3TGpKNklFMHpNell1Tml3MU1ETXVNV2d0TmpFdU1sWXpNRFF1TW1nMk1TNHlWalV3TXk0eGVpSXZQand2YzNablBnPT1cIjtcbiRmb3JtLWljb24tZXJyb3I6IFwiZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejQ4YzNabklIWmxjbk5wYjI0OUlqRXVNU0lnYVdROUlrTnliM056SWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhodGJHNXpPbmhzYVc1clBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNoc2FXNXJJaUI0UFNJd2NIZ2lJSGs5SWpCd2VDSWdkbWxsZDBKdmVEMGlNQ0F3SURZeE1pQTNPVElpSUdWdVlXSnNaUzFpWVdOclozSnZkVzVrUFNKdVpYY2dNQ0F3SURZeE1pQTNPVElpSUhodGJEcHpjR0ZqWlQwaWNISmxjMlZ5ZG1VaVBqeHdZWFJvSUdacGJHdzlJaU5FT1RVek5FWWlJR1E5SWswME5EY3NOVFEwTGpSakxURTBMalFzTVRRdU5DMHpOeTQyTERFMExqUXROVEV1T1N3d1RETXdOaXcwTlRFdU4yd3RPRGt1TVN3NU1pNDNZeTB4TkM0MExERTBMalF0TXpjdU5pd3hOQzQwTFRVeExqa3NNR010TVRRdU5DMHhOQzQwTFRFMExqUXRNemN1Tml3d0xUVXhMamxzT1RJdU5DMDVOaTQwVERFMk5Td3lPVGt1Tm1NdE1UUXVOQzB4TkM0MExURTBMalF0TXpjdU5pd3dMVFV4TGpsek16Y3VOaTB4TkM0MExEVXhMamtzTUd3NE9TNHlMRGt5TGpkc09Ea3VNUzA1TWk0M1l6RTBMalF0TVRRdU5Dd3pOeTQyTFRFMExqUXNOVEV1T1N3d1l6RTBMalFzTVRRdU5Dd3hOQzQwTERNM0xqWXNNQ3cxTVM0NVRETTFOQzQzTERNNU5tdzVNaTQwTERrMkxqUkRORFl4TGpRc05UQTJMamdzTkRZeExqUXNOVE13TERRME55dzFORFF1TkhvaUx6NDhMM04yWno0PVwiO1xuXG5cbi8vIERyb3Bkb3duc1xuLy9cbi8vIERyb3Bkb3duIG1lbnUgY29udGFpbmVyIGFuZCBjb250ZW50cy5cblxuJGRyb3Bkb3duLWJnOiAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXI6ICAgICAgICAgICAgICAgIHJnYmEoMCwwLDAsLjE1KSAhZGVmYXVsdDtcbiRkcm9wZG93bi1kaXZpZGVyLWJnOiAgICAgICAgICAgICNlNWU1ZTUgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWNvbG9yOiAgICAgICAgICAgICRncmF5LWRhcmsgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1ob3Zlci1jb2xvcjogICAgICBkYXJrZW4oJGdyYXktZGFyaywgNSUpICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICAgICAgICAgI2Y1ZjVmNSAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWNvbG9yOiAgICAgJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kZHJvcGRvd24tbGluay1hY3RpdmUtYmc6ICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstZGlzYWJsZWQtY29sb3I6ICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICAgICAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuXG5cbi8vIFotaW5kZXggbWFzdGVyIGxpc3Rcbi8vXG4vLyBXYXJuaW5nOiBBdm9pZCBjdXN0b21pemluZyB0aGVzZSB2YWx1ZXMuIFRoZXkncmUgdXNlZCBmb3IgYSBiaXJkJ3MgZXllIHZpZXdcbi8vIG9mIGNvbXBvbmVudHMgZGVwZW5kZW50IG9uIHRoZSB6LWF4aXMgYW5kIGFyZSBkZXNpZ25lZCB0byBhbGwgd29yayB0b2dldGhlci5cbi8vXG4vLyBOb3RlOiBUaGVzZSB2YXJpYWJsZXMgYXJlIG5vdCBnZW5lcmF0ZWQgaW50byB0aGUgQ3VzdG9taXplci5cblxuJHppbmRleC1uYXZiYXI6ICAgICAgICAgICAgMTAwMCAhZGVmYXVsdDtcbiR6aW5kZXgtZHJvcGRvd246ICAgICAgICAgIDEwMDAgIWRlZmF1bHQ7XG4kemluZGV4LXBvcG92ZXI6ICAgICAgICAgICAxMDYwICFkZWZhdWx0O1xuJHppbmRleC10b29sdGlwOiAgICAgICAgICAgMTA3MCAhZGVmYXVsdDtcbiR6aW5kZXgtbmF2YmFyLWZpeGVkOiAgICAgIDEwMzAgIWRlZmF1bHQ7XG4kemluZGV4LW5hdmJhci1zdGlja3k6ICAgICAxMDMwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbC1iZzogICAgICAgICAgMTA0MCAhZGVmYXVsdDtcbiR6aW5kZXgtbW9kYWw6ICAgICAgICAgICAgIDEwNTAgIWRlZmF1bHQ7XG5cblxuLy8gTmF2YmFyXG5cbiRuYXZiYXItYm9yZGVyLXJhZGl1czogICAgICAgICAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJG5hdmJhci1wYWRkaW5nLWhvcml6b250YWw6ICAgICAgICAgJHNwYWNlciAhZGVmYXVsdDtcbiRuYXZiYXItcGFkZGluZy12ZXJ0aWNhbDogICAgICAgICAgICgkc3BhY2VyIC8gMikgIWRlZmF1bHQ7XG5cbiRuYXZiYXItZGFyay1jb2xvcjogICAgICAgICAgICAgICAgIHJnYmEoMjU1LDI1NSwyNTUsLjUpO1xuJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAgICAgICAgICAgcmdiYSgyNTUsMjU1LDI1NSwuNzUpO1xuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogICAgICAgICAgcmdiYSgyNTUsMjU1LDI1NSwxKTtcbiRuYXZiYXItZGFyay1kaXNhYmxlZC1jb2xvcjogICAgICAgIHJnYmEoMjU1LDI1NSwyNTUsLjI1KTtcblxuJG5hdmJhci1saWdodC1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMyk7XG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAgICAgICAgICByZ2JhKDAsMCwwLC42KTtcbiRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAgICAgICAgIHJnYmEoMCwwLDAsLjgpO1xuJG5hdmJhci1saWdodC1kaXNhYmxlZC1jb2xvcjogICAgICAgcmdiYSgwLDAsMCwuMTUpO1xuXG5cbi8vIE5hdnNcblxuJG5hdi1saW5rLXBhZGRpbmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAuNWVtIDFlbSAhZGVmYXVsdDtcbiRuYXYtbGluay1ob3Zlci1iZzogICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktbGlnaHRlciAhZGVmYXVsdDtcblxuJG5hdi1kaXNhYmxlZC1saW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRuYXYtZGlzYWJsZWQtbGluay1ob3Zlci1jb2xvcjogICAgICAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG5cbiRuYXYtdGFicy1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAgI2RkZCAhZGVmYXVsdDtcblxuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG4kbmF2LXRhYnMtYWN0aXZlLWxpbmstaG92ZXItYmc6ICAgICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xuJG5hdi10YWJzLWFjdGl2ZS1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAkZ3JheSAhZGVmYXVsdDtcbiRuYXYtdGFicy1hY3RpdmUtbGluay1ob3Zlci1ib3JkZXItY29sb3I6ICAgI2RkZCAhZGVmYXVsdDtcblxuJG5hdi10YWJzLWp1c3RpZmllZC1saW5rLWJvcmRlci1jb2xvcjogICAgICAgICAgICAjZGRkICFkZWZhdWx0O1xuJG5hdi10YWJzLWp1c3RpZmllZC1hY3RpdmUtbGluay1ib3JkZXItY29sb3I6ICAgICAkYm9keS1iZyAhZGVmYXVsdDtcblxuJG5hdi1waWxscy1ib3JkZXItcmFkaXVzOiAgICAgICAgICAgICAgICAgICAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcbiRuYXYtcGlsbHMtYWN0aXZlLWxpbmstaG92ZXItYmc6ICAgICAgICAgICAgJGNvbXBvbmVudC1hY3RpdmUtYmcgIWRlZmF1bHQ7XG4kbmF2LXBpbGxzLWFjdGl2ZS1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuXG5cbi8vIFBhZ2luYXRpb25cblxuJHBhZ2luYXRpb24tcGFkZGluZy14OiAgICAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgIC41cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAgICAgICAgICAgICAuNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXktc206ICAgICAgICAgICAgIC4yNzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXgtbGc6ICAgICAgICAgICAgIDEuNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1sZzogICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xuXG5cbiRwYWdpbmF0aW9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICRsaW5rLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tYmc6ICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICRsaW5rLWhvdmVyLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24taG92ZXItYmc6ICAgICAgICAgICAgICAgICAgJGdyYXktbGlnaHRlciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlcjogICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWFjdGl2ZS1jb2xvcjogICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWFjdGl2ZS1ib3JkZXI6ICAgICAgICAgICAgICRicmFuZC1wcmltYXJ5ICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1ib3JkZXI6ICAgICAgICAgICAjZGRkICFkZWZhdWx0O1xuXG5cbi8vIFBhZ2VyXG5cbiRwYWdlci1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWJnICFkZWZhdWx0O1xuJHBhZ2VyLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24tYm9yZGVyICFkZWZhdWx0O1xuJHBhZ2VyLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgICAgMTVweCAhZGVmYXVsdDtcblxuJHBhZ2VyLWhvdmVyLWJnOiAgICAgICAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24taG92ZXItYmcgIWRlZmF1bHQ7XG5cbiRwYWdlci1hY3RpdmUtYmc6ICAgICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRwYWdlci1hY3RpdmUtY29sb3I6ICAgICAgICAgICAgICAgICAgICRwYWdpbmF0aW9uLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcblxuJHBhZ2VyLWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgICAgICAgJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3IgIWRlZmF1bHQ7XG5cblxuLy8gSnVtYm90cm9uXG5cbiRqdW1ib3Ryb24tcGFkZGluZzogICAgICAgICAgICAgIDJyZW0gIWRlZmF1bHQ7XG4kanVtYm90cm9uLWJnOiAgICAgICAgICAgICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuXG5cbi8vIEZvcm0gc3RhdGVzIGFuZCBhbGVydHNcbi8vXG4vLyBEZWZpbmUgY29sb3JzIGZvciBmb3JtIGZlZWRiYWNrIHN0YXRlcyBhbmQsIGJ5IGRlZmF1bHQsIGFsZXJ0cy5cblxuJHN0YXRlLXN1Y2Nlc3MtdGV4dDogICAgICAgICAgICAgIzNjNzYzZCAhZGVmYXVsdDtcbiRzdGF0ZS1zdWNjZXNzLWJnOiAgICAgICAgICAgICAgICNkZmYwZDggIWRlZmF1bHQ7XG4kc3RhdGUtc3VjY2Vzcy1ib3JkZXI6ICAgICAgICAgICBkYXJrZW4oJHN0YXRlLXN1Y2Nlc3MtYmcsIDUlKSAhZGVmYXVsdDtcblxuJHN0YXRlLWluZm8tdGV4dDogICAgICAgICAgICAgICAgIzMxNzA4ZiAhZGVmYXVsdDtcbiRzdGF0ZS1pbmZvLWJnOiAgICAgICAgICAgICAgICAgICNkOWVkZjcgIWRlZmF1bHQ7XG4kc3RhdGUtaW5mby1ib3JkZXI6ICAgICAgICAgICAgICBkYXJrZW4oJHN0YXRlLWluZm8tYmcsIDclKSAhZGVmYXVsdDtcblxuJHN0YXRlLXdhcm5pbmctdGV4dDogICAgICAgICAgICAgIzhhNmQzYiAhZGVmYXVsdDtcbiRzdGF0ZS13YXJuaW5nLWJnOiAgICAgICAgICAgICAgICNmY2Y4ZTMgIWRlZmF1bHQ7XG4kc3RhdGUtd2FybmluZy1ib3JkZXI6ICAgICAgICAgICBkYXJrZW4oJHN0YXRlLXdhcm5pbmctYmcsIDUlKSAhZGVmYXVsdDtcblxuJHN0YXRlLWRhbmdlci10ZXh0OiAgICAgICAgICAgICAgI2E5NDQ0MiAhZGVmYXVsdDtcbiRzdGF0ZS1kYW5nZXItYmc6ICAgICAgICAgICAgICAgICNmMmRlZGUgIWRlZmF1bHQ7XG4kc3RhdGUtZGFuZ2VyLWJvcmRlcjogICAgICAgICAgICBkYXJrZW4oJHN0YXRlLWRhbmdlci1iZywgNSUpICFkZWZhdWx0O1xuXG5cbi8vIFRvb2x0aXBzXG5cbiR0b29sdGlwLW1heC13aWR0aDogICAgICAgICAgIDIwMHB4ICFkZWZhdWx0O1xuJHRvb2x0aXAtY29sb3I6ICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiR0b29sdGlwLWJnOiAgICAgICAgICAgICAgICAgICMwMDAgIWRlZmF1bHQ7XG4kdG9vbHRpcC1vcGFjaXR5OiAgICAgICAgICAgICAuOSAhZGVmYXVsdDtcblxuJHRvb2x0aXAtYXJyb3ctd2lkdGg6ICAgICAgICAgNXB4ICFkZWZhdWx0O1xuJHRvb2x0aXAtYXJyb3ctY29sb3I6ICAgICAgICAgJHRvb2x0aXAtYmcgIWRlZmF1bHQ7XG5cblxuLy8gUG9wb3ZlcnNcblxuJHBvcG92ZXItYmc6ICAgICAgICAgICAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJHBvcG92ZXItbWF4LXdpZHRoOiAgICAgICAgICAgICAgICAgICAyNzZweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMikgIWRlZmF1bHQ7XG4kcG9wb3Zlci1mYWxsYmFjay1ib3JkZXItY29sb3I6ICAgICAgICNjY2MgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLXRpdGxlLWJnOiAgICAgICAgICAgICAgICAgICAgZGFya2VuKCRwb3BvdmVyLWJnLCAzJSkgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWFycm93LXdpZHRoOiAgICAgICAgICAgICAgICAgMTBweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LWNvbG9yOiAgICAgICAgICAgICAgICAgJHBvcG92ZXItYmcgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWFycm93LW91dGVyLXdpZHRoOiAgICAgICAgICAgKCRwb3BvdmVyLWFycm93LXdpZHRoICsgMSkgIWRlZmF1bHQ7XG4kcG9wb3Zlci1hcnJvdy1vdXRlci1jb2xvcjogICAgICAgICAgIGZhZGUtaW4oJHBvcG92ZXItYm9yZGVyLWNvbG9yLCAwLjA1KSAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LW91dGVyLWZhbGxiYWNrLWNvbG9yOiAgZGFya2VuKCRwb3BvdmVyLWZhbGxiYWNrLWJvcmRlci1jb2xvciwgMjAlKSAhZGVmYXVsdDtcblxuXG4vLyBMYWJlbHNcblxuJGxhYmVsLWRlZmF1bHQtYmc6ICAgICAgICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kbGFiZWwtcHJpbWFyeS1iZzogICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRsYWJlbC1zdWNjZXNzLWJnOiAgICAgICAgICAgICRicmFuZC1zdWNjZXNzICFkZWZhdWx0O1xuJGxhYmVsLWluZm8tYmc6ICAgICAgICAgICAgICAgJGJyYW5kLWluZm8gIWRlZmF1bHQ7XG4kbGFiZWwtd2FybmluZy1iZzogICAgICAgICAgICAkYnJhbmQtd2FybmluZyAhZGVmYXVsdDtcbiRsYWJlbC1kYW5nZXItYmc6ICAgICAgICAgICAgICRicmFuZC1kYW5nZXIgIWRlZmF1bHQ7XG5cbiRsYWJlbC1jb2xvcjogICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kbGFiZWwtbGluay1ob3Zlci1jb2xvcjogICAgICAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIE1vZGFsc1xuXG4vLyBQYWRkaW5nIGFwcGxpZWQgdG8gdGhlIG1vZGFsIGJvZHlcbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAgICAgICAgIDE1cHggIWRlZmF1bHQ7XG5cbiRtb2RhbC10aXRsZS1wYWRkaW5nOiAgICAgICAgIDE1cHggIWRlZmF1bHQ7XG4kbW9kYWwtdGl0bGUtbGluZS1oZWlnaHQ6ICAgICAkbGluZS1oZWlnaHQgIWRlZmF1bHQ7XG5cbiRtb2RhbC1jb250ZW50LWJnOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgcmdiYSgwLDAsMCwuMikgIWRlZmF1bHQ7XG5cbiRtb2RhbC1iYWNrZHJvcC1iZzogICAgICAgICAgICMwMDAgIWRlZmF1bHQ7XG4kbW9kYWwtYmFja2Ryb3Atb3BhY2l0eTogICAgICAuNSAhZGVmYXVsdDtcbiRtb2RhbC1oZWFkZXItYm9yZGVyLWNvbG9yOiAgICNlNWU1ZTUgIWRlZmF1bHQ7XG4kbW9kYWwtZm9vdGVyLWJvcmRlci1jb2xvcjogICAkbW9kYWwtaGVhZGVyLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJG1vZGFsLWxnOiAgICAgICAgICAgICAgICAgICAgOTAwcHggIWRlZmF1bHQ7XG4kbW9kYWwtbWQ6ICAgICAgICAgICAgICAgICAgICA2MDBweCAhZGVmYXVsdDtcbiRtb2RhbC1zbTogICAgICAgICAgICAgICAgICAgIDMwMHB4ICFkZWZhdWx0O1xuXG5cbi8vIEFsZXJ0c1xuLy9cbi8vIERlZmluZSBhbGVydCBjb2xvcnMsIGJvcmRlciByYWRpdXMsIGFuZCBwYWRkaW5nLlxuXG4kYWxlcnQtcGFkZGluZzogICAgICAgICAgICAgICAxNXB4ICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICAgICAgICAgJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kYWxlcnQtbGluay1mb250LXdlaWdodDogICAgICBib2xkICFkZWZhdWx0O1xuXG4kYWxlcnQtc3VjY2Vzcy1iZzogICAgICAgICAgICAkc3RhdGUtc3VjY2Vzcy1iZyAhZGVmYXVsdDtcbiRhbGVydC1zdWNjZXNzLXRleHQ6ICAgICAgICAgICRzdGF0ZS1zdWNjZXNzLXRleHQgIWRlZmF1bHQ7XG4kYWxlcnQtc3VjY2Vzcy1ib3JkZXI6ICAgICAgICAkc3RhdGUtc3VjY2Vzcy1ib3JkZXIgIWRlZmF1bHQ7XG5cbiRhbGVydC1pbmZvLWJnOiAgICAgICAgICAgICAgICRzdGF0ZS1pbmZvLWJnICFkZWZhdWx0O1xuJGFsZXJ0LWluZm8tdGV4dDogICAgICAgICAgICAgJHN0YXRlLWluZm8tdGV4dCAhZGVmYXVsdDtcbiRhbGVydC1pbmZvLWJvcmRlcjogICAgICAgICAgICRzdGF0ZS1pbmZvLWJvcmRlciAhZGVmYXVsdDtcblxuJGFsZXJ0LXdhcm5pbmctYmc6ICAgICAgICAgICAgJHN0YXRlLXdhcm5pbmctYmcgIWRlZmF1bHQ7XG4kYWxlcnQtd2FybmluZy10ZXh0OiAgICAgICAgICAkc3RhdGUtd2FybmluZy10ZXh0ICFkZWZhdWx0O1xuJGFsZXJ0LXdhcm5pbmctYm9yZGVyOiAgICAgICAgJHN0YXRlLXdhcm5pbmctYm9yZGVyICFkZWZhdWx0O1xuXG4kYWxlcnQtZGFuZ2VyLWJnOiAgICAgICAgICAgICAkc3RhdGUtZGFuZ2VyLWJnICFkZWZhdWx0O1xuJGFsZXJ0LWRhbmdlci10ZXh0OiAgICAgICAgICAgJHN0YXRlLWRhbmdlci10ZXh0ICFkZWZhdWx0O1xuJGFsZXJ0LWRhbmdlci1ib3JkZXI6ICAgICAgICAgJHN0YXRlLWRhbmdlci1ib3JkZXIgIWRlZmF1bHQ7XG5cblxuLy8gUHJvZ3Jlc3MgYmFyc1xuXG4kcHJvZ3Jlc3MtYmc6ICAgICAgICAgICAgICAgICAjZjVmNWY1ICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1jb2xvcjogICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG4kcHJvZ3Jlc3MtYmFyLWJnOiAgICAgICAgICAgICAkYnJhbmQtcHJpbWFyeSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1iYXItc3VjY2Vzcy1iZzogICAgICRicmFuZC1zdWNjZXNzICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci13YXJuaW5nLWJnOiAgICAgJGJyYW5kLXdhcm5pbmcgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWRhbmdlci1iZzogICAgICAkYnJhbmQtZGFuZ2VyICFkZWZhdWx0O1xuJHByb2dyZXNzLWJhci1pbmZvLWJnOiAgICAgICAgJGJyYW5kLWluZm8gIWRlZmF1bHQ7XG5cblxuLy8gTGlzdCBncm91cFxuXG4kbGlzdC1ncm91cC1iZzogICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXI6ICAgICAgICAgICAgICNkZGQgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAgICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG4kbGlzdC1ncm91cC1ob3Zlci1iZzogICAgICAgICAgICNmNWY1ZjUgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3RpdmUtY29sb3I6ICAgICAgICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLWJnOiAgICAgICAgICAkY29tcG9uZW50LWFjdGl2ZS1iZyAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGl2ZS1ib3JkZXI6ICAgICAgJGxpc3QtZ3JvdXAtYWN0aXZlLWJnICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aXZlLXRleHQtY29sb3I6ICBsaWdodGVuKCRsaXN0LWdyb3VwLWFjdGl2ZS1iZywgNDAlKSAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICAgICAgJGdyYXktbGlnaHQgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1kaXNhYmxlZC1iZzogICAgICAgICAkZ3JheS1saWdodGVyICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtdGV4dC1jb2xvcjogJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3IgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWxpbmstY29sb3I6ICAgICAgICAgIzU1NSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWxpbmstaG92ZXItY29sb3I6ICAgJGxpc3QtZ3JvdXAtbGluay1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWxpbmstaGVhZGluZy1jb2xvcjogIzMzMyAhZGVmYXVsdDtcblxuXG4vLyBJbWFnZSB0aHVtYm5haWxzXG5cbiR0aHVtYm5haWwtcGFkZGluZzogICAgICAgICAgIC4yNXJlbSAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYmc6ICAgICAgICAgICAgICAgICRib2R5LWJnICFkZWZhdWx0O1xuJHRodW1ibmFpbC1ib3JkZXI6ICAgICAgICAgICAgI2RkZCAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYm9yZGVyLXJhZGl1czogICAgICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuXG5cbi8vIEJyZWFkY3J1bWJzXG5cbiRicmVhZGNydW1iLXBhZGRpbmctdmVydGljYWw6ICAgLjc1cmVtICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItcGFkZGluZy1ob3Jpem9udGFsOiAxcmVtICFkZWZhdWx0O1xuXG4kYnJlYWRjcnVtYi1iZzogICAgICAgICAgICAgICAgICRncmF5LWxpZ2h0ZXIgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAgICAgICRncmF5LWxpZ2h0ICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAkZ3JheS1saWdodCAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWRpdmlkZXI6ICAgICAgICAgICAgXCIvXCIgIWRlZmF1bHQ7XG5cblxuLy8gQ2Fyb3VzZWxcblxuJGNhcm91c2VsLXRleHQtc2hhZG93OiAgICAgICAgICAgICAgICAgICAgICAgIDAgMXB4IDJweCByZ2JhKDAsMCwwLC42KSAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWNvbnRyb2wtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC13aWR0aDogICAgICAgICAgICAgICAgICAgICAgMTUlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtb3BhY2l0eTogICAgICAgICAgICAgICAgICAgIC41ICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgIDIwcHggIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1pbmRpY2F0b3ItYWN0aXZlLWJnOiAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuJGNhcm91c2VsLWluZGljYXRvci1ib3JkZXItY29sb3I6ICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1jYXB0aW9uLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIENsb3NlXG5cbiRjbG9zZS1mb250LXdlaWdodDogICAgICAgICAgIGJvbGQgIWRlZmF1bHQ7XG4kY2xvc2UtY29sb3I6ICAgICAgICAgICAgICAgICAjMDAwICFkZWZhdWx0O1xuJGNsb3NlLXRleHQtc2hhZG93OiAgICAgICAgICAgMCAxcHggMCAjZmZmICFkZWZhdWx0O1xuXG5cbi8vIENvZGVcblxuJGNvZGUtY29sb3I6ICAgICAgICAgICAgICAgICAgI2JkNDE0NyAhZGVmYXVsdDtcbiRjb2RlLWJnOiAgICAgICAgICAgICAgICAgICAgICNmN2Y3ZjkgIWRlZmF1bHQ7XG5cbiRrYmQtY29sb3I6ICAgICAgICAgICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XG4ka2JkLWJnOiAgICAgICAgICAgICAgICAgICAgICAjMzMzICFkZWZhdWx0O1xuXG4kcHJlLWJnOiAgICAgICAgICAgICAgICAgICAgICAjZjdmN2Y5ICFkZWZhdWx0O1xuJHByZS1jb2xvcjogICAgICAgICAgICAgICAgICAgJGdyYXktZGFyayAhZGVmYXVsdDtcbiRwcmUtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICNjY2MgIWRlZmF1bHQ7XG4kcHJlLXNjcm9sbGFibGUtbWF4LWhlaWdodDogICAzNDBweCAhZGVmYXVsdDtcbiIsIi8vIFRleHQgdHJ1bmNhdGVcbi8vIFJlcXVpcmVzIGlubGluZS1ibG9jayBvciBibG9jayBmb3IgcHJvcGVyIHN0eWxpbmdcblxuQG1peGluIHRleHQtdHJ1bmNhdGUoKSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufSIsIi8vIENsZWFyZml4XG4vL1xuLy8gRm9yIG1vZGVybiBicm93c2Vyc1xuLy8gMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbi8vICAgIGNvbnRlbnRlZGl0YWJsZSBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXG4vLyAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgZWxlbWVudHNcbi8vICAgIHRoYXQgYXJlIGNsZWFyZml4ZWQuXG4vLyAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuLy8gICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuLy9cbi8vIFNvdXJjZTogaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL21pY3JvLWNsZWFyZml4LWhhY2svXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcbiAgJjpiZWZvcmUsXG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiOyAvLyAxXG4gICAgZGlzcGxheTogdGFibGU7IC8vIDJcbiAgfVxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuIiwiQGltcG9ydCBcIi4uL2Jvb3RzdHJhcDQvc2Nzcy9taXhpbnNcIjtcclxuXHJcbkBtaXhpbiBiYWNrZ3JvdW5kLWNvbG9yLXJnYmEoJGNvbG9yLCAkYWxwaGEpIHtcclxuICAkaWUtaGV4LXN0cjogaWUtaGV4LXN0cihyZ2JhKCRjb2xvciwgJGFscGhhKSk7XHJcblxyXG4gIC1tcy1maWx0ZXI6IFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9I3skaWUtaGV4LXN0cn0sIGVuZENvbG9yc3RyPSN7JGllLWhleC1zdHJ9KVwiO1xyXG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9I3skaWUtaGV4LXN0cn0sIGVuZENvbG9yc3RyPSN7JGllLWhleC1zdHJ9KTtcclxuXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY29sb3IsICRhbHBoYSk7XHJcbn1cclxuXHJcbi8vIHVuaXQgY29udmVyc2lvblxyXG5AZnVuY3Rpb24gcHhUb0VtKCRweCwgJG5ld0ZvbnRTaXplOiBmYWxzZSkge1xyXG4gIEBpZiAkbmV3Rm9udFNpemUge1xyXG4gICAgQHJldHVybiAkcHggLyAkbmV3Rm9udFNpemUgKiAxZW07XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAcmV0dXJuICRweCAvICRiYXNlRm9udFNpemUgKiAxZW07XHJcbiAgfVxyXG59XHJcbkBmdW5jdGlvbiBweFRvUmVtKCRweCwgJG5ld0ZvbnRTaXplOiBmYWxzZSkge1xyXG4gIEBpZiAkbmV3Rm9udFNpemUge1xyXG4gICAgQHJldHVybiAkcHggLyAkbmV3Rm9udFNpemUgKiAxcmVtO1xyXG4gIH0gQGVsc2Uge1xyXG4gICAgQHJldHVybiAkcHggLyAkYmFzZUZvbnRTaXplICogMXJlbTtcclxuICB9XHJcbn1cclxuQGZ1bmN0aW9uIHRvTnVtKCR2YWwpIHtcclxuICBAaWYoXCJweFwiID09IHVuaXQoJHZhbCkpIHtcclxuICAgIEByZXR1cm4gJHZhbCAvIDFweDtcclxuICB9IEBlbHNlIGlmKFwiZW1cIiA9PSB1bml0KCR2YWwpKSB7XHJcbiAgICBAcmV0dXJuICR2YWwgLyAxZW07XHJcbiAgfSBAZWxzZSBpZihcInJlbVwiID09IHVuaXQoJHZhbCkpIHtcclxuICAgIEByZXR1cm4gJHZhbCAvIDFyZW07XHJcbiAgfVxyXG59XHJcbkBmdW5jdGlvbiBtaWRkbGVJbWcoJHZhbCwgJGJvcmRlcikge1xyXG4gIEBpZiAkYm9yZGVyIHtcclxuICAgIEByZXR1cm4gMC45ODkyODU3MTQyODU3MTQzICogKCR2YWwgLSAkYm9yZGVyKTtcclxuICB9IEBlbHNlIHtcclxuICAgIEByZXR1cm4gMC45ODkyODU3MTQyODU3MTQzICogJHZhbDtcclxuICB9XHJcbn1cclxuXHJcbi8vIG15IGFkZCBtaXhpbnNcclxuLy8gLS0tLSBmcm9tIGFtYXpldWkgLS0tLS1cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gQ2FyZXRcclxuLy8gQ2FyZXQgLSBkb3duXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBtaXhpbiBjYXJldC1kb3duKCRzaXplOiA2cHgsICRjb2xvcjojMjIyKSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJvcmRlci10b3A6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuICBib3JkZXItcmlnaHQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1sZWZ0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItYm90dG9tOiAwIGRvdHRlZDtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG59XHJcblxyXG4vLyBDYXJldCAtIHVwXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBtaXhpbiBjYXJldC11cCgkc2l6ZTo2cHgsICRjb2xvcjojMjIyKSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkICRjb2xvcjtcclxuICBib3JkZXItcmlnaHQ6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1sZWZ0OiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItdG9wOiAwIGRvdHRlZDtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG59XHJcblxyXG4vLyBDYXJldCAtIGxlZnRcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIGNhcmV0LWxlZnQoJHNpemU6NnB4LCAkY29sb3I6IzIyMikge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogMDtcclxuICBoZWlnaHQ6IDA7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBib3JkZXItcmlnaHQ6ICRzaXplIHNvbGlkICRjb2xvcjtcclxuICBib3JkZXItdG9wOiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItYm90dG9tOiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItbGVmdDogMCBkb3R0ZWQ7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxufVxyXG5cclxuLy8gQ2FyZXQgLSByaWdodFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AbWl4aW4gY2FyZXQtcmlnaHQoJHNpemU6NnB4LCAkY29sb3I6IzIyMikge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogMDtcclxuICBoZWlnaHQ6IDA7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBib3JkZXItbGVmdDogJHNpemUgc29saWQgJGNvbG9yO1xyXG4gIGJvcmRlci10b3A6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1ib3R0b206ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1yaWdodDogMCBkb3R0ZWQ7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */

/*# sourceMappingURL=../../map/pages-main/baike.css.map */
