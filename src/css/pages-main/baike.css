@charset "UTF-8";
/* 百科相关页面样式 */
.side-form .form-tips {
  text-align: center; }

.layout-main .title-bar {
  border-bottom: 1px solid #eceeef;
  margin-bottom: 15px; }

.index-baike-list em, #location em, .hot-photos em {
  margin: 0 3px;
  color: #bd0401; }

.index-baike-list em {
  font-weight: bold; }

.index-top-cates {
  margin-left: -0.7%; }
  .index-top-cates .cate {
    float: left;
    width: 32.63333%;
    padding: 1em 0;
    margin-left: 0.7%;
    background-color: #fbfbfb;
    border: 1px solid #eceeef; }
  .index-top-cates .left-glyph {
    height: 4.92857em;
    text-align: center;
    padding: 0 2.07143em;
    vertical-align: middle;
    border-right: 1px solid #eceeef;
    color: #bd0401; }
    .index-top-cates .left-glyph p {
      white-space: nowrap;
      margin-top: 13px;
      font-size: 1.14286em;
      font-weight: bold; }
  .index-top-cates .label-cate {
    padding: 0 1.78571em; }
    .index-top-cates .label-cate .label {
      margin-top: 0;
      margin-bottom: 0; }
  .index-top-cates .label-title {
    color: #6f787f;
    font-size: 1.16667em;
    margin-top: .2em; }

.index-baike-list {
  padding: 1.07143em 1.71429em;
  border: 1px solid #eceeef; }
  .index-baike-list .media-newsitem {
    padding-bottom: 2.8em;
    border-bottom: 1px dashed #eceeef; }
  .index-baike-list .media-title {
    font-size: 1.45em;
    margin-bottom: .8em; }
  .index-baike-list .thumbnail {
    padding: 1px;
    border: 1px solid #eceeef; }
  .index-baike-list .img-title {
    line-height: 24px;
    text-align: center;
    margin-top: 1px;
    font-size: 0.85714em;
    background-color: #fbfbfb; }
  .index-baike-list .media-text {
    line-height: 2.14286em; }
  .index-baike-list .media-other i {
    margin: 0 0 0 5px; }
  .index-baike-list .labels {
    line-height: 1.8;
    margin-bottom: 1em;
    overflow: hidden;
    font-size: 0.85714em;
    color: #373a3c; }
    .index-baike-list .labels a {
      float: left;
      margin-right: 4px;
      padding: 0 .8em;
      border: 1px solid #dddddd;
      border-radius: 10px;
      background-color: #f2f3f4; }
  .index-baike-list .media-newsitem .media-other {
    bottom: -2.0em; }

.yuyue-form {
  background-color: #f8f8f8; }
  .yuyue-form .form-tab li:hover, .yuyue-form .form-tab li.on {
    background-color: #fff; }

.hot-labels .label-bar {
  padding: 0;
  line-height: 3; }
.hot-labels .label {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: 10em;
  padding-left: 0.71429em;
  padding-right: 0.71429em;
  background-color: #f8f8f8;
  margin-bottom: 0.71429em;
  margin-right: 0.71429em; }

.rd-zx-tabs .tabs-base li {
  width: 50%; }
  .rd-zx-tabs .tabs-base li.on, .rd-zx-tabs .tabs-base li:hover {
    font-weight: bold; }
.rd-zx-tabs .list-group-item {
  margin-bottom: 0;
  border-bottom: 1px dashed #dddddd;
  color: #55595c;
  font-size: 0.85714em; }
  .rd-zx-tabs .list-group-item .right-info {
    color: #55595c; }

.hot-brands .label-bar {
  line-height: 1.4;
  padding: 0.71429em 0.42857em;
  border-bottom: 1px solid #eceeef; }
.hot-brands .label {
  margin-right: 1.2em; }
.hot-brands .item-labels {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: 0.85714em 0.42857em;
  line-height: 1;
  color: #55595c; }
  .hot-brands .item-labels span {
    display: inline-block;
    padding: 0 12px; }
    .hot-brands .item-labels span:first-child {
      font-weight: bold;
      padding-left: 0;
      border-right: 1px solid #eceeef; }
  .hot-brands .item-labels .right-info {
    font-size: 0.85714em;
    color: #818a91; }
.hot-brands .item .icon-minus, .hot-brands .item .label-bar {
  display: none; }
.hot-brands .item.on .item-labels {
  background-color: #f8f8f8; }
  .hot-brands .item.on .item-labels span:first-child {
    color: #bd0401; }
.hot-brands .item.on .icon-plus {
  display: none; }
.hot-brands .item.on .icon-minus {
  display: inline-block; }
.hot-brands .item.on .label-bar {
  display: block;
  height: auto; }

.hot-photos .cont-block:before, .hot-photos .cont-block:after {
  content: " ";
  display: table; }
.hot-photos .cont-block:after {
  clear: both; }
.hot-photos .media-base {
  float: left;
  width: 50%;
  padding: 0 1em;
  margin-bottom: 0.71429em; }
  .hot-photos .media-base .thumbnail, .hot-photos .media-base .img {
    padding: 2px 3px; }
.hot-photos .media-explain {
  font-size: 0.85714em; }

.newstype-detail {
  border: 1px solid #eceeef; }

.correlation-cont {
  background-color: #eceeef;
  padding: 0 12px 12px; }
  .correlation-cont .title-bar .title {
    color: #bd0401;
    font-size: 1.14286em; }
  .correlation-cont .cont-line {
    padding: 1.07143em 1.28571em 0.71429em;
    background-color: #fff;
    border-bottom: 1px dashed #dddddd; }
  .correlation-cont .media-base, .correlation-cont .list-group {
    float: left;
    width: 33.33333%;
    padding: 0 1.92857em; }
  .correlation-cont .media-base {
    margin: 0;
    padding: 0 1.92857em; }
    .correlation-cont .media-base .thumbnail {
      height: 142px;
      line-height: 138.5px; }
  .correlation-cont .media-title {
    text-align: center; }
  .correlation-cont .list-dot .list-group-item:before {
    display: inline-block;
    width: 0;
    height: 0;
    vertical-align: middle;
    border-left: 3px solid #bd0401;
    border-top: 3px solid transparent;
    border-bottom: 3px solid transparent;
    border-right: 0 dotted;
    -webkit-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
    background-color: transparent;
    margin-top: -3px; }
  .correlation-cont .list-dot .list-group-item {
    padding-top: 3px;
    padding-bottom: 3px; }

.ask-top-cate .cate-tabs {
  background-color: #f8f8f8; }
.ask-top-cate .tabs-nav1 > li a {
  border-color: #eceeef; }
.ask-top-cate .tabs-nav1 > li.on a, .ask-top-cate .tabs-nav1 > li:hover a {
  color: #bd0401;
  font-weight: bold;
  background-color: #fff;
  border-bottom-color: transparent; }
.ask-top-cate .cate-conts {
  border: 1px solid #eceeef;
  border-top: none; }
  .ask-top-cate .cate-conts .label {
    color: #55595c; }
.ask-top-cate .label-bar {
  padding-top: .4em;
  padding-bottom: .4em; }
  .ask-top-cate .label-bar + .label-bar {
    display: none; }

.ask-search-bar {
  margin-bottom: 25px; }
  .ask-search-bar .search-bar .search-form-box {
    border-color: #dddddd;
    line-height: 3.07143em; }
  .ask-search-bar .search-bar .search-btn {
    letter-spacing: normal;
    padding-right: 1.8em;
    background-color: #dddddd;
    color: #373a3c;
    font-size: 1.28571em; }

.index-ask-daily .img {
  width: 23.78571em;
  height: 19em;
  line-height: 261.17143px;
  margin-right: 1.35714em;
  margin-top: 0;
  border: 1px solid #f8f8f8; }
.index-ask-daily .txtlist {
  line-height: 2.4; }
  .index-ask-daily .txtlist h4 {
    margin-bottom: 0.66667em;
    font-size: 1.28571em;
    font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu; }
  .index-ask-daily .txtlist .big-item {
    padding-bottom: 1.07143em;
    margin-bottom: 10px;
    border-bottom: 1px solid #f8f8f8;
    line-height: 1.4;
    white-space: normal; }
  .index-ask-daily .txtlist p {
    line-height: 1.8;
    color: #55595c;
    font-size: 0.85714em; }
  .index-ask-daily .txtlist em {
    color: #bd0401; }

.index-ask-new em, .ask-list-box em {
  color: #bd0401; }
.index-ask-new b, .ask-list-box b {
  color: #91b81d; }
.index-ask-new .list-group-item, .ask-list-box .list-group-item {
  padding: 1.85714em 0;
  border-bottom: 1px solid #eceeef; }
.index-ask-new .list-group-item-title, .ask-list-box .list-group-item-title {
  margin-bottom: 1.35714em;
  font-size: 1.14286em; }
.index-ask-new .right-info, .ask-list-box .right-info {
  font-size: 0.85714em; }
  .index-ask-new .right-info span, .ask-list-box .right-info span {
    margin-left: 2.14286em; }
  .index-ask-new .right-info em, .ask-list-box .right-info em {
    font-weight: bold; }
  .index-ask-new .right-info i, .ask-list-box .right-info i {
    margin-right: 0.35714em;
    vertical-align: middle;
    font-size: 1.14286em; }

.index-ask-new .title-bar {
  margin-bottom: 0; }

.ask-list-box .list-group-item-title em {
  display: inline-block;
  margin-right: 0.71429em;
  padding: 0 .8em;
  font-size: 0.875em;
  line-height: 1.5;
  border-radius: 10px;
  color: #fff;
  background-color: #ff6637; }
.ask-list-box .list-group-item.solved .list-group-item-title em {
  background-color: #91b81d; }

.index-ask-at-issue .ask-at-issue-list:before, .index-ask-at-issue .ask-at-issue-list:after {
  content: " ";
  display: table; }
.index-ask-at-issue .ask-at-issue-list:after {
  clear: both; }
.index-ask-at-issue .issue-item {
  float: left;
  width: 50%;
  padding: 0.57143em 0; }
  .index-ask-at-issue .issue-item .issue-state {
    width: 3em;
    height: 3em;
    line-height: 1.14286em;
    padding: 0.35714em 0;
    margin-right: 1.64286em;
    margin-top: 3px;
    text-align: center;
    color: #fff;
    background-color: #bd0401; }
  .index-ask-at-issue .issue-item .issue-title {
    line-height: 2; }
  .index-ask-at-issue .issue-item .issue-explain {
    color: #818a91;
    font-size: 0.85714em; }

.ask-side-form {
  background-color: #f8f8f8;
  padding-top: 0.92857em; }
  .ask-side-form .form-control {
    display: inline-block; }
  .ask-side-form .asked-num-block {
    text-align: center;
    padding: 1.92857em 1.21429em;
    background-color: #fff;
    margin-bottom: 1.07143em; }
  .ask-side-form .ask-num {
    line-height: 1;
    font-size: 28px;
    color: #fff;
    margin-bottom: 15px; }
    .ask-side-form .ask-num b {
      padding: 0 4px;
      background-color: #01af63;
      margin-left: 3px;
      border-radius: 3px; }
  .ask-side-form .ask-txt {
    color: #818a91; }
  .ask-side-form textarea {
    width: 100%; }
  .ask-side-form .ask-btn-row {
    margin-bottom: 0.71429em; }
    .ask-side-form .ask-btn-row:before, .ask-side-form .ask-btn-row:after {
      content: " ";
      display: table; }
    .ask-side-form .ask-btn-row:after {
      clear: both; }
    .ask-side-form .ask-btn-row > * {
      float: left;
      width: 28%; }
    .ask-side-form .ask-btn-row .ask-btn {
      width: 40%;
      margin-left: 4%; }
    .ask-side-form .ask-btn-row input, .ask-side-form .ask-btn-row button {
      padding: 0.28571em 0.71429em; }

.ask-list-tabs .tabs-base {
  font-weight: bold;
  color: #55595c; }
  .ask-list-tabs .tabs-base li a {
    border-bottom: none;
    margin-bottom: -2px; }
.ask-list-tabs .tabs-base {
  border-bottom: 2px solid #eceeef; }
.ask-list-tabs .tabs-base > li:hover a, .ask-list-tabs .tabs-base > li.on a {
  border-bottom: 2px solid #bd0401; }

.ask-detail .ask-sub-info span, .ask-detail .media-explain span {
  margin-right: 1.42857em; }
  .ask-detail .ask-sub-info span:after, .ask-detail .media-explain span:after {
    content: "";
    padding-right: 1.42857em;
    border-right: 1px solid #eceeef; }
.ask-detail h3 {
  margin-bottom: 1.42857em;
  font-size: 1.28571em;
  font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu; }
.ask-detail .ask-sub-info {
  font-size: 0.85714em;
  line-height: 1;
  margin-bottom: 1.16667em;
  color: #818a91; }
  .ask-detail .ask-sub-info b {
    color: #373a3c; }
.ask-detail .ask-quiz-form {
  padding: 2.14286em 1.42857em;
  background-color: #f8f8f8; }
  .ask-detail .ask-quiz-form textarea {
    width: 100%; }
.ask-detail .quiz-form-sub-info {
  text-align: right;
  margin-top: 0.71429em;
  color: #818a91; }
  .ask-detail .quiz-form-sub-info:before, .ask-detail .quiz-form-sub-info:after {
    content: " ";
    display: table; }
  .ask-detail .quiz-form-sub-info:after {
    clear: both; }
  .ask-detail .quiz-form-sub-info i {
    margin-right: 5px; }
  .ask-detail .quiz-form-sub-info em {
    color: #fd8a17; }

.ask-details-list .title-bar {
  margin-bottom: 0; }
  .ask-details-list .title-bar em {
    color: #bd0401;
    margin: 0 8px; }
.ask-details-list .detail-item {
  position: relative;
  padding: 2.5em 0.71429em 0.71429em;
  border-bottom: 1px dashed #eceeef; }
.ask-details-list .media-small-imgtxt {
  margin-bottom: 1.78571em; }
.ask-details-list .img {
  width: 4em;
  height: 56px;
  line-height: 53.42143px; }
.ask-details-list .media-title {
  font-size: 1em;
  margin-bottom: 1em;
  color: #02ae66; }
.ask-details-list .media-explain {
  font-size: 0.85714em; }
.ask-details-list .detail-cont {
  line-height: 1.8;
  color: #55595c; }
.ask-details-list .bottom-sub-info {
  margin-top: 1.57143em;
  text-align: right;
  color: #818a91; }
  .ask-details-list .bottom-sub-info span {
    margin-left: 1.07143em; }
  .ask-details-list .bottom-sub-info i {
    margin-right: 3px;
    color: #fd8a17; }
.ask-details-list .accepted-icon {
  position: absolute;
  right: 30%;
  top: 30px; }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../../map/pages-main/baike.css.map */
