.m-photo {
  position: relative;
  overflow: hidden; }

.m-photo .current {
  float: left;
  position: relative;
  width: 854px;
  overflow: hidden;
  text-align: center;
  padding: 10px 0; }

.m-photo .current img {
  height: auto;
  width: auto;
  max-width: 100%;
  vertical-align: middle; }

.m-photo .current .ad {
  width: 100%;
  text-align: center;
  position: absolute;
  bottom: 10px;
  z-index: 8888;
  height: 30px;
  line-height: 30px; }

.m-photo a.prev, .m-photo a.next {
  z-index: 87; }

.m-photo .prevSpan, .m-photo .nextSpan {
  z-index: 88; }

.m-photo .col_off {
  z-index: 89;
  right: 134px; }

.m-photo a.prev, .m-photo a.next {
  display: inline-block;
  visibility: hidden;
  width: 32px;
  position: absolute; }

.m-photo .prevSpan, .m-photo .nextSpan {
  position: absolute;
  top: 0;
  display: none;
  width: 40%;
  cursor: pointer; }

.m-photo .prevSpan {
  left: 0; }

.m-photo .nextSpan {
  right: 0; }

.m-photo .listImg {
  float: right;
  text-align: center;
  width: 102px;
  padding: 11px 10px;
  background-color: #4c4c4c; }

.m-photo .listImg .imgsDiv {
  position: relative;
  height: 488px;
  width: 102px;
  overflow: hidden; }

.m-photo .listImg ul {
  position: relative;
  overflow: hidden; }

.m-photo .listImg .btnCtrl {
  display: inline-block;
  height: 22px;
  cursor: pointer;
  margin: 0; }

.m-photo .listImg .btnCtrl.prev {
  margin-bottom: 10px; }

.m-photo .listImg .btnCtrl.next {
  margin-top: 10px; }

.m-listImg li, .m-listImg2 li {
  height: 94px;
  width: 102px;
  line-height: 85px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin: 3px 0;
  padding: 2px 0;
  overflow: hidden; }

.m-listImg li img, .m-listImg2 li img {
  width: 100%;
  height: auto;
  max-height: 100%;
  vertical-align: middle;
  cursor: pointer; }

.m-listImg li.on, .m-listImg2 li.on {
  border: 2px solid #88C248;
  line-height: 83px; }

.m-listImg li.on img, .m-listImg2 li.on img {
  max-height: 100%; }

.album {
  position: relative;
  height: 100px;
  overflow: hidden;
  text-align: center; }

.album ul {
  display: inline-block;
  width: 800px; }

.album .prevAlbum, .album .nextAlbum {
  position: absolute;
  top: 35px;
  height: 30px;
  line-height: 30px;
  padding: 0 10px;
  background: #A1A1A1;
  color: #fff;
  font-weight: bold; }

.album .prevAlbum:hover, .album .nextAlbum:hover {
  background: #7E7777;
  text-decoration: none; }

.album .prevAlbum {
  left: 5px;
  border-radius: 15px 0 0 15px; }

.album .nextAlbum {
  right: 5px;
  border-radius: 0 15px 15px 0; }

.m-listImg2 {
  overflow: hidden; }

.m-listImg2 li {
  float: left;
  height: 100px;
  line-height: 94px;
  width: 12%;
  margin: 0 0.25%;
  padding: 0 2px; }

.m-listImg2 li.on {
  line-height: 92px; }

.filter-box2 .filter-body {
  border-bottom-color: #bd0401; }
.filter-box2 .more-type a {
  border-color: #bd0401; }

#waterfall-warp1 {
  margin: auto;
  position: relative; }

.xiaoguotu-list {
  padding: 16px 14px;
  background-color: #f8f8f8; }
  .xiaoguotu-list .media-base {
    padding: 8px;
    -webkit-box-shadow: 0 0 8px #ccc;
    box-shadow: 0 0 8px #ccc;
    background-color: #fff; }
    .xiaoguotu-list .media-base .media-title {
      padding: 0.35714em 0;
      margin-bottom: .3em; }
      .xiaoguotu-list .media-base .media-title b {
        color: #818a91;
        margin-right: 5px; }
    .xiaoguotu-list .media-base em, .xiaoguotu-list .media-base .like-btn i {
      margin: 0 3px; }
    .xiaoguotu-list .media-base em {
      color: #bd0401; }
    .xiaoguotu-list .media-base .media-explain {
      font-size: 0.85714em;
      text-align: right; }
    .xiaoguotu-list .media-base .thumbnail {
      border: none; }
    .xiaoguotu-list .media-base .like-btn {
      float: left;
      line-height: 1.8em;
      padding: 0 1.2em;
      border: 1px solid #dddddd;
      border-radius: 7px;
      background-color: #fff; }
      .xiaoguotu-list .media-base .like-btn i {
        color: #d0d0d0; }
      .xiaoguotu-list .media-base .like-btn:hover {
        color: #bd0401; }
      .xiaoguotu-list .media-base .like-btn:hover i, .xiaoguotu-list .media-base .like-btn.on i {
        color: #bd0401; }
    .xiaoguotu-list .media-base:hover {
      -webkit-box-shadow: 0 0 10px #999;
      box-shadow: 0 0 10px #999;
      background-color: #f3f3f3; }
      .xiaoguotu-list .media-base:hover .u-btn-collect {
        font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu;
        display: inline-block; }
        .xiaoguotu-list .media-base:hover .u-btn-collect i {
          margin-right: 3px; }

.head-cont {
  line-height: 26px;
  border: 1px solid #dddddd; }
  .head-cont .breadcrumb-arrow, .head-cont .right-cont {
    padding: 8px 10px 6px; }
  .head-cont .right-cont i {
    display: inline-block;
    margin-bottom: 2px;
    margin-right: 5px;
    font-size: 1.33333em;
    vertical-align: middle; }
  .head-cont .right-cont .img {
    display: none;
    position: absolute;
    top: 26px;
    left: 0;
    z-index: 1000;
    padding: 10px;
    background-color: #fff;
    border: 1px solid #dddddd; }
  .head-cont .right-cont .weixin {
    position: relative; }
    .head-cont .right-cont .weixin:hover .img {
      display: inline-block; }
  .head-cont .right-cont li {
    float: left;
    margin-left: 1em;
    font-size: 0.85714em; }
    .head-cont .right-cont li + li {
      cursor: pointer;
      padding: 0 .8em;
      background-color: #bd0401;
      color: #fff;
      border-radius: 12px; }

.tu-photo {
  background-color: #4c4c4c;
  color: #fff;
  border-bottom: 1px solid transparent; }
  .tu-photo .title {
    line-height: 4;
    font-size: 1.14286em;
    text-align: left; }
  .tu-photo .current .prev, .tu-photo .current .next, .tu-photo .listImg .prev, .tu-photo .listImg .next {
    font-size: 60px; }
  .tu-photo .current {
    width: 100%;
    padding: 0 31px;
    background-color: #3c3c3c; }
    .tu-photo .current .prev, .tu-photo .current .next {
      height: 160px;
      line-height: 158.28571px;
      color: #55595c;
      background-color: #fff; }
    .tu-photo .current .prev {
      left: 10px; }
    .tu-photo .current .next {
      right: 10px; }
    .tu-photo .current .img {
      height: 520px;
      line-height: 514.42857px; }
    .tu-photo .current:hover .u-btn-collect {
      display: inline-block; }
  .tu-photo .m-photo {
    padding-right: 122px; }
  .tu-photo .listImg {
    text-align: center;
    margin-right: -122px;
    width: 122px; }
    .tu-photo .listImg .btnCtrl {
      overflow: hidden; }
    .tu-photo .listImg i {
      display: block;
      margin-top: -20px; }
  .tu-photo .m-listImg li, .tu-photo .m-listImg2 li {
    text-align: center; }
  .tu-photo .album {
    padding: 0 89px;
    margin: 15px 0;
    text-align: center; }

.photo-share {
  margin-top: 0.71429em;
  margin-left: 0.71429em; }
  .photo-share .collect-btn {
    display: inline-block;
    line-height: 1.6;
    padding-left: 1em;
    padding-right: .6em;
    border-radius: .8em;
    color: #fff;
    background-color: #bd0401; }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../../map/pages-main/tu.css.map */
