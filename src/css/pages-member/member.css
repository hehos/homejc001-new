#header {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 40px;
  padding: 18px 0;
  line-height: 40px;
  margin-bottom: 0;
  background-color: #bd0401;
  color: #ffffff; }
  #header .logo, #header h1 {
    float: left; }
  #header .logo {
    float: left;
    padding-right: 15px;
    margin-right: 15px;
    border-right: 1px solid #ffffff; }
  #header h1 {
    width: 170px;
    font-size: 28px;
    font-family: "microsoft yahei", simsun; }
  #header .nav-box li {
    float: left;
    padding: 0 30px;
    text-align: center;
    font-size: 16px; }
  #header .welcome-box {
    font-size: 12px; }
    #header .welcome-box .name {
      font-weight: bold; }
    #header .welcome-box .exit {
      margin-left: 6px; }

.body-wrap {
  padding: 38px 0;
  background-color: #fafafb; }

.white-block {
  background-color: #fff; }

.side-nav {
  width: 14.28571%; }
  .side-nav .title {
    padding-left: 1.2em;
    color: #55595c; }

.main-wrap {
  width: 85.71429%; }

.corp-intro {
  padding: 1.2em;
  margin-bottom: 20px;
  background-image: url("../../img/pages-member/corp-intro-bg.png?v=0757bdc312");
  background-position: right bottom;
  background-repeat: no-repeat; }
  .corp-intro .logo {
    float: left;
    margin-right: 2em;
    border: 1px solid #eceeef; }
  .corp-intro .intro-cont {
    display: block;
    overflow: hidden;
    line-height: 2.2em; }
    .corp-intro .intro-cont h4 {
      padding-bottom: .5em;
      font-size: 1.3em;
      line-height: 1.4;
      font-family: "microsoft yahei", simsun; }
    .corp-intro .intro-cont ul:before, .corp-intro .intro-cont ul:after {
      content: " ";
      display: table; }
    .corp-intro .intro-cont ul:after {
      clear: both; }
    .corp-intro .intro-cont li {
      float: left;
      width: 50%;
      color: #747d85; }

.finance-info h3, .contact-us h3 {
  font-size: 16px;
  line-height: 2; }

.finance-info {
  width: 75%; }

.money-info {
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#66FDFEEC, endColorstr=#66FDFEEC)";
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#66FDFEEC, endColorstr=#66FDFEEC);
  background-color: rgba(253, 254, 236, 0.4);
  height: 8em;
  line-height: 2em; }
  .money-info .left, .money-info .right {
    width: 50%;
    height: 100%;
    padding: 1em 2em;
    background-position: right top;
    background-repeat: no-repeat; }
    .money-info .left .num, .money-info .right .num {
      font-size: 18px;
      font-family: "microsoft yahei", simsun;
      color: #55595c; }
      .money-info .left .num span, .money-info .right .num span {
        margin-right: 5px; }
  .money-info .left {
    background-image: url("../../img/pages-member/cw-bao-bg.png?v=2bd2268893"); }
    .money-info .left .num span {
      font-weight: bold;
      font-size: 1.1em; }
  .money-info .right {
    border-left: 1px solid #eceeef;
    background-image: url("../../img/pages-member/cw-yue-bg.png?v=070f7710b7"); }

.finance-detail {
  padding: 0 24px;
  font-size: 16px;
  color: #747d85; }
  .finance-detail li {
    padding: 15px 0;
    line-height: 60px; }
    .finance-detail li .type-items {
      display: block;
      overflow: hidden; }
      .finance-detail li .type-items:before, .finance-detail li .type-items:after {
        content: " ";
        display: table; }
      .finance-detail li .type-items:after {
        clear: both; }
    .finance-detail li + li {
      border-top: 1px dashed #eceeef; }
    .finance-detail li a {
      float: left;
      padding-left: 35px;
      width: 33.33333%; }
      .finance-detail li a + a {
        border-left: 1px solid #eceeef; }
  .finance-detail .finance-type {
    float: left;
    width: 60px;
    height: 60px;
    line-height: 60px;
    text-align: center;
    margin-left: 17px;
    border-radius: 50%; }
    .finance-detail .finance-type.type1 {
      color: #ea746b;
      border: 1px solid #ea746b; }
    .finance-detail .finance-type.type2 {
      color: #0291ff;
      border: 1px solid #0291ff; }
    .finance-detail .finance-type.type3 {
      color: #91b81d;
      border: 1px solid #91b81d; }

.contact-us {
  width: 25%;
  padding-left: 20px; }
  .contact-us .contact-info, .contact-us .qrcode {
    color: #747d85; }
  .contact-us .contact-info {
    line-height: 2.5em;
    padding: 1.2em;
    border-bottom: 1px solid #eceeef; }
  .contact-us .qrcode {
    padding: 2em 0;
    text-align: center; }
    .contact-us .qrcode p {
      padding-top: 1.5em; }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../../map/pages-member/member.css.map */
