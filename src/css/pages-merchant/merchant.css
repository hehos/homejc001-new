@charset "UTF-8";
.title-bar {
  padding-bottom: 1em; }
  .title-bar .title {
    font-size: 2em; }

.index-title-bar {
  margin-top: 1.42857em; }

.carousel-inner > .item > img, .carousel-inner > .item > a > img {
  height: 360px; }

.media-base .media-title, .media-base .media-explain {
  padding-left: 1em;
  padding-right: 1em; }
.media-base .thumbnail {
  text-align: center; }
  .media-base .thumbnail:hover, .media-base .thumbnail:focus {
    border-color: #bd0401; }
  .media-base .thumbnail img {
    vertical-align: middle; }

.nav-base .nav-item {
  line-height: 2.4em; }

.case [class^="col-"], .case [class*=" col-"] {
  padding-right: 10px;
  padding-left: 10px; }

.product .media-base .thumbnail, .case .media-base .thumbnail {
  height: 279px;
  line-height: 274.03214px; }
.product .media-base .media-title, .case .media-base .media-title {
  padding-right: 75px; }

.main-warp .media-base .thumbnail {
  height: 206px;
  line-height: 201.81429px; }

.case-info .img {
  height: 370px;
  line-height: 364.05714px; }

.product-info .img {
  height: 380px;
  line-height: 373.95px; }

.cont-logo {
  text-align: center;
  border: 1px solid #eceeef; }
  .cont-logo img {
    width: auto;
    vertical-align: middle; }

.corp-intro .cont-logo {
  width: 150px;
  height: 150px;
  line-height: 140px; }

.corp-contact .cont-logo {
  width: 225px;
  padding: 4px 6px;
  height: 145px;
  line-height: 132px;
  border: 1px solid #eceeef; }

.body-wrap {
  position: relative;
  margin-top: -1.1em;
  padding: 0; }

.side-nav {
  position: absolute;
  height: 100%;
  width: 16.66667%;
  padding-top: 2em;
  background-color: #fafafb; }
  .side-nav li {
    padding-left: 1.57143em; }
    .side-nav li:hover, .side-nav li.on {
      background-color: #f4f5f6; }
      .side-nav li:hover i, .side-nav li.on i {
        border-color: #bd0401; }
  .side-nav i {
    display: inline-block;
    width: 14px;
    height: 14px;
    line-height: 12px;
    margin-right: .8em;
    text-align: center;
    border: 1px solid #818a91;
    border-radius: 50%;
    font-size: 10px; }

.main-warp {
  width: 83.33333%;
  padding-left: 28px; }
  .main-warp h2 {
    font-size: 2em;
    padding: 1em 0;
    margin-top: .3em;
    font-family: "microsoft yahei", simsun;
    border-bottom: 1px solid #eceeef;
    margin-bottom: 1em; }
  .main-warp h3 {
    font-size: 1.4em;
    line-height: 2em;
    font-family: "microsoft yahei", simsun; }

table {
  line-height: 3.5em;
  border: 1px solid #f8f8f8;
  border-bottom: none; }
  table th, table td {
    border-bottom: 1px solid #f8f8f8; }
  table th {
    background-color: #fafafb;
    text-align: center; }
  table td {
    padding: 0 1em; }

.cont-logo {
  float: left;
  margin-right: 20px; }

.otherInfo, .side-product {
  border: 1px solid #eceeef; }

.side-product {
  padding: .3em 1em; }
  .side-product .title-bar {
    margin-top: 0; }
    .side-product .title-bar .title {
      font-size: 1.4em; }
  .side-product .media-base {
    text-align: center; }

.product .media-base {
  padding-bottom: 1em;
  background-color: #fafafb; }
  .product .media-base .media-title {
    font-size: 1.4em;
    font-family: "microsoft yahei", simsun; }
  .product .media-base .media-btn {
    bottom: 3.5em; }

.case .media-base {
  text-align: center;
  border: 6px solid #fafafb; }
  .case .media-base .media-explain {
    color: #818a91; }

.header-center .container, .header-bottom .container {
  position: relative; }

.header-center {
  position: relative;
  padding: 1.4em 1em 1em;
  z-index: 10; }

.header-logo {
  padding-left: 130px; }
  .header-logo h1 {
    margin-top: 5px;
    margin-bottom: 15px;
    font-size: 26px;
    font-family: "microsoft yahei", simsun;
    font-weight: bold; }
  .header-logo .logo-img {
    position: absolute;
    bottom: -54px;
    left: 0;
    border: 1px solid #dddddd;
    border-bottom: none;
    width: 125px;
    height: 125px;
    line-height: 120px;
    vertical-align: middle;
    text-align: center;
    overflow: hidden;
    background-color: #fff; }
  .header-logo .logo-cont {
    line-height: 1.2;
    padding-left: 0;
    border-left: none; }

.header-share {
  position: absolute;
  right: 0;
  bottom: 10px; }
  .header-share li {
    float: left;
    color: #818a91; }
    .header-share li + li {
      margin-right: 1em; }
  .header-share i {
    vertical-align: middle; }

.header-bottom {
  background-color: #bd0401;
  color: #fff;
  border-top: 1px solid #000;
  margin-top: 0; }
  .header-bottom .container {
    background-color: transparent; }
  .header-bottom .header-nav {
    padding-left: 124px; }
  .header-bottom .nav-item:before {
    display: none; }
  .header-bottom .nav-item:hover, .header-bottom .nav-item.on {
    background-color: #d60501;
    outline: none; }
  .header-bottom .right-call, .header-bottom .right-top-btn {
    position: absolute;
    right: 0;
    bottom: 4px;
    font-size: 22px;
    font-weight: bold; }
    .header-bottom .right-call i, .header-bottom .right-top-btn i {
      margin-right: 15px;
      vertical-align: bottom; }
  .header-bottom .right-top-btn {
    bottom: 0; }

.banner-form {
  float: right; }

.banner-media {
  float: left; }

.liangfang-and-corp .liangfang-cont, .liangfang-and-corp .corp-cont {
  height: 300px;
  overflow: hidden; }

.liangfang-area {
  width: 73%; }
  .liangfang-area .title-bar .other-info {
    line-height: 1.4;
    height: 1.4em;
    margin-top: 1.6em;
    margin-left: 15px;
    background-color: #bd0401;
    color: #fff;
    padding: 0 6px;
    font-family: "宋体", serif; }
  .liangfang-area table {
    width: 100%;
    line-height: 3em; }
  .liangfang-area th, .liangfang-area td {
    text-align: center; }
  .liangfang-area th {
    font-weight: normal;
    font-family: "microsoft yahei", simsun; }
  .liangfang-area .scrolltableHead th {
    background-color: #fafafb; }

.corp-area {
  width: 25%;
  line-height: 2.5em; }
  .corp-area .corp-cont {
    padding: 1em 1.2em;
    background-color: #fafafb; }
  .corp-area p {
    text-indent: 2em; }

.main-warp .corp-cont {
  overflow: hidden;
  margin-bottom: 2em; }
  .main-warp .corp-cont p {
    line-height: 2em;
    margin-bottom: 1.5em; }
.main-warp .corp-contact h5 {
  font-size: 1.6em;
  font-family: "microsoft yahei", simsun;
  margin-bottom: .5em; }
.main-warp .corp-contact p {
  font-size: .8em;
  color: #55595c; }
.main-warp .corp-contact .btn-row {
  margin-top: 1em;
  background-color: #fafafb;
  font-size: 1.4em;
  line-height: 2.5em; }
  .main-warp .corp-contact .btn-row button {
    margin-right: 2em; }
  .main-warp .corp-contact .btn-row .call {
    color: #bd0401; }

.case-info .media-info, .product-info .media-info {
  width: 47.33333%;
  padding-right: 68px; }
.case-info .info, .product-info .info {
  width: 52.66667%; }
.case-info .img, .product-info .img {
  padding: 2px;
  border: 1px solid #dee2e3; }
.case-info h4, .product-info h4 {
  font-size: 1.6em;
  font-weight: bold;
  padding: .5em 0 .8em; }
.case-info li, .product-info li {
  line-height: 3.5em;
  border-bottom: 1px solid #f8f8f8;
  color: #55595c; }
  .case-info li .money, .product-info li .money {
    font-size: 1.8em;
    color: #bd0401;
    font-family: "microsoft yahei", simsun; }
.case-info .btn-row, .product-info .btn-row {
  margin-top: 1.5em; }

.case-info h4 {
  border-bottom: 1px solid #f8f8f8; }

.product-info .btn-row {
  margin-bottom: 1em; }

.case-otherInfo, .product-otherInfo {
  margin-top: 2em; }
  .case-otherInfo .info-title, .product-otherInfo .info-title {
    background-color: #f8f8f8; }
  .case-otherInfo .tabs-nav3, .product-otherInfo .tabs-nav3 {
    font-size: 1.28571em; }
  .case-otherInfo .otherInfo .details-cont, .product-otherInfo .otherInfo .details-cont {
    padding: 1.5em; }
    .case-otherInfo .otherInfo .details-cont + .details-cont, .product-otherInfo .otherInfo .details-cont + .details-cont {
      display: none; }

.tabs-nav3 {
  background-color: transparent;
  border-bottom-color: #eceeef;
  border-top-color: #eceeef; }

.tabs-nav3 > li {
  width: auto; }

.tabs-nav3 > li > a {
  padding: 0 1.5em;
  font-size: 1em; }

.case-otherInfo .info-title {
  line-height: 3em;
  padding-left: 1em;
  padding-right: 1em;
  font-weight: bold;
  border-top: 2px solid #ebebeb; }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../../map/pages-merchant/merchant.css.map */
